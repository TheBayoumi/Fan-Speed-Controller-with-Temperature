
Mahmoud_Bayoumi_Mini_project3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003ada  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000122  00800060  00003ada  00003b4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001da0  00000000  00000000  00003c70  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000e3f  00000000  00000000  00005a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  0000684f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000231  00000000  00000000  00006a2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d2f  00000000  00000000  00006c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015f7  00000000  00000000  0000998f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000145d  00000000  00000000  0000af86  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000c3e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000375  00000000  00000000  0000c5e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018ae  00000000  00000000  0000c959  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000e207  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ed       	ldi	r30, 0xDA	; 218
      68:	fa e3       	ldi	r31, 0x3A	; 58
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 85 1b 	call	0x370a	; 0x370a <main>
      7a:	0c 94 6b 1d 	jmp	0x3ad6	; 0x3ad6 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__muldi3>:
      82:	a0 e3       	ldi	r26, 0x30	; 48
      84:	b0 e0       	ldi	r27, 0x00	; 0
      86:	e7 e4       	ldi	r30, 0x47	; 71
      88:	f0 e0       	ldi	r31, 0x00	; 0
      8a:	0c 94 03 1d 	jmp	0x3a06	; 0x3a06 <__prologue_saves__>
      8e:	a8 e0       	ldi	r26, 0x08	; 8
      90:	4e 01       	movw	r8, r28
      92:	08 94       	sec
      94:	81 1c       	adc	r8, r1
      96:	91 1c       	adc	r9, r1
      98:	f4 01       	movw	r30, r8
      9a:	ba 2f       	mov	r27, r26
      9c:	11 92       	st	Z+, r1
      9e:	ba 95       	dec	r27
      a0:	e9 f7       	brne	.-6      	; 0x9c <__muldi3+0x1a>
      a2:	29 83       	std	Y+1, r18	; 0x01
      a4:	3a 83       	std	Y+2, r19	; 0x02
      a6:	4b 83       	std	Y+3, r20	; 0x03
      a8:	5c 83       	std	Y+4, r21	; 0x04
      aa:	6d 83       	std	Y+5, r22	; 0x05
      ac:	7e 83       	std	Y+6, r23	; 0x06
      ae:	8f 83       	std	Y+7, r24	; 0x07
      b0:	98 87       	std	Y+8, r25	; 0x08
      b2:	ce 01       	movw	r24, r28
      b4:	09 96       	adiw	r24, 0x09	; 9
      b6:	fc 01       	movw	r30, r24
      b8:	11 92       	st	Z+, r1
      ba:	aa 95       	dec	r26
      bc:	e9 f7       	brne	.-6      	; 0xb8 <__muldi3+0x36>
      be:	a9 86       	std	Y+9, r10	; 0x09
      c0:	ba 86       	std	Y+10, r11	; 0x0a
      c2:	cb 86       	std	Y+11, r12	; 0x0b
      c4:	dc 86       	std	Y+12, r13	; 0x0c
      c6:	ed 86       	std	Y+13, r14	; 0x0d
      c8:	fe 86       	std	Y+14, r15	; 0x0e
      ca:	0f 87       	std	Y+15, r16	; 0x0f
      cc:	18 8b       	std	Y+16, r17	; 0x10
      ce:	29 81       	ldd	r18, Y+1	; 0x01
      d0:	3a 81       	ldd	r19, Y+2	; 0x02
      d2:	4b 81       	ldd	r20, Y+3	; 0x03
      d4:	5c 81       	ldd	r21, Y+4	; 0x04
      d6:	2d a7       	std	Y+45, r18	; 0x2d
      d8:	3e a7       	std	Y+46, r19	; 0x2e
      da:	4f a7       	std	Y+47, r20	; 0x2f
      dc:	58 ab       	std	Y+48, r21	; 0x30
      de:	79 01       	movw	r14, r18
      e0:	8a 01       	movw	r16, r20
      e2:	8f ef       	ldi	r24, 0xFF	; 255
      e4:	9f ef       	ldi	r25, 0xFF	; 255
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e8 22       	and	r14, r24
      ec:	f9 22       	and	r15, r25
      ee:	0a 23       	and	r16, r26
      f0:	1b 23       	and	r17, r27
      f2:	1a 01       	movw	r2, r20
      f4:	44 24       	eor	r4, r4
      f6:	55 24       	eor	r5, r5
      f8:	29 85       	ldd	r18, Y+9	; 0x09
      fa:	3a 85       	ldd	r19, Y+10	; 0x0a
      fc:	4b 85       	ldd	r20, Y+11	; 0x0b
      fe:	5c 85       	ldd	r21, Y+12	; 0x0c
     100:	29 a7       	std	Y+41, r18	; 0x29
     102:	3a a7       	std	Y+42, r19	; 0x2a
     104:	4b a7       	std	Y+43, r20	; 0x2b
     106:	5c a7       	std	Y+44, r21	; 0x2c
     108:	59 01       	movw	r10, r18
     10a:	6a 01       	movw	r12, r20
     10c:	a8 22       	and	r10, r24
     10e:	b9 22       	and	r11, r25
     110:	ca 22       	and	r12, r26
     112:	db 22       	and	r13, r27
     114:	3a 01       	movw	r6, r20
     116:	88 24       	eor	r8, r8
     118:	99 24       	eor	r9, r9
     11a:	c6 01       	movw	r24, r12
     11c:	b5 01       	movw	r22, r10
     11e:	a8 01       	movw	r20, r16
     120:	97 01       	movw	r18, r14
     122:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     126:	6d a3       	std	Y+37, r22	; 0x25
     128:	7e a3       	std	Y+38, r23	; 0x26
     12a:	8f a3       	std	Y+39, r24	; 0x27
     12c:	98 a7       	std	Y+40, r25	; 0x28
     12e:	c4 01       	movw	r24, r8
     130:	b3 01       	movw	r22, r6
     132:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     136:	69 a3       	std	Y+33, r22	; 0x21
     138:	7a a3       	std	Y+34, r23	; 0x22
     13a:	8b a3       	std	Y+35, r24	; 0x23
     13c:	9c a3       	std	Y+36, r25	; 0x24
     13e:	c6 01       	movw	r24, r12
     140:	b5 01       	movw	r22, r10
     142:	a2 01       	movw	r20, r4
     144:	91 01       	movw	r18, r2
     146:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     14a:	7b 01       	movw	r14, r22
     14c:	8c 01       	movw	r16, r24
     14e:	c4 01       	movw	r24, r8
     150:	b3 01       	movw	r22, r6
     152:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     156:	5b 01       	movw	r10, r22
     158:	6c 01       	movw	r12, r24
     15a:	89 a1       	ldd	r24, Y+33	; 0x21
     15c:	9a a1       	ldd	r25, Y+34	; 0x22
     15e:	ab a1       	ldd	r26, Y+35	; 0x23
     160:	bc a1       	ldd	r27, Y+36	; 0x24
     162:	8e 0d       	add	r24, r14
     164:	9f 1d       	adc	r25, r15
     166:	a0 1f       	adc	r26, r16
     168:	b1 1f       	adc	r27, r17
     16a:	89 a3       	std	Y+33, r24	; 0x21
     16c:	9a a3       	std	Y+34, r25	; 0x22
     16e:	ab a3       	std	Y+35, r26	; 0x23
     170:	bc a3       	std	Y+36, r27	; 0x24
     172:	2d a1       	ldd	r18, Y+37	; 0x25
     174:	3e a1       	ldd	r19, Y+38	; 0x26
     176:	4f a1       	ldd	r20, Y+39	; 0x27
     178:	58 a5       	ldd	r21, Y+40	; 0x28
     17a:	ca 01       	movw	r24, r20
     17c:	aa 27       	eor	r26, r26
     17e:	bb 27       	eor	r27, r27
     180:	29 a1       	ldd	r18, Y+33	; 0x21
     182:	3a a1       	ldd	r19, Y+34	; 0x22
     184:	4b a1       	ldd	r20, Y+35	; 0x23
     186:	5c a1       	ldd	r21, Y+36	; 0x24
     188:	28 0f       	add	r18, r24
     18a:	39 1f       	adc	r19, r25
     18c:	4a 1f       	adc	r20, r26
     18e:	5b 1f       	adc	r21, r27
     190:	29 a3       	std	Y+33, r18	; 0x21
     192:	3a a3       	std	Y+34, r19	; 0x22
     194:	4b a3       	std	Y+35, r20	; 0x23
     196:	5c a3       	std	Y+36, r21	; 0x24
     198:	2e 15       	cp	r18, r14
     19a:	3f 05       	cpc	r19, r15
     19c:	40 07       	cpc	r20, r16
     19e:	51 07       	cpc	r21, r17
     1a0:	40 f4       	brcc	.+16     	; 0x1b2 <__muldi3+0x130>
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	a1 e0       	ldi	r26, 0x01	; 1
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	a8 0e       	add	r10, r24
     1ac:	b9 1e       	adc	r11, r25
     1ae:	ca 1e       	adc	r12, r26
     1b0:	db 1e       	adc	r13, r27
     1b2:	89 a1       	ldd	r24, Y+33	; 0x21
     1b4:	9a a1       	ldd	r25, Y+34	; 0x22
     1b6:	ab a1       	ldd	r26, Y+35	; 0x23
     1b8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ba:	9d 01       	movw	r18, r26
     1bc:	44 27       	eor	r20, r20
     1be:	55 27       	eor	r21, r21
     1c0:	2a 0d       	add	r18, r10
     1c2:	3b 1d       	adc	r19, r11
     1c4:	4c 1d       	adc	r20, r12
     1c6:	5d 1d       	adc	r21, r13
     1c8:	2d 8f       	std	Y+29, r18	; 0x1d
     1ca:	3e 8f       	std	Y+30, r19	; 0x1e
     1cc:	4f 8f       	std	Y+31, r20	; 0x1f
     1ce:	58 a3       	std	Y+32, r21	; 0x20
     1d0:	6c 01       	movw	r12, r24
     1d2:	bb 24       	eor	r11, r11
     1d4:	aa 24       	eor	r10, r10
     1d6:	8d a1       	ldd	r24, Y+37	; 0x25
     1d8:	9e a1       	ldd	r25, Y+38	; 0x26
     1da:	af a1       	ldd	r26, Y+39	; 0x27
     1dc:	b8 a5       	ldd	r27, Y+40	; 0x28
     1de:	a0 70       	andi	r26, 0x00	; 0
     1e0:	b0 70       	andi	r27, 0x00	; 0
     1e2:	a8 0e       	add	r10, r24
     1e4:	b9 1e       	adc	r11, r25
     1e6:	ca 1e       	adc	r12, r26
     1e8:	db 1e       	adc	r13, r27
     1ea:	a9 8e       	std	Y+25, r10	; 0x19
     1ec:	ba 8e       	std	Y+26, r11	; 0x1a
     1ee:	cb 8e       	std	Y+27, r12	; 0x1b
     1f0:	dc 8e       	std	Y+28, r13	; 0x1c
     1f2:	9a 8c       	ldd	r9, Y+26	; 0x1a
     1f4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     1f6:	7c 8c       	ldd	r7, Y+28	; 0x1c
     1f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     1fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
     1fc:	78 a1       	ldd	r23, Y+32	; 0x20
     1fe:	fe 01       	movw	r30, r28
     200:	71 96       	adiw	r30, 0x11	; 17
     202:	88 e0       	ldi	r24, 0x08	; 8
     204:	df 01       	movw	r26, r30
     206:	1d 92       	st	X+, r1
     208:	8a 95       	dec	r24
     20a:	e9 f7       	brne	.-6      	; 0x206 <__muldi3+0x184>
     20c:	2d 8b       	std	Y+21, r18	; 0x15
     20e:	9e 8b       	std	Y+22, r25	; 0x16
     210:	6f 8b       	std	Y+23, r22	; 0x17
     212:	78 8f       	std	Y+24, r23	; 0x18
     214:	2d 85       	ldd	r18, Y+13	; 0x0d
     216:	3e 85       	ldd	r19, Y+14	; 0x0e
     218:	4f 85       	ldd	r20, Y+15	; 0x0f
     21a:	58 89       	ldd	r21, Y+16	; 0x10
     21c:	6d a5       	ldd	r22, Y+45	; 0x2d
     21e:	7e a5       	ldd	r23, Y+46	; 0x2e
     220:	8f a5       	ldd	r24, Y+47	; 0x2f
     222:	98 a9       	ldd	r25, Y+48	; 0x30
     224:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     228:	7b 01       	movw	r14, r22
     22a:	8c 01       	movw	r16, r24
     22c:	2d 81       	ldd	r18, Y+5	; 0x05
     22e:	3e 81       	ldd	r19, Y+6	; 0x06
     230:	4f 81       	ldd	r20, Y+7	; 0x07
     232:	58 85       	ldd	r21, Y+8	; 0x08
     234:	69 a5       	ldd	r22, Y+41	; 0x29
     236:	7a a5       	ldd	r23, Y+42	; 0x2a
     238:	8b a5       	ldd	r24, Y+43	; 0x2b
     23a:	9c a5       	ldd	r25, Y+44	; 0x2c
     23c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     240:	e6 0e       	add	r14, r22
     242:	f7 1e       	adc	r15, r23
     244:	08 1f       	adc	r16, r24
     246:	19 1f       	adc	r17, r25
     248:	6d 89       	ldd	r22, Y+21	; 0x15
     24a:	7e 89       	ldd	r23, Y+22	; 0x16
     24c:	8f 89       	ldd	r24, Y+23	; 0x17
     24e:	98 8d       	ldd	r25, Y+24	; 0x18
     250:	6e 0d       	add	r22, r14
     252:	7f 1d       	adc	r23, r15
     254:	80 1f       	adc	r24, r16
     256:	91 1f       	adc	r25, r17
     258:	6d 8b       	std	Y+21, r22	; 0x15
     25a:	7e 8b       	std	Y+22, r23	; 0x16
     25c:	8f 8b       	std	Y+23, r24	; 0x17
     25e:	98 8f       	std	Y+24, r25	; 0x18
     260:	ee 89       	ldd	r30, Y+22	; 0x16
     262:	2a 2d       	mov	r18, r10
     264:	39 2d       	mov	r19, r9
     266:	48 2d       	mov	r20, r8
     268:	57 2d       	mov	r21, r7
     26a:	7e 2f       	mov	r23, r30
     26c:	8f 89       	ldd	r24, Y+23	; 0x17
     26e:	98 8d       	ldd	r25, Y+24	; 0x18
     270:	e0 96       	adiw	r28, 0x30	; 48
     272:	e2 e1       	ldi	r30, 0x12	; 18
     274:	0c 94 1f 1d 	jmp	0x3a3e	; 0x3a3e <__epilogue_restores__>

00000278 <__fixunssfsi>:
     278:	ef 92       	push	r14
     27a:	ff 92       	push	r15
     27c:	0f 93       	push	r16
     27e:	1f 93       	push	r17
     280:	7b 01       	movw	r14, r22
     282:	8c 01       	movw	r16, r24
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	5f e4       	ldi	r21, 0x4F	; 79
     28c:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     290:	88 23       	and	r24, r24
     292:	8c f0       	brlt	.+34     	; 0x2b6 <__fixunssfsi+0x3e>
     294:	c8 01       	movw	r24, r16
     296:	b7 01       	movw	r22, r14
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	5f e4       	ldi	r21, 0x4F	; 79
     2a0:	0e 94 29 09 	call	0x1252	; 0x1252 <__subsf3>
     2a4:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixsfsi>
     2a8:	9b 01       	movw	r18, r22
     2aa:	ac 01       	movw	r20, r24
     2ac:	20 50       	subi	r18, 0x00	; 0
     2ae:	30 40       	sbci	r19, 0x00	; 0
     2b0:	40 40       	sbci	r20, 0x00	; 0
     2b2:	50 48       	sbci	r21, 0x80	; 128
     2b4:	06 c0       	rjmp	.+12     	; 0x2c2 <__fixunssfsi+0x4a>
     2b6:	c8 01       	movw	r24, r16
     2b8:	b7 01       	movw	r22, r14
     2ba:	0e 94 bd 0b 	call	0x177a	; 0x177a <__fixsfsi>
     2be:	9b 01       	movw	r18, r22
     2c0:	ac 01       	movw	r20, r24
     2c2:	b9 01       	movw	r22, r18
     2c4:	ca 01       	movw	r24, r20
     2c6:	1f 91       	pop	r17
     2c8:	0f 91       	pop	r16
     2ca:	ff 90       	pop	r15
     2cc:	ef 90       	pop	r14
     2ce:	08 95       	ret

000002d0 <__udivdi3>:
     2d0:	ae e5       	ldi	r26, 0x5E	; 94
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	ee e6       	ldi	r30, 0x6E	; 110
     2d6:	f1 e0       	ldi	r31, 0x01	; 1
     2d8:	0c 94 03 1d 	jmp	0x3a06	; 0x3a06 <__prologue_saves__>
     2dc:	a8 e0       	ldi	r26, 0x08	; 8
     2de:	4e 01       	movw	r8, r28
     2e0:	08 94       	sec
     2e2:	81 1c       	adc	r8, r1
     2e4:	91 1c       	adc	r9, r1
     2e6:	f4 01       	movw	r30, r8
     2e8:	6a 2e       	mov	r6, r26
     2ea:	11 92       	st	Z+, r1
     2ec:	6a 94       	dec	r6
     2ee:	e9 f7       	brne	.-6      	; 0x2ea <__udivdi3+0x1a>
     2f0:	29 83       	std	Y+1, r18	; 0x01
     2f2:	3a 83       	std	Y+2, r19	; 0x02
     2f4:	4b 83       	std	Y+3, r20	; 0x03
     2f6:	5c 83       	std	Y+4, r21	; 0x04
     2f8:	6d 83       	std	Y+5, r22	; 0x05
     2fa:	7e 83       	std	Y+6, r23	; 0x06
     2fc:	8f 83       	std	Y+7, r24	; 0x07
     2fe:	98 87       	std	Y+8, r25	; 0x08
     300:	ce 01       	movw	r24, r28
     302:	09 96       	adiw	r24, 0x09	; 9
     304:	fc 01       	movw	r30, r24
     306:	11 92       	st	Z+, r1
     308:	aa 95       	dec	r26
     30a:	e9 f7       	brne	.-6      	; 0x306 <__udivdi3+0x36>
     30c:	a9 86       	std	Y+9, r10	; 0x09
     30e:	ba 86       	std	Y+10, r11	; 0x0a
     310:	cb 86       	std	Y+11, r12	; 0x0b
     312:	dc 86       	std	Y+12, r13	; 0x0c
     314:	ed 86       	std	Y+13, r14	; 0x0d
     316:	fe 86       	std	Y+14, r15	; 0x0e
     318:	0f 87       	std	Y+15, r16	; 0x0f
     31a:	18 8b       	std	Y+16, r17	; 0x10
     31c:	29 84       	ldd	r2, Y+9	; 0x09
     31e:	3a 84       	ldd	r3, Y+10	; 0x0a
     320:	4b 84       	ldd	r4, Y+11	; 0x0b
     322:	5c 84       	ldd	r5, Y+12	; 0x0c
     324:	ed 84       	ldd	r14, Y+13	; 0x0d
     326:	fe 84       	ldd	r15, Y+14	; 0x0e
     328:	0f 85       	ldd	r16, Y+15	; 0x0f
     32a:	18 89       	ldd	r17, Y+16	; 0x10
     32c:	69 80       	ldd	r6, Y+1	; 0x01
     32e:	7a 80       	ldd	r7, Y+2	; 0x02
     330:	8b 80       	ldd	r8, Y+3	; 0x03
     332:	9c 80       	ldd	r9, Y+4	; 0x04
     334:	6d a6       	std	Y+45, r6	; 0x2d
     336:	7e a6       	std	Y+46, r7	; 0x2e
     338:	8f a6       	std	Y+47, r8	; 0x2f
     33a:	98 aa       	std	Y+48, r9	; 0x30
     33c:	6d 80       	ldd	r6, Y+5	; 0x05
     33e:	7e 80       	ldd	r7, Y+6	; 0x06
     340:	8f 80       	ldd	r8, Y+7	; 0x07
     342:	98 84       	ldd	r9, Y+8	; 0x08
     344:	e1 14       	cp	r14, r1
     346:	f1 04       	cpc	r15, r1
     348:	01 05       	cpc	r16, r1
     34a:	11 05       	cpc	r17, r1
     34c:	09 f0       	breq	.+2      	; 0x350 <__udivdi3+0x80>
     34e:	b3 c3       	rjmp	.+1894   	; 0xab6 <__stack+0x657>
     350:	62 14       	cp	r6, r2
     352:	73 04       	cpc	r7, r3
     354:	84 04       	cpc	r8, r4
     356:	95 04       	cpc	r9, r5
     358:	08 f0       	brcs	.+2      	; 0x35c <__udivdi3+0x8c>
     35a:	3d c1       	rjmp	.+634    	; 0x5d6 <__stack+0x177>
     35c:	00 e0       	ldi	r16, 0x00	; 0
     35e:	20 16       	cp	r2, r16
     360:	00 e0       	ldi	r16, 0x00	; 0
     362:	30 06       	cpc	r3, r16
     364:	01 e0       	ldi	r16, 0x01	; 1
     366:	40 06       	cpc	r4, r16
     368:	00 e0       	ldi	r16, 0x00	; 0
     36a:	50 06       	cpc	r5, r16
     36c:	88 f4       	brcc	.+34     	; 0x390 <__udivdi3+0xc0>
     36e:	1f ef       	ldi	r17, 0xFF	; 255
     370:	21 16       	cp	r2, r17
     372:	31 04       	cpc	r3, r1
     374:	41 04       	cpc	r4, r1
     376:	51 04       	cpc	r5, r1
     378:	39 f0       	breq	.+14     	; 0x388 <__udivdi3+0xb8>
     37a:	30 f0       	brcs	.+12     	; 0x388 <__udivdi3+0xb8>
     37c:	48 e0       	ldi	r20, 0x08	; 8
     37e:	e4 2e       	mov	r14, r20
     380:	f1 2c       	mov	r15, r1
     382:	01 2d       	mov	r16, r1
     384:	11 2d       	mov	r17, r1
     386:	18 c0       	rjmp	.+48     	; 0x3b8 <__udivdi3+0xe8>
     388:	ee 24       	eor	r14, r14
     38a:	ff 24       	eor	r15, r15
     38c:	87 01       	movw	r16, r14
     38e:	14 c0       	rjmp	.+40     	; 0x3b8 <__udivdi3+0xe8>
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	22 16       	cp	r2, r18
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	32 06       	cpc	r3, r18
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	42 06       	cpc	r4, r18
     39c:	21 e0       	ldi	r18, 0x01	; 1
     39e:	52 06       	cpc	r5, r18
     3a0:	30 f0       	brcs	.+12     	; 0x3ae <__udivdi3+0xde>
     3a2:	38 e1       	ldi	r19, 0x18	; 24
     3a4:	e3 2e       	mov	r14, r19
     3a6:	f1 2c       	mov	r15, r1
     3a8:	01 2d       	mov	r16, r1
     3aa:	11 2d       	mov	r17, r1
     3ac:	05 c0       	rjmp	.+10     	; 0x3b8 <__udivdi3+0xe8>
     3ae:	20 e1       	ldi	r18, 0x10	; 16
     3b0:	e2 2e       	mov	r14, r18
     3b2:	f1 2c       	mov	r15, r1
     3b4:	01 2d       	mov	r16, r1
     3b6:	11 2d       	mov	r17, r1
     3b8:	d2 01       	movw	r26, r4
     3ba:	c1 01       	movw	r24, r2
     3bc:	0e 2c       	mov	r0, r14
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <__udivdi3+0xf8>
     3c0:	b6 95       	lsr	r27
     3c2:	a7 95       	ror	r26
     3c4:	97 95       	ror	r25
     3c6:	87 95       	ror	r24
     3c8:	0a 94       	dec	r0
     3ca:	d2 f7       	brpl	.-12     	; 0x3c0 <__udivdi3+0xf0>
     3cc:	8f 57       	subi	r24, 0x7F	; 127
     3ce:	9f 4f       	sbci	r25, 0xFF	; 255
     3d0:	dc 01       	movw	r26, r24
     3d2:	2c 91       	ld	r18, X
     3d4:	80 e2       	ldi	r24, 0x20	; 32
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	a0 e0       	ldi	r26, 0x00	; 0
     3da:	b0 e0       	ldi	r27, 0x00	; 0
     3dc:	8e 19       	sub	r24, r14
     3de:	9f 09       	sbc	r25, r15
     3e0:	a0 0b       	sbc	r26, r16
     3e2:	b1 0b       	sbc	r27, r17
     3e4:	7c 01       	movw	r14, r24
     3e6:	8d 01       	movw	r16, r26
     3e8:	e2 1a       	sub	r14, r18
     3ea:	f1 08       	sbc	r15, r1
     3ec:	01 09       	sbc	r16, r1
     3ee:	11 09       	sbc	r17, r1
     3f0:	e1 14       	cp	r14, r1
     3f2:	f1 04       	cpc	r15, r1
     3f4:	01 05       	cpc	r16, r1
     3f6:	11 05       	cpc	r17, r1
     3f8:	a1 f1       	breq	.+104    	; 0x462 <__stack+0x3>
     3fa:	0e 2c       	mov	r0, r14
     3fc:	04 c0       	rjmp	.+8      	; 0x406 <__udivdi3+0x136>
     3fe:	22 0c       	add	r2, r2
     400:	33 1c       	adc	r3, r3
     402:	44 1c       	adc	r4, r4
     404:	55 1c       	adc	r5, r5
     406:	0a 94       	dec	r0
     408:	d2 f7       	brpl	.-12     	; 0x3fe <__udivdi3+0x12e>
     40a:	a4 01       	movw	r20, r8
     40c:	93 01       	movw	r18, r6
     40e:	0e 2c       	mov	r0, r14
     410:	04 c0       	rjmp	.+8      	; 0x41a <__udivdi3+0x14a>
     412:	22 0f       	add	r18, r18
     414:	33 1f       	adc	r19, r19
     416:	44 1f       	adc	r20, r20
     418:	55 1f       	adc	r21, r21
     41a:	0a 94       	dec	r0
     41c:	d2 f7       	brpl	.-12     	; 0x412 <__udivdi3+0x142>
     41e:	80 e2       	ldi	r24, 0x20	; 32
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	8e 19       	sub	r24, r14
     424:	9f 09       	sbc	r25, r15
     426:	6d a4       	ldd	r6, Y+45	; 0x2d
     428:	7e a4       	ldd	r7, Y+46	; 0x2e
     42a:	8f a4       	ldd	r8, Y+47	; 0x2f
     42c:	98 a8       	ldd	r9, Y+48	; 0x30
     42e:	04 c0       	rjmp	.+8      	; 0x438 <__udivdi3+0x168>
     430:	96 94       	lsr	r9
     432:	87 94       	ror	r8
     434:	77 94       	ror	r7
     436:	67 94       	ror	r6
     438:	8a 95       	dec	r24
     43a:	d2 f7       	brpl	.-12     	; 0x430 <__udivdi3+0x160>
     43c:	62 2a       	or	r6, r18
     43e:	73 2a       	or	r7, r19
     440:	84 2a       	or	r8, r20
     442:	95 2a       	or	r9, r21
     444:	ad a4       	ldd	r10, Y+45	; 0x2d
     446:	be a4       	ldd	r11, Y+46	; 0x2e
     448:	cf a4       	ldd	r12, Y+47	; 0x2f
     44a:	d8 a8       	ldd	r13, Y+48	; 0x30
     44c:	04 c0       	rjmp	.+8      	; 0x456 <__udivdi3+0x186>
     44e:	aa 0c       	add	r10, r10
     450:	bb 1c       	adc	r11, r11
     452:	cc 1c       	adc	r12, r12
     454:	dd 1c       	adc	r13, r13
     456:	ea 94       	dec	r14
     458:	d2 f7       	brpl	.-12     	; 0x44e <__udivdi3+0x17e>
     45a:	ad a6       	std	Y+45, r10	; 0x2d
     45c:	be a6       	std	Y+46, r11	; 0x2e
     45e:	cf a6       	std	Y+47, r12	; 0x2f
     460:	d8 aa       	std	Y+48, r13	; 0x30
     462:	62 01       	movw	r12, r4
     464:	ee 24       	eor	r14, r14
     466:	ff 24       	eor	r15, r15
     468:	cd aa       	std	Y+53, r12	; 0x35
     46a:	de aa       	std	Y+54, r13	; 0x36
     46c:	ef aa       	std	Y+55, r14	; 0x37
     46e:	f8 ae       	std	Y+56, r15	; 0x38
     470:	92 01       	movw	r18, r4
     472:	81 01       	movw	r16, r2
     474:	20 70       	andi	r18, 0x00	; 0
     476:	30 70       	andi	r19, 0x00	; 0
     478:	09 af       	std	Y+57, r16	; 0x39
     47a:	1a af       	std	Y+58, r17	; 0x3a
     47c:	2b af       	std	Y+59, r18	; 0x3b
     47e:	3c af       	std	Y+60, r19	; 0x3c
     480:	c4 01       	movw	r24, r8
     482:	b3 01       	movw	r22, r6
     484:	a7 01       	movw	r20, r14
     486:	96 01       	movw	r18, r12
     488:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     48c:	7b 01       	movw	r14, r22
     48e:	8c 01       	movw	r16, r24
     490:	c4 01       	movw	r24, r8
     492:	b3 01       	movw	r22, r6
     494:	2d a9       	ldd	r18, Y+53	; 0x35
     496:	3e a9       	ldd	r19, Y+54	; 0x36
     498:	4f a9       	ldd	r20, Y+55	; 0x37
     49a:	58 ad       	ldd	r21, Y+56	; 0x38
     49c:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     4a0:	c9 01       	movw	r24, r18
     4a2:	da 01       	movw	r26, r20
     4a4:	3c 01       	movw	r6, r24
     4a6:	4d 01       	movw	r8, r26
     4a8:	c4 01       	movw	r24, r8
     4aa:	b3 01       	movw	r22, r6
     4ac:	29 ad       	ldd	r18, Y+57	; 0x39
     4ae:	3a ad       	ldd	r19, Y+58	; 0x3a
     4b0:	4b ad       	ldd	r20, Y+59	; 0x3b
     4b2:	5c ad       	ldd	r21, Y+60	; 0x3c
     4b4:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     4b8:	9b 01       	movw	r18, r22
     4ba:	ac 01       	movw	r20, r24
     4bc:	87 01       	movw	r16, r14
     4be:	ff 24       	eor	r15, r15
     4c0:	ee 24       	eor	r14, r14
     4c2:	ad a4       	ldd	r10, Y+45	; 0x2d
     4c4:	be a4       	ldd	r11, Y+46	; 0x2e
     4c6:	cf a4       	ldd	r12, Y+47	; 0x2f
     4c8:	d8 a8       	ldd	r13, Y+48	; 0x30
     4ca:	c6 01       	movw	r24, r12
     4cc:	aa 27       	eor	r26, r26
     4ce:	bb 27       	eor	r27, r27
     4d0:	57 01       	movw	r10, r14
     4d2:	68 01       	movw	r12, r16
     4d4:	a8 2a       	or	r10, r24
     4d6:	b9 2a       	or	r11, r25
     4d8:	ca 2a       	or	r12, r26
     4da:	db 2a       	or	r13, r27
     4dc:	a2 16       	cp	r10, r18
     4de:	b3 06       	cpc	r11, r19
     4e0:	c4 06       	cpc	r12, r20
     4e2:	d5 06       	cpc	r13, r21
     4e4:	e0 f4       	brcc	.+56     	; 0x51e <__stack+0xbf>
     4e6:	08 94       	sec
     4e8:	61 08       	sbc	r6, r1
     4ea:	71 08       	sbc	r7, r1
     4ec:	81 08       	sbc	r8, r1
     4ee:	91 08       	sbc	r9, r1
     4f0:	a2 0c       	add	r10, r2
     4f2:	b3 1c       	adc	r11, r3
     4f4:	c4 1c       	adc	r12, r4
     4f6:	d5 1c       	adc	r13, r5
     4f8:	a2 14       	cp	r10, r2
     4fa:	b3 04       	cpc	r11, r3
     4fc:	c4 04       	cpc	r12, r4
     4fe:	d5 04       	cpc	r13, r5
     500:	70 f0       	brcs	.+28     	; 0x51e <__stack+0xbf>
     502:	a2 16       	cp	r10, r18
     504:	b3 06       	cpc	r11, r19
     506:	c4 06       	cpc	r12, r20
     508:	d5 06       	cpc	r13, r21
     50a:	48 f4       	brcc	.+18     	; 0x51e <__stack+0xbf>
     50c:	08 94       	sec
     50e:	61 08       	sbc	r6, r1
     510:	71 08       	sbc	r7, r1
     512:	81 08       	sbc	r8, r1
     514:	91 08       	sbc	r9, r1
     516:	a2 0c       	add	r10, r2
     518:	b3 1c       	adc	r11, r3
     51a:	c4 1c       	adc	r12, r4
     51c:	d5 1c       	adc	r13, r5
     51e:	a2 1a       	sub	r10, r18
     520:	b3 0a       	sbc	r11, r19
     522:	c4 0a       	sbc	r12, r20
     524:	d5 0a       	sbc	r13, r21
     526:	c6 01       	movw	r24, r12
     528:	b5 01       	movw	r22, r10
     52a:	2d a9       	ldd	r18, Y+53	; 0x35
     52c:	3e a9       	ldd	r19, Y+54	; 0x36
     52e:	4f a9       	ldd	r20, Y+55	; 0x37
     530:	58 ad       	ldd	r21, Y+56	; 0x38
     532:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     536:	7b 01       	movw	r14, r22
     538:	8c 01       	movw	r16, r24
     53a:	c6 01       	movw	r24, r12
     53c:	b5 01       	movw	r22, r10
     53e:	2d a9       	ldd	r18, Y+53	; 0x35
     540:	3e a9       	ldd	r19, Y+54	; 0x36
     542:	4f a9       	ldd	r20, Y+55	; 0x37
     544:	58 ad       	ldd	r21, Y+56	; 0x38
     546:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     54a:	c9 01       	movw	r24, r18
     54c:	da 01       	movw	r26, r20
     54e:	5c 01       	movw	r10, r24
     550:	6d 01       	movw	r12, r26
     552:	c6 01       	movw	r24, r12
     554:	b5 01       	movw	r22, r10
     556:	29 ad       	ldd	r18, Y+57	; 0x39
     558:	3a ad       	ldd	r19, Y+58	; 0x3a
     55a:	4b ad       	ldd	r20, Y+59	; 0x3b
     55c:	5c ad       	ldd	r21, Y+60	; 0x3c
     55e:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     562:	9b 01       	movw	r18, r22
     564:	ac 01       	movw	r20, r24
     566:	87 01       	movw	r16, r14
     568:	ff 24       	eor	r15, r15
     56a:	ee 24       	eor	r14, r14
     56c:	8d a5       	ldd	r24, Y+45	; 0x2d
     56e:	9e a5       	ldd	r25, Y+46	; 0x2e
     570:	af a5       	ldd	r26, Y+47	; 0x2f
     572:	b8 a9       	ldd	r27, Y+48	; 0x30
     574:	a0 70       	andi	r26, 0x00	; 0
     576:	b0 70       	andi	r27, 0x00	; 0
     578:	e8 2a       	or	r14, r24
     57a:	f9 2a       	or	r15, r25
     57c:	0a 2b       	or	r16, r26
     57e:	1b 2b       	or	r17, r27
     580:	e2 16       	cp	r14, r18
     582:	f3 06       	cpc	r15, r19
     584:	04 07       	cpc	r16, r20
     586:	15 07       	cpc	r17, r21
     588:	c0 f4       	brcc	.+48     	; 0x5ba <__stack+0x15b>
     58a:	08 94       	sec
     58c:	a1 08       	sbc	r10, r1
     58e:	b1 08       	sbc	r11, r1
     590:	c1 08       	sbc	r12, r1
     592:	d1 08       	sbc	r13, r1
     594:	e2 0c       	add	r14, r2
     596:	f3 1c       	adc	r15, r3
     598:	04 1d       	adc	r16, r4
     59a:	15 1d       	adc	r17, r5
     59c:	e2 14       	cp	r14, r2
     59e:	f3 04       	cpc	r15, r3
     5a0:	04 05       	cpc	r16, r4
     5a2:	15 05       	cpc	r17, r5
     5a4:	50 f0       	brcs	.+20     	; 0x5ba <__stack+0x15b>
     5a6:	e2 16       	cp	r14, r18
     5a8:	f3 06       	cpc	r15, r19
     5aa:	04 07       	cpc	r16, r20
     5ac:	15 07       	cpc	r17, r21
     5ae:	28 f4       	brcc	.+10     	; 0x5ba <__stack+0x15b>
     5b0:	08 94       	sec
     5b2:	a1 08       	sbc	r10, r1
     5b4:	b1 08       	sbc	r11, r1
     5b6:	c1 08       	sbc	r12, r1
     5b8:	d1 08       	sbc	r13, r1
     5ba:	d3 01       	movw	r26, r6
     5bc:	99 27       	eor	r25, r25
     5be:	88 27       	eor	r24, r24
     5c0:	86 01       	movw	r16, r12
     5c2:	75 01       	movw	r14, r10
     5c4:	e8 2a       	or	r14, r24
     5c6:	f9 2a       	or	r15, r25
     5c8:	0a 2b       	or	r16, r26
     5ca:	1b 2b       	or	r17, r27
     5cc:	e9 aa       	std	Y+49, r14	; 0x31
     5ce:	fa aa       	std	Y+50, r15	; 0x32
     5d0:	0b ab       	std	Y+51, r16	; 0x33
     5d2:	1c ab       	std	Y+52, r17	; 0x34
     5d4:	cf c4       	rjmp	.+2462   	; 0xf74 <__stack+0xb15>
     5d6:	21 14       	cp	r2, r1
     5d8:	31 04       	cpc	r3, r1
     5da:	41 04       	cpc	r4, r1
     5dc:	51 04       	cpc	r5, r1
     5de:	71 f4       	brne	.+28     	; 0x5fc <__stack+0x19d>
     5e0:	61 e0       	ldi	r22, 0x01	; 1
     5e2:	70 e0       	ldi	r23, 0x00	; 0
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     5f4:	c9 01       	movw	r24, r18
     5f6:	da 01       	movw	r26, r20
     5f8:	1c 01       	movw	r2, r24
     5fa:	2d 01       	movw	r4, r26
     5fc:	00 e0       	ldi	r16, 0x00	; 0
     5fe:	20 16       	cp	r2, r16
     600:	00 e0       	ldi	r16, 0x00	; 0
     602:	30 06       	cpc	r3, r16
     604:	01 e0       	ldi	r16, 0x01	; 1
     606:	40 06       	cpc	r4, r16
     608:	00 e0       	ldi	r16, 0x00	; 0
     60a:	50 06       	cpc	r5, r16
     60c:	88 f4       	brcc	.+34     	; 0x630 <__stack+0x1d1>
     60e:	1f ef       	ldi	r17, 0xFF	; 255
     610:	21 16       	cp	r2, r17
     612:	31 04       	cpc	r3, r1
     614:	41 04       	cpc	r4, r1
     616:	51 04       	cpc	r5, r1
     618:	31 f0       	breq	.+12     	; 0x626 <__stack+0x1c7>
     61a:	28 f0       	brcs	.+10     	; 0x626 <__stack+0x1c7>
     61c:	48 e0       	ldi	r20, 0x08	; 8
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	60 e0       	ldi	r22, 0x00	; 0
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	17 c0       	rjmp	.+46     	; 0x654 <__stack+0x1f5>
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	12 c0       	rjmp	.+36     	; 0x654 <__stack+0x1f5>
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	22 16       	cp	r2, r18
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	32 06       	cpc	r3, r18
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	42 06       	cpc	r4, r18
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	52 06       	cpc	r5, r18
     640:	28 f0       	brcs	.+10     	; 0x64c <__stack+0x1ed>
     642:	48 e1       	ldi	r20, 0x18	; 24
     644:	50 e0       	ldi	r21, 0x00	; 0
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	70 e0       	ldi	r23, 0x00	; 0
     64a:	04 c0       	rjmp	.+8      	; 0x654 <__stack+0x1f5>
     64c:	40 e1       	ldi	r20, 0x10	; 16
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	d2 01       	movw	r26, r4
     656:	c1 01       	movw	r24, r2
     658:	04 2e       	mov	r0, r20
     65a:	04 c0       	rjmp	.+8      	; 0x664 <__stack+0x205>
     65c:	b6 95       	lsr	r27
     65e:	a7 95       	ror	r26
     660:	97 95       	ror	r25
     662:	87 95       	ror	r24
     664:	0a 94       	dec	r0
     666:	d2 f7       	brpl	.-12     	; 0x65c <__stack+0x1fd>
     668:	8f 57       	subi	r24, 0x7F	; 127
     66a:	9f 4f       	sbci	r25, 0xFF	; 255
     66c:	dc 01       	movw	r26, r24
     66e:	2c 91       	ld	r18, X
     670:	e0 e2       	ldi	r30, 0x20	; 32
     672:	ee 2e       	mov	r14, r30
     674:	f1 2c       	mov	r15, r1
     676:	01 2d       	mov	r16, r1
     678:	11 2d       	mov	r17, r1
     67a:	d8 01       	movw	r26, r16
     67c:	c7 01       	movw	r24, r14
     67e:	84 1b       	sub	r24, r20
     680:	95 0b       	sbc	r25, r21
     682:	a6 0b       	sbc	r26, r22
     684:	b7 0b       	sbc	r27, r23
     686:	82 1b       	sub	r24, r18
     688:	91 09       	sbc	r25, r1
     68a:	a1 09       	sbc	r26, r1
     68c:	b1 09       	sbc	r27, r1
     68e:	00 97       	sbiw	r24, 0x00	; 0
     690:	a1 05       	cpc	r26, r1
     692:	b1 05       	cpc	r27, r1
     694:	61 f4       	brne	.+24     	; 0x6ae <__stack+0x24f>
     696:	64 01       	movw	r12, r8
     698:	53 01       	movw	r10, r6
     69a:	a2 18       	sub	r10, r2
     69c:	b3 08       	sbc	r11, r3
     69e:	c4 08       	sbc	r12, r4
     6a0:	d5 08       	sbc	r13, r5
     6a2:	31 e0       	ldi	r19, 0x01	; 1
     6a4:	63 2e       	mov	r6, r19
     6a6:	71 2c       	mov	r7, r1
     6a8:	81 2c       	mov	r8, r1
     6aa:	91 2c       	mov	r9, r1
     6ac:	1e c1       	rjmp	.+572    	; 0x8ea <__stack+0x48b>
     6ae:	6f 96       	adiw	r28, 0x1f	; 31
     6b0:	8f af       	std	Y+63, r24	; 0x3f
     6b2:	6f 97       	sbiw	r28, 0x1f	; 31
     6b4:	08 2e       	mov	r0, r24
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <__stack+0x261>
     6b8:	22 0c       	add	r2, r2
     6ba:	33 1c       	adc	r3, r3
     6bc:	44 1c       	adc	r4, r4
     6be:	55 1c       	adc	r5, r5
     6c0:	0a 94       	dec	r0
     6c2:	d2 f7       	brpl	.-12     	; 0x6b8 <__stack+0x259>
     6c4:	ee 2d       	mov	r30, r14
     6c6:	e8 1b       	sub	r30, r24
     6c8:	64 01       	movw	r12, r8
     6ca:	53 01       	movw	r10, r6
     6cc:	0e 2e       	mov	r0, r30
     6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <__stack+0x279>
     6d0:	d6 94       	lsr	r13
     6d2:	c7 94       	ror	r12
     6d4:	b7 94       	ror	r11
     6d6:	a7 94       	ror	r10
     6d8:	0a 94       	dec	r0
     6da:	d2 f7       	brpl	.-12     	; 0x6d0 <__stack+0x271>
     6dc:	a4 01       	movw	r20, r8
     6de:	93 01       	movw	r18, r6
     6e0:	6f 96       	adiw	r28, 0x1f	; 31
     6e2:	0f ac       	ldd	r0, Y+63	; 0x3f
     6e4:	6f 97       	sbiw	r28, 0x1f	; 31
     6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <__stack+0x291>
     6e8:	22 0f       	add	r18, r18
     6ea:	33 1f       	adc	r19, r19
     6ec:	44 1f       	adc	r20, r20
     6ee:	55 1f       	adc	r21, r21
     6f0:	0a 94       	dec	r0
     6f2:	d2 f7       	brpl	.-12     	; 0x6e8 <__stack+0x289>
     6f4:	6d a4       	ldd	r6, Y+45	; 0x2d
     6f6:	7e a4       	ldd	r7, Y+46	; 0x2e
     6f8:	8f a4       	ldd	r8, Y+47	; 0x2f
     6fa:	98 a8       	ldd	r9, Y+48	; 0x30
     6fc:	0e 2e       	mov	r0, r30
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <__stack+0x2a9>
     700:	96 94       	lsr	r9
     702:	87 94       	ror	r8
     704:	77 94       	ror	r7
     706:	67 94       	ror	r6
     708:	0a 94       	dec	r0
     70a:	d2 f7       	brpl	.-12     	; 0x700 <__stack+0x2a1>
     70c:	84 01       	movw	r16, r8
     70e:	73 01       	movw	r14, r6
     710:	e2 2a       	or	r14, r18
     712:	f3 2a       	or	r15, r19
     714:	04 2b       	or	r16, r20
     716:	15 2b       	or	r17, r21
     718:	e9 a6       	std	Y+41, r14	; 0x29
     71a:	fa a6       	std	Y+42, r15	; 0x2a
     71c:	0b a7       	std	Y+43, r16	; 0x2b
     71e:	1c a7       	std	Y+44, r17	; 0x2c
     720:	32 01       	movw	r6, r4
     722:	88 24       	eor	r8, r8
     724:	99 24       	eor	r9, r9
     726:	92 01       	movw	r18, r4
     728:	81 01       	movw	r16, r2
     72a:	20 70       	andi	r18, 0x00	; 0
     72c:	30 70       	andi	r19, 0x00	; 0
     72e:	21 96       	adiw	r28, 0x01	; 1
     730:	0c af       	std	Y+60, r16	; 0x3c
     732:	1d af       	std	Y+61, r17	; 0x3d
     734:	2e af       	std	Y+62, r18	; 0x3e
     736:	3f af       	std	Y+63, r19	; 0x3f
     738:	21 97       	sbiw	r28, 0x01	; 1
     73a:	c6 01       	movw	r24, r12
     73c:	b5 01       	movw	r22, r10
     73e:	a4 01       	movw	r20, r8
     740:	93 01       	movw	r18, r6
     742:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     746:	7b 01       	movw	r14, r22
     748:	8c 01       	movw	r16, r24
     74a:	c6 01       	movw	r24, r12
     74c:	b5 01       	movw	r22, r10
     74e:	a4 01       	movw	r20, r8
     750:	93 01       	movw	r18, r6
     752:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     756:	c9 01       	movw	r24, r18
     758:	da 01       	movw	r26, r20
     75a:	25 96       	adiw	r28, 0x05	; 5
     75c:	8c af       	std	Y+60, r24	; 0x3c
     75e:	9d af       	std	Y+61, r25	; 0x3d
     760:	ae af       	std	Y+62, r26	; 0x3e
     762:	bf af       	std	Y+63, r27	; 0x3f
     764:	25 97       	sbiw	r28, 0x05	; 5
     766:	bc 01       	movw	r22, r24
     768:	cd 01       	movw	r24, r26
     76a:	21 96       	adiw	r28, 0x01	; 1
     76c:	2c ad       	ldd	r18, Y+60	; 0x3c
     76e:	3d ad       	ldd	r19, Y+61	; 0x3d
     770:	4e ad       	ldd	r20, Y+62	; 0x3e
     772:	5f ad       	ldd	r21, Y+63	; 0x3f
     774:	21 97       	sbiw	r28, 0x01	; 1
     776:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     77a:	9b 01       	movw	r18, r22
     77c:	ac 01       	movw	r20, r24
     77e:	87 01       	movw	r16, r14
     780:	ff 24       	eor	r15, r15
     782:	ee 24       	eor	r14, r14
     784:	a9 a4       	ldd	r10, Y+41	; 0x29
     786:	ba a4       	ldd	r11, Y+42	; 0x2a
     788:	cb a4       	ldd	r12, Y+43	; 0x2b
     78a:	dc a4       	ldd	r13, Y+44	; 0x2c
     78c:	c6 01       	movw	r24, r12
     78e:	aa 27       	eor	r26, r26
     790:	bb 27       	eor	r27, r27
     792:	5c 01       	movw	r10, r24
     794:	6d 01       	movw	r12, r26
     796:	ae 28       	or	r10, r14
     798:	bf 28       	or	r11, r15
     79a:	c0 2a       	or	r12, r16
     79c:	d1 2a       	or	r13, r17
     79e:	a2 16       	cp	r10, r18
     7a0:	b3 06       	cpc	r11, r19
     7a2:	c4 06       	cpc	r12, r20
     7a4:	d5 06       	cpc	r13, r21
     7a6:	60 f5       	brcc	.+88     	; 0x800 <__stack+0x3a1>
     7a8:	25 96       	adiw	r28, 0x05	; 5
     7aa:	6c ad       	ldd	r22, Y+60	; 0x3c
     7ac:	7d ad       	ldd	r23, Y+61	; 0x3d
     7ae:	8e ad       	ldd	r24, Y+62	; 0x3e
     7b0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7b2:	25 97       	sbiw	r28, 0x05	; 5
     7b4:	61 50       	subi	r22, 0x01	; 1
     7b6:	70 40       	sbci	r23, 0x00	; 0
     7b8:	80 40       	sbci	r24, 0x00	; 0
     7ba:	90 40       	sbci	r25, 0x00	; 0
     7bc:	25 96       	adiw	r28, 0x05	; 5
     7be:	6c af       	std	Y+60, r22	; 0x3c
     7c0:	7d af       	std	Y+61, r23	; 0x3d
     7c2:	8e af       	std	Y+62, r24	; 0x3e
     7c4:	9f af       	std	Y+63, r25	; 0x3f
     7c6:	25 97       	sbiw	r28, 0x05	; 5
     7c8:	a2 0c       	add	r10, r2
     7ca:	b3 1c       	adc	r11, r3
     7cc:	c4 1c       	adc	r12, r4
     7ce:	d5 1c       	adc	r13, r5
     7d0:	a2 14       	cp	r10, r2
     7d2:	b3 04       	cpc	r11, r3
     7d4:	c4 04       	cpc	r12, r4
     7d6:	d5 04       	cpc	r13, r5
     7d8:	98 f0       	brcs	.+38     	; 0x800 <__stack+0x3a1>
     7da:	a2 16       	cp	r10, r18
     7dc:	b3 06       	cpc	r11, r19
     7de:	c4 06       	cpc	r12, r20
     7e0:	d5 06       	cpc	r13, r21
     7e2:	70 f4       	brcc	.+28     	; 0x800 <__stack+0x3a1>
     7e4:	61 50       	subi	r22, 0x01	; 1
     7e6:	70 40       	sbci	r23, 0x00	; 0
     7e8:	80 40       	sbci	r24, 0x00	; 0
     7ea:	90 40       	sbci	r25, 0x00	; 0
     7ec:	25 96       	adiw	r28, 0x05	; 5
     7ee:	6c af       	std	Y+60, r22	; 0x3c
     7f0:	7d af       	std	Y+61, r23	; 0x3d
     7f2:	8e af       	std	Y+62, r24	; 0x3e
     7f4:	9f af       	std	Y+63, r25	; 0x3f
     7f6:	25 97       	sbiw	r28, 0x05	; 5
     7f8:	a2 0c       	add	r10, r2
     7fa:	b3 1c       	adc	r11, r3
     7fc:	c4 1c       	adc	r12, r4
     7fe:	d5 1c       	adc	r13, r5
     800:	a2 1a       	sub	r10, r18
     802:	b3 0a       	sbc	r11, r19
     804:	c4 0a       	sbc	r12, r20
     806:	d5 0a       	sbc	r13, r21
     808:	c6 01       	movw	r24, r12
     80a:	b5 01       	movw	r22, r10
     80c:	a4 01       	movw	r20, r8
     80e:	93 01       	movw	r18, r6
     810:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     814:	7b 01       	movw	r14, r22
     816:	8c 01       	movw	r16, r24
     818:	c6 01       	movw	r24, r12
     81a:	b5 01       	movw	r22, r10
     81c:	a4 01       	movw	r20, r8
     81e:	93 01       	movw	r18, r6
     820:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     824:	c9 01       	movw	r24, r18
     826:	da 01       	movw	r26, r20
     828:	3c 01       	movw	r6, r24
     82a:	4d 01       	movw	r8, r26
     82c:	c4 01       	movw	r24, r8
     82e:	b3 01       	movw	r22, r6
     830:	21 96       	adiw	r28, 0x01	; 1
     832:	2c ad       	ldd	r18, Y+60	; 0x3c
     834:	3d ad       	ldd	r19, Y+61	; 0x3d
     836:	4e ad       	ldd	r20, Y+62	; 0x3e
     838:	5f ad       	ldd	r21, Y+63	; 0x3f
     83a:	21 97       	sbiw	r28, 0x01	; 1
     83c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     840:	9b 01       	movw	r18, r22
     842:	ac 01       	movw	r20, r24
     844:	87 01       	movw	r16, r14
     846:	ff 24       	eor	r15, r15
     848:	ee 24       	eor	r14, r14
     84a:	89 a5       	ldd	r24, Y+41	; 0x29
     84c:	9a a5       	ldd	r25, Y+42	; 0x2a
     84e:	ab a5       	ldd	r26, Y+43	; 0x2b
     850:	bc a5       	ldd	r27, Y+44	; 0x2c
     852:	a0 70       	andi	r26, 0x00	; 0
     854:	b0 70       	andi	r27, 0x00	; 0
     856:	57 01       	movw	r10, r14
     858:	68 01       	movw	r12, r16
     85a:	a8 2a       	or	r10, r24
     85c:	b9 2a       	or	r11, r25
     85e:	ca 2a       	or	r12, r26
     860:	db 2a       	or	r13, r27
     862:	a2 16       	cp	r10, r18
     864:	b3 06       	cpc	r11, r19
     866:	c4 06       	cpc	r12, r20
     868:	d5 06       	cpc	r13, r21
     86a:	e0 f4       	brcc	.+56     	; 0x8a4 <__stack+0x445>
     86c:	08 94       	sec
     86e:	61 08       	sbc	r6, r1
     870:	71 08       	sbc	r7, r1
     872:	81 08       	sbc	r8, r1
     874:	91 08       	sbc	r9, r1
     876:	a2 0c       	add	r10, r2
     878:	b3 1c       	adc	r11, r3
     87a:	c4 1c       	adc	r12, r4
     87c:	d5 1c       	adc	r13, r5
     87e:	a2 14       	cp	r10, r2
     880:	b3 04       	cpc	r11, r3
     882:	c4 04       	cpc	r12, r4
     884:	d5 04       	cpc	r13, r5
     886:	70 f0       	brcs	.+28     	; 0x8a4 <__stack+0x445>
     888:	a2 16       	cp	r10, r18
     88a:	b3 06       	cpc	r11, r19
     88c:	c4 06       	cpc	r12, r20
     88e:	d5 06       	cpc	r13, r21
     890:	48 f4       	brcc	.+18     	; 0x8a4 <__stack+0x445>
     892:	08 94       	sec
     894:	61 08       	sbc	r6, r1
     896:	71 08       	sbc	r7, r1
     898:	81 08       	sbc	r8, r1
     89a:	91 08       	sbc	r9, r1
     89c:	a2 0c       	add	r10, r2
     89e:	b3 1c       	adc	r11, r3
     8a0:	c4 1c       	adc	r12, r4
     8a2:	d5 1c       	adc	r13, r5
     8a4:	8d a5       	ldd	r24, Y+45	; 0x2d
     8a6:	9e a5       	ldd	r25, Y+46	; 0x2e
     8a8:	af a5       	ldd	r26, Y+47	; 0x2f
     8aa:	b8 a9       	ldd	r27, Y+48	; 0x30
     8ac:	6f 96       	adiw	r28, 0x1f	; 31
     8ae:	0f ac       	ldd	r0, Y+63	; 0x3f
     8b0:	6f 97       	sbiw	r28, 0x1f	; 31
     8b2:	04 c0       	rjmp	.+8      	; 0x8bc <__stack+0x45d>
     8b4:	88 0f       	add	r24, r24
     8b6:	99 1f       	adc	r25, r25
     8b8:	aa 1f       	adc	r26, r26
     8ba:	bb 1f       	adc	r27, r27
     8bc:	0a 94       	dec	r0
     8be:	d2 f7       	brpl	.-12     	; 0x8b4 <__stack+0x455>
     8c0:	8d a7       	std	Y+45, r24	; 0x2d
     8c2:	9e a7       	std	Y+46, r25	; 0x2e
     8c4:	af a7       	std	Y+47, r26	; 0x2f
     8c6:	b8 ab       	std	Y+48, r27	; 0x30
     8c8:	a2 1a       	sub	r10, r18
     8ca:	b3 0a       	sbc	r11, r19
     8cc:	c4 0a       	sbc	r12, r20
     8ce:	d5 0a       	sbc	r13, r21
     8d0:	25 96       	adiw	r28, 0x05	; 5
     8d2:	ec ac       	ldd	r14, Y+60	; 0x3c
     8d4:	fd ac       	ldd	r15, Y+61	; 0x3d
     8d6:	0e ad       	ldd	r16, Y+62	; 0x3e
     8d8:	1f ad       	ldd	r17, Y+63	; 0x3f
     8da:	25 97       	sbiw	r28, 0x05	; 5
     8dc:	d7 01       	movw	r26, r14
     8de:	99 27       	eor	r25, r25
     8e0:	88 27       	eor	r24, r24
     8e2:	68 2a       	or	r6, r24
     8e4:	79 2a       	or	r7, r25
     8e6:	8a 2a       	or	r8, r26
     8e8:	9b 2a       	or	r9, r27
     8ea:	82 01       	movw	r16, r4
     8ec:	22 27       	eor	r18, r18
     8ee:	33 27       	eor	r19, r19
     8f0:	29 96       	adiw	r28, 0x09	; 9
     8f2:	0c af       	std	Y+60, r16	; 0x3c
     8f4:	1d af       	std	Y+61, r17	; 0x3d
     8f6:	2e af       	std	Y+62, r18	; 0x3e
     8f8:	3f af       	std	Y+63, r19	; 0x3f
     8fa:	29 97       	sbiw	r28, 0x09	; 9
     8fc:	a2 01       	movw	r20, r4
     8fe:	91 01       	movw	r18, r2
     900:	40 70       	andi	r20, 0x00	; 0
     902:	50 70       	andi	r21, 0x00	; 0
     904:	2d 96       	adiw	r28, 0x0d	; 13
     906:	2c af       	std	Y+60, r18	; 0x3c
     908:	3d af       	std	Y+61, r19	; 0x3d
     90a:	4e af       	std	Y+62, r20	; 0x3e
     90c:	5f af       	std	Y+63, r21	; 0x3f
     90e:	2d 97       	sbiw	r28, 0x0d	; 13
     910:	c6 01       	movw	r24, r12
     912:	b5 01       	movw	r22, r10
     914:	29 96       	adiw	r28, 0x09	; 9
     916:	2c ad       	ldd	r18, Y+60	; 0x3c
     918:	3d ad       	ldd	r19, Y+61	; 0x3d
     91a:	4e ad       	ldd	r20, Y+62	; 0x3e
     91c:	5f ad       	ldd	r21, Y+63	; 0x3f
     91e:	29 97       	sbiw	r28, 0x09	; 9
     920:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     924:	7b 01       	movw	r14, r22
     926:	8c 01       	movw	r16, r24
     928:	c6 01       	movw	r24, r12
     92a:	b5 01       	movw	r22, r10
     92c:	29 96       	adiw	r28, 0x09	; 9
     92e:	2c ad       	ldd	r18, Y+60	; 0x3c
     930:	3d ad       	ldd	r19, Y+61	; 0x3d
     932:	4e ad       	ldd	r20, Y+62	; 0x3e
     934:	5f ad       	ldd	r21, Y+63	; 0x3f
     936:	29 97       	sbiw	r28, 0x09	; 9
     938:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     93c:	c9 01       	movw	r24, r18
     93e:	da 01       	movw	r26, r20
     940:	61 96       	adiw	r28, 0x11	; 17
     942:	8c af       	std	Y+60, r24	; 0x3c
     944:	9d af       	std	Y+61, r25	; 0x3d
     946:	ae af       	std	Y+62, r26	; 0x3e
     948:	bf af       	std	Y+63, r27	; 0x3f
     94a:	61 97       	sbiw	r28, 0x11	; 17
     94c:	bc 01       	movw	r22, r24
     94e:	cd 01       	movw	r24, r26
     950:	2d 96       	adiw	r28, 0x0d	; 13
     952:	2c ad       	ldd	r18, Y+60	; 0x3c
     954:	3d ad       	ldd	r19, Y+61	; 0x3d
     956:	4e ad       	ldd	r20, Y+62	; 0x3e
     958:	5f ad       	ldd	r21, Y+63	; 0x3f
     95a:	2d 97       	sbiw	r28, 0x0d	; 13
     95c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     960:	9b 01       	movw	r18, r22
     962:	ac 01       	movw	r20, r24
     964:	87 01       	movw	r16, r14
     966:	ff 24       	eor	r15, r15
     968:	ee 24       	eor	r14, r14
     96a:	ad a4       	ldd	r10, Y+45	; 0x2d
     96c:	be a4       	ldd	r11, Y+46	; 0x2e
     96e:	cf a4       	ldd	r12, Y+47	; 0x2f
     970:	d8 a8       	ldd	r13, Y+48	; 0x30
     972:	c6 01       	movw	r24, r12
     974:	aa 27       	eor	r26, r26
     976:	bb 27       	eor	r27, r27
     978:	57 01       	movw	r10, r14
     97a:	68 01       	movw	r12, r16
     97c:	a8 2a       	or	r10, r24
     97e:	b9 2a       	or	r11, r25
     980:	ca 2a       	or	r12, r26
     982:	db 2a       	or	r13, r27
     984:	a2 16       	cp	r10, r18
     986:	b3 06       	cpc	r11, r19
     988:	c4 06       	cpc	r12, r20
     98a:	d5 06       	cpc	r13, r21
     98c:	60 f5       	brcc	.+88     	; 0x9e6 <__stack+0x587>
     98e:	61 96       	adiw	r28, 0x11	; 17
     990:	6c ad       	ldd	r22, Y+60	; 0x3c
     992:	7d ad       	ldd	r23, Y+61	; 0x3d
     994:	8e ad       	ldd	r24, Y+62	; 0x3e
     996:	9f ad       	ldd	r25, Y+63	; 0x3f
     998:	61 97       	sbiw	r28, 0x11	; 17
     99a:	61 50       	subi	r22, 0x01	; 1
     99c:	70 40       	sbci	r23, 0x00	; 0
     99e:	80 40       	sbci	r24, 0x00	; 0
     9a0:	90 40       	sbci	r25, 0x00	; 0
     9a2:	61 96       	adiw	r28, 0x11	; 17
     9a4:	6c af       	std	Y+60, r22	; 0x3c
     9a6:	7d af       	std	Y+61, r23	; 0x3d
     9a8:	8e af       	std	Y+62, r24	; 0x3e
     9aa:	9f af       	std	Y+63, r25	; 0x3f
     9ac:	61 97       	sbiw	r28, 0x11	; 17
     9ae:	a2 0c       	add	r10, r2
     9b0:	b3 1c       	adc	r11, r3
     9b2:	c4 1c       	adc	r12, r4
     9b4:	d5 1c       	adc	r13, r5
     9b6:	a2 14       	cp	r10, r2
     9b8:	b3 04       	cpc	r11, r3
     9ba:	c4 04       	cpc	r12, r4
     9bc:	d5 04       	cpc	r13, r5
     9be:	98 f0       	brcs	.+38     	; 0x9e6 <__stack+0x587>
     9c0:	a2 16       	cp	r10, r18
     9c2:	b3 06       	cpc	r11, r19
     9c4:	c4 06       	cpc	r12, r20
     9c6:	d5 06       	cpc	r13, r21
     9c8:	70 f4       	brcc	.+28     	; 0x9e6 <__stack+0x587>
     9ca:	61 50       	subi	r22, 0x01	; 1
     9cc:	70 40       	sbci	r23, 0x00	; 0
     9ce:	80 40       	sbci	r24, 0x00	; 0
     9d0:	90 40       	sbci	r25, 0x00	; 0
     9d2:	61 96       	adiw	r28, 0x11	; 17
     9d4:	6c af       	std	Y+60, r22	; 0x3c
     9d6:	7d af       	std	Y+61, r23	; 0x3d
     9d8:	8e af       	std	Y+62, r24	; 0x3e
     9da:	9f af       	std	Y+63, r25	; 0x3f
     9dc:	61 97       	sbiw	r28, 0x11	; 17
     9de:	a2 0c       	add	r10, r2
     9e0:	b3 1c       	adc	r11, r3
     9e2:	c4 1c       	adc	r12, r4
     9e4:	d5 1c       	adc	r13, r5
     9e6:	a2 1a       	sub	r10, r18
     9e8:	b3 0a       	sbc	r11, r19
     9ea:	c4 0a       	sbc	r12, r20
     9ec:	d5 0a       	sbc	r13, r21
     9ee:	c6 01       	movw	r24, r12
     9f0:	b5 01       	movw	r22, r10
     9f2:	29 96       	adiw	r28, 0x09	; 9
     9f4:	2c ad       	ldd	r18, Y+60	; 0x3c
     9f6:	3d ad       	ldd	r19, Y+61	; 0x3d
     9f8:	4e ad       	ldd	r20, Y+62	; 0x3e
     9fa:	5f ad       	ldd	r21, Y+63	; 0x3f
     9fc:	29 97       	sbiw	r28, 0x09	; 9
     9fe:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     a02:	7b 01       	movw	r14, r22
     a04:	8c 01       	movw	r16, r24
     a06:	c6 01       	movw	r24, r12
     a08:	b5 01       	movw	r22, r10
     a0a:	29 96       	adiw	r28, 0x09	; 9
     a0c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a0e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a10:	4e ad       	ldd	r20, Y+62	; 0x3e
     a12:	5f ad       	ldd	r21, Y+63	; 0x3f
     a14:	29 97       	sbiw	r28, 0x09	; 9
     a16:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     a1a:	c9 01       	movw	r24, r18
     a1c:	da 01       	movw	r26, r20
     a1e:	5c 01       	movw	r10, r24
     a20:	6d 01       	movw	r12, r26
     a22:	c6 01       	movw	r24, r12
     a24:	b5 01       	movw	r22, r10
     a26:	2d 96       	adiw	r28, 0x0d	; 13
     a28:	2c ad       	ldd	r18, Y+60	; 0x3c
     a2a:	3d ad       	ldd	r19, Y+61	; 0x3d
     a2c:	4e ad       	ldd	r20, Y+62	; 0x3e
     a2e:	5f ad       	ldd	r21, Y+63	; 0x3f
     a30:	2d 97       	sbiw	r28, 0x0d	; 13
     a32:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     a36:	9b 01       	movw	r18, r22
     a38:	ac 01       	movw	r20, r24
     a3a:	87 01       	movw	r16, r14
     a3c:	ff 24       	eor	r15, r15
     a3e:	ee 24       	eor	r14, r14
     a40:	8d a5       	ldd	r24, Y+45	; 0x2d
     a42:	9e a5       	ldd	r25, Y+46	; 0x2e
     a44:	af a5       	ldd	r26, Y+47	; 0x2f
     a46:	b8 a9       	ldd	r27, Y+48	; 0x30
     a48:	a0 70       	andi	r26, 0x00	; 0
     a4a:	b0 70       	andi	r27, 0x00	; 0
     a4c:	e8 2a       	or	r14, r24
     a4e:	f9 2a       	or	r15, r25
     a50:	0a 2b       	or	r16, r26
     a52:	1b 2b       	or	r17, r27
     a54:	e2 16       	cp	r14, r18
     a56:	f3 06       	cpc	r15, r19
     a58:	04 07       	cpc	r16, r20
     a5a:	15 07       	cpc	r17, r21
     a5c:	c0 f4       	brcc	.+48     	; 0xa8e <__stack+0x62f>
     a5e:	08 94       	sec
     a60:	a1 08       	sbc	r10, r1
     a62:	b1 08       	sbc	r11, r1
     a64:	c1 08       	sbc	r12, r1
     a66:	d1 08       	sbc	r13, r1
     a68:	e2 0c       	add	r14, r2
     a6a:	f3 1c       	adc	r15, r3
     a6c:	04 1d       	adc	r16, r4
     a6e:	15 1d       	adc	r17, r5
     a70:	e2 14       	cp	r14, r2
     a72:	f3 04       	cpc	r15, r3
     a74:	04 05       	cpc	r16, r4
     a76:	15 05       	cpc	r17, r5
     a78:	50 f0       	brcs	.+20     	; 0xa8e <__stack+0x62f>
     a7a:	e2 16       	cp	r14, r18
     a7c:	f3 06       	cpc	r15, r19
     a7e:	04 07       	cpc	r16, r20
     a80:	15 07       	cpc	r17, r21
     a82:	28 f4       	brcc	.+10     	; 0xa8e <__stack+0x62f>
     a84:	08 94       	sec
     a86:	a1 08       	sbc	r10, r1
     a88:	b1 08       	sbc	r11, r1
     a8a:	c1 08       	sbc	r12, r1
     a8c:	d1 08       	sbc	r13, r1
     a8e:	61 96       	adiw	r28, 0x11	; 17
     a90:	ec ac       	ldd	r14, Y+60	; 0x3c
     a92:	fd ac       	ldd	r15, Y+61	; 0x3d
     a94:	0e ad       	ldd	r16, Y+62	; 0x3e
     a96:	1f ad       	ldd	r17, Y+63	; 0x3f
     a98:	61 97       	sbiw	r28, 0x11	; 17
     a9a:	d7 01       	movw	r26, r14
     a9c:	99 27       	eor	r25, r25
     a9e:	88 27       	eor	r24, r24
     aa0:	96 01       	movw	r18, r12
     aa2:	85 01       	movw	r16, r10
     aa4:	08 2b       	or	r16, r24
     aa6:	19 2b       	or	r17, r25
     aa8:	2a 2b       	or	r18, r26
     aaa:	3b 2b       	or	r19, r27
     aac:	09 ab       	std	Y+49, r16	; 0x31
     aae:	1a ab       	std	Y+50, r17	; 0x32
     ab0:	2b ab       	std	Y+51, r18	; 0x33
     ab2:	3c ab       	std	Y+52, r19	; 0x34
     ab4:	62 c2       	rjmp	.+1220   	; 0xf7a <__stack+0xb1b>
     ab6:	6e 14       	cp	r6, r14
     ab8:	7f 04       	cpc	r7, r15
     aba:	80 06       	cpc	r8, r16
     abc:	91 06       	cpc	r9, r17
     abe:	08 f4       	brcc	.+2      	; 0xac2 <__stack+0x663>
     ac0:	51 c2       	rjmp	.+1186   	; 0xf64 <__stack+0xb05>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	e2 16       	cp	r14, r18
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	f2 06       	cpc	r15, r18
     aca:	21 e0       	ldi	r18, 0x01	; 1
     acc:	02 07       	cpc	r16, r18
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	12 07       	cpc	r17, r18
     ad2:	88 f4       	brcc	.+34     	; 0xaf6 <__stack+0x697>
     ad4:	3f ef       	ldi	r19, 0xFF	; 255
     ad6:	e3 16       	cp	r14, r19
     ad8:	f1 04       	cpc	r15, r1
     ada:	01 05       	cpc	r16, r1
     adc:	11 05       	cpc	r17, r1
     ade:	31 f0       	breq	.+12     	; 0xaec <__stack+0x68d>
     ae0:	28 f0       	brcs	.+10     	; 0xaec <__stack+0x68d>
     ae2:	48 e0       	ldi	r20, 0x08	; 8
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	17 c0       	rjmp	.+46     	; 0xb1a <__stack+0x6bb>
     aec:	40 e0       	ldi	r20, 0x00	; 0
     aee:	50 e0       	ldi	r21, 0x00	; 0
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	70 e0       	ldi	r23, 0x00	; 0
     af4:	12 c0       	rjmp	.+36     	; 0xb1a <__stack+0x6bb>
     af6:	40 e0       	ldi	r20, 0x00	; 0
     af8:	e4 16       	cp	r14, r20
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	f4 06       	cpc	r15, r20
     afe:	40 e0       	ldi	r20, 0x00	; 0
     b00:	04 07       	cpc	r16, r20
     b02:	41 e0       	ldi	r20, 0x01	; 1
     b04:	14 07       	cpc	r17, r20
     b06:	28 f0       	brcs	.+10     	; 0xb12 <__stack+0x6b3>
     b08:	48 e1       	ldi	r20, 0x18	; 24
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	04 c0       	rjmp	.+8      	; 0xb1a <__stack+0x6bb>
     b12:	40 e1       	ldi	r20, 0x10	; 16
     b14:	50 e0       	ldi	r21, 0x00	; 0
     b16:	60 e0       	ldi	r22, 0x00	; 0
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	d8 01       	movw	r26, r16
     b1c:	c7 01       	movw	r24, r14
     b1e:	04 2e       	mov	r0, r20
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__stack+0x6cb>
     b22:	b6 95       	lsr	r27
     b24:	a7 95       	ror	r26
     b26:	97 95       	ror	r25
     b28:	87 95       	ror	r24
     b2a:	0a 94       	dec	r0
     b2c:	d2 f7       	brpl	.-12     	; 0xb22 <__stack+0x6c3>
     b2e:	8f 57       	subi	r24, 0x7F	; 127
     b30:	9f 4f       	sbci	r25, 0xFF	; 255
     b32:	dc 01       	movw	r26, r24
     b34:	2c 91       	ld	r18, X
     b36:	30 e2       	ldi	r19, 0x20	; 32
     b38:	a3 2e       	mov	r10, r19
     b3a:	b1 2c       	mov	r11, r1
     b3c:	c1 2c       	mov	r12, r1
     b3e:	d1 2c       	mov	r13, r1
     b40:	d6 01       	movw	r26, r12
     b42:	c5 01       	movw	r24, r10
     b44:	84 1b       	sub	r24, r20
     b46:	95 0b       	sbc	r25, r21
     b48:	a6 0b       	sbc	r26, r22
     b4a:	b7 0b       	sbc	r27, r23
     b4c:	82 1b       	sub	r24, r18
     b4e:	91 09       	sbc	r25, r1
     b50:	a1 09       	sbc	r26, r1
     b52:	b1 09       	sbc	r27, r1
     b54:	00 97       	sbiw	r24, 0x00	; 0
     b56:	a1 05       	cpc	r26, r1
     b58:	b1 05       	cpc	r27, r1
     b5a:	89 f4       	brne	.+34     	; 0xb7e <__stack+0x71f>
     b5c:	e6 14       	cp	r14, r6
     b5e:	f7 04       	cpc	r15, r7
     b60:	08 05       	cpc	r16, r8
     b62:	19 05       	cpc	r17, r9
     b64:	08 f4       	brcc	.+2      	; 0xb68 <__stack+0x709>
     b66:	f2 c1       	rjmp	.+996    	; 0xf4c <__stack+0xaed>
     b68:	6d a4       	ldd	r6, Y+45	; 0x2d
     b6a:	7e a4       	ldd	r7, Y+46	; 0x2e
     b6c:	8f a4       	ldd	r8, Y+47	; 0x2f
     b6e:	98 a8       	ldd	r9, Y+48	; 0x30
     b70:	62 14       	cp	r6, r2
     b72:	73 04       	cpc	r7, r3
     b74:	84 04       	cpc	r8, r4
     b76:	95 04       	cpc	r9, r5
     b78:	08 f0       	brcs	.+2      	; 0xb7c <__stack+0x71d>
     b7a:	e8 c1       	rjmp	.+976    	; 0xf4c <__stack+0xaed>
     b7c:	f3 c1       	rjmp	.+998    	; 0xf64 <__stack+0xb05>
     b7e:	6e 96       	adiw	r28, 0x1e	; 30
     b80:	8f af       	std	Y+63, r24	; 0x3f
     b82:	6e 97       	sbiw	r28, 0x1e	; 30
     b84:	08 2e       	mov	r0, r24
     b86:	04 c0       	rjmp	.+8      	; 0xb90 <__stack+0x731>
     b88:	ee 0c       	add	r14, r14
     b8a:	ff 1c       	adc	r15, r15
     b8c:	00 1f       	adc	r16, r16
     b8e:	11 1f       	adc	r17, r17
     b90:	0a 94       	dec	r0
     b92:	d2 f7       	brpl	.-12     	; 0xb88 <__stack+0x729>
     b94:	6a 2d       	mov	r22, r10
     b96:	68 1b       	sub	r22, r24
     b98:	d2 01       	movw	r26, r4
     b9a:	c1 01       	movw	r24, r2
     b9c:	06 2e       	mov	r0, r22
     b9e:	04 c0       	rjmp	.+8      	; 0xba8 <__stack+0x749>
     ba0:	b6 95       	lsr	r27
     ba2:	a7 95       	ror	r26
     ba4:	97 95       	ror	r25
     ba6:	87 95       	ror	r24
     ba8:	0a 94       	dec	r0
     baa:	d2 f7       	brpl	.-12     	; 0xba0 <__stack+0x741>
     bac:	5c 01       	movw	r10, r24
     bae:	6d 01       	movw	r12, r26
     bb0:	ae 28       	or	r10, r14
     bb2:	bf 28       	or	r11, r15
     bb4:	c0 2a       	or	r12, r16
     bb6:	d1 2a       	or	r13, r17
     bb8:	ad a2       	std	Y+37, r10	; 0x25
     bba:	be a2       	std	Y+38, r11	; 0x26
     bbc:	cf a2       	std	Y+39, r12	; 0x27
     bbe:	d8 a6       	std	Y+40, r13	; 0x28
     bc0:	72 01       	movw	r14, r4
     bc2:	61 01       	movw	r12, r2
     bc4:	6e 96       	adiw	r28, 0x1e	; 30
     bc6:	0f ac       	ldd	r0, Y+63	; 0x3f
     bc8:	6e 97       	sbiw	r28, 0x1e	; 30
     bca:	04 c0       	rjmp	.+8      	; 0xbd4 <__stack+0x775>
     bcc:	cc 0c       	add	r12, r12
     bce:	dd 1c       	adc	r13, r13
     bd0:	ee 1c       	adc	r14, r14
     bd2:	ff 1c       	adc	r15, r15
     bd4:	0a 94       	dec	r0
     bd6:	d2 f7       	brpl	.-12     	; 0xbcc <__stack+0x76d>
     bd8:	c9 a2       	std	Y+33, r12	; 0x21
     bda:	da a2       	std	Y+34, r13	; 0x22
     bdc:	eb a2       	std	Y+35, r14	; 0x23
     bde:	fc a2       	std	Y+36, r15	; 0x24
     be0:	64 01       	movw	r12, r8
     be2:	53 01       	movw	r10, r6
     be4:	06 2e       	mov	r0, r22
     be6:	04 c0       	rjmp	.+8      	; 0xbf0 <__stack+0x791>
     be8:	d6 94       	lsr	r13
     bea:	c7 94       	ror	r12
     bec:	b7 94       	ror	r11
     bee:	a7 94       	ror	r10
     bf0:	0a 94       	dec	r0
     bf2:	d2 f7       	brpl	.-12     	; 0xbe8 <__stack+0x789>
     bf4:	d4 01       	movw	r26, r8
     bf6:	c3 01       	movw	r24, r6
     bf8:	6e 96       	adiw	r28, 0x1e	; 30
     bfa:	0f ac       	ldd	r0, Y+63	; 0x3f
     bfc:	6e 97       	sbiw	r28, 0x1e	; 30
     bfe:	04 c0       	rjmp	.+8      	; 0xc08 <__stack+0x7a9>
     c00:	88 0f       	add	r24, r24
     c02:	99 1f       	adc	r25, r25
     c04:	aa 1f       	adc	r26, r26
     c06:	bb 1f       	adc	r27, r27
     c08:	0a 94       	dec	r0
     c0a:	d2 f7       	brpl	.-12     	; 0xc00 <__stack+0x7a1>
     c0c:	ed a4       	ldd	r14, Y+45	; 0x2d
     c0e:	fe a4       	ldd	r15, Y+46	; 0x2e
     c10:	0f a5       	ldd	r16, Y+47	; 0x2f
     c12:	18 a9       	ldd	r17, Y+48	; 0x30
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__stack+0x7bf>
     c16:	16 95       	lsr	r17
     c18:	07 95       	ror	r16
     c1a:	f7 94       	ror	r15
     c1c:	e7 94       	ror	r14
     c1e:	6a 95       	dec	r22
     c20:	d2 f7       	brpl	.-12     	; 0xc16 <__stack+0x7b7>
     c22:	37 01       	movw	r6, r14
     c24:	48 01       	movw	r8, r16
     c26:	68 2a       	or	r6, r24
     c28:	79 2a       	or	r7, r25
     c2a:	8a 2a       	or	r8, r26
     c2c:	9b 2a       	or	r9, r27
     c2e:	6d 8e       	std	Y+29, r6	; 0x1d
     c30:	7e 8e       	std	Y+30, r7	; 0x1e
     c32:	8f 8e       	std	Y+31, r8	; 0x1f
     c34:	98 a2       	std	Y+32, r9	; 0x20
     c36:	ed a0       	ldd	r14, Y+37	; 0x25
     c38:	fe a0       	ldd	r15, Y+38	; 0x26
     c3a:	0f a1       	ldd	r16, Y+39	; 0x27
     c3c:	18 a5       	ldd	r17, Y+40	; 0x28
     c3e:	38 01       	movw	r6, r16
     c40:	88 24       	eor	r8, r8
     c42:	99 24       	eor	r9, r9
     c44:	98 01       	movw	r18, r16
     c46:	87 01       	movw	r16, r14
     c48:	20 70       	andi	r18, 0x00	; 0
     c4a:	30 70       	andi	r19, 0x00	; 0
     c4c:	65 96       	adiw	r28, 0x15	; 21
     c4e:	0c af       	std	Y+60, r16	; 0x3c
     c50:	1d af       	std	Y+61, r17	; 0x3d
     c52:	2e af       	std	Y+62, r18	; 0x3e
     c54:	3f af       	std	Y+63, r19	; 0x3f
     c56:	65 97       	sbiw	r28, 0x15	; 21
     c58:	c6 01       	movw	r24, r12
     c5a:	b5 01       	movw	r22, r10
     c5c:	a4 01       	movw	r20, r8
     c5e:	93 01       	movw	r18, r6
     c60:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     c64:	7b 01       	movw	r14, r22
     c66:	8c 01       	movw	r16, r24
     c68:	c6 01       	movw	r24, r12
     c6a:	b5 01       	movw	r22, r10
     c6c:	a4 01       	movw	r20, r8
     c6e:	93 01       	movw	r18, r6
     c70:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     c74:	c9 01       	movw	r24, r18
     c76:	da 01       	movw	r26, r20
     c78:	1c 01       	movw	r2, r24
     c7a:	2d 01       	movw	r4, r26
     c7c:	c2 01       	movw	r24, r4
     c7e:	b1 01       	movw	r22, r2
     c80:	65 96       	adiw	r28, 0x15	; 21
     c82:	2c ad       	ldd	r18, Y+60	; 0x3c
     c84:	3d ad       	ldd	r19, Y+61	; 0x3d
     c86:	4e ad       	ldd	r20, Y+62	; 0x3e
     c88:	5f ad       	ldd	r21, Y+63	; 0x3f
     c8a:	65 97       	sbiw	r28, 0x15	; 21
     c8c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     c90:	9b 01       	movw	r18, r22
     c92:	ac 01       	movw	r20, r24
     c94:	87 01       	movw	r16, r14
     c96:	ff 24       	eor	r15, r15
     c98:	ee 24       	eor	r14, r14
     c9a:	ad 8c       	ldd	r10, Y+29	; 0x1d
     c9c:	be 8c       	ldd	r11, Y+30	; 0x1e
     c9e:	cf 8c       	ldd	r12, Y+31	; 0x1f
     ca0:	d8 a0       	ldd	r13, Y+32	; 0x20
     ca2:	c6 01       	movw	r24, r12
     ca4:	aa 27       	eor	r26, r26
     ca6:	bb 27       	eor	r27, r27
     ca8:	57 01       	movw	r10, r14
     caa:	68 01       	movw	r12, r16
     cac:	a8 2a       	or	r10, r24
     cae:	b9 2a       	or	r11, r25
     cb0:	ca 2a       	or	r12, r26
     cb2:	db 2a       	or	r13, r27
     cb4:	a2 16       	cp	r10, r18
     cb6:	b3 06       	cpc	r11, r19
     cb8:	c4 06       	cpc	r12, r20
     cba:	d5 06       	cpc	r13, r21
     cbc:	00 f5       	brcc	.+64     	; 0xcfe <__stack+0x89f>
     cbe:	08 94       	sec
     cc0:	21 08       	sbc	r2, r1
     cc2:	31 08       	sbc	r3, r1
     cc4:	41 08       	sbc	r4, r1
     cc6:	51 08       	sbc	r5, r1
     cc8:	ed a0       	ldd	r14, Y+37	; 0x25
     cca:	fe a0       	ldd	r15, Y+38	; 0x26
     ccc:	0f a1       	ldd	r16, Y+39	; 0x27
     cce:	18 a5       	ldd	r17, Y+40	; 0x28
     cd0:	ae 0c       	add	r10, r14
     cd2:	bf 1c       	adc	r11, r15
     cd4:	c0 1e       	adc	r12, r16
     cd6:	d1 1e       	adc	r13, r17
     cd8:	ae 14       	cp	r10, r14
     cda:	bf 04       	cpc	r11, r15
     cdc:	c0 06       	cpc	r12, r16
     cde:	d1 06       	cpc	r13, r17
     ce0:	70 f0       	brcs	.+28     	; 0xcfe <__stack+0x89f>
     ce2:	a2 16       	cp	r10, r18
     ce4:	b3 06       	cpc	r11, r19
     ce6:	c4 06       	cpc	r12, r20
     ce8:	d5 06       	cpc	r13, r21
     cea:	48 f4       	brcc	.+18     	; 0xcfe <__stack+0x89f>
     cec:	08 94       	sec
     cee:	21 08       	sbc	r2, r1
     cf0:	31 08       	sbc	r3, r1
     cf2:	41 08       	sbc	r4, r1
     cf4:	51 08       	sbc	r5, r1
     cf6:	ae 0c       	add	r10, r14
     cf8:	bf 1c       	adc	r11, r15
     cfa:	c0 1e       	adc	r12, r16
     cfc:	d1 1e       	adc	r13, r17
     cfe:	a2 1a       	sub	r10, r18
     d00:	b3 0a       	sbc	r11, r19
     d02:	c4 0a       	sbc	r12, r20
     d04:	d5 0a       	sbc	r13, r21
     d06:	c6 01       	movw	r24, r12
     d08:	b5 01       	movw	r22, r10
     d0a:	a4 01       	movw	r20, r8
     d0c:	93 01       	movw	r18, r6
     d0e:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     d12:	7b 01       	movw	r14, r22
     d14:	8c 01       	movw	r16, r24
     d16:	c6 01       	movw	r24, r12
     d18:	b5 01       	movw	r22, r10
     d1a:	a4 01       	movw	r20, r8
     d1c:	93 01       	movw	r18, r6
     d1e:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <__udivmodsi4>
     d22:	c9 01       	movw	r24, r18
     d24:	da 01       	movw	r26, r20
     d26:	3c 01       	movw	r6, r24
     d28:	4d 01       	movw	r8, r26
     d2a:	c4 01       	movw	r24, r8
     d2c:	b3 01       	movw	r22, r6
     d2e:	65 96       	adiw	r28, 0x15	; 21
     d30:	2c ad       	ldd	r18, Y+60	; 0x3c
     d32:	3d ad       	ldd	r19, Y+61	; 0x3d
     d34:	4e ad       	ldd	r20, Y+62	; 0x3e
     d36:	5f ad       	ldd	r21, Y+63	; 0x3f
     d38:	65 97       	sbiw	r28, 0x15	; 21
     d3a:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     d3e:	9b 01       	movw	r18, r22
     d40:	ac 01       	movw	r20, r24
     d42:	87 01       	movw	r16, r14
     d44:	ff 24       	eor	r15, r15
     d46:	ee 24       	eor	r14, r14
     d48:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d4a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d4c:	af 8d       	ldd	r26, Y+31	; 0x1f
     d4e:	b8 a1       	ldd	r27, Y+32	; 0x20
     d50:	a0 70       	andi	r26, 0x00	; 0
     d52:	b0 70       	andi	r27, 0x00	; 0
     d54:	57 01       	movw	r10, r14
     d56:	68 01       	movw	r12, r16
     d58:	a8 2a       	or	r10, r24
     d5a:	b9 2a       	or	r11, r25
     d5c:	ca 2a       	or	r12, r26
     d5e:	db 2a       	or	r13, r27
     d60:	a2 16       	cp	r10, r18
     d62:	b3 06       	cpc	r11, r19
     d64:	c4 06       	cpc	r12, r20
     d66:	d5 06       	cpc	r13, r21
     d68:	00 f5       	brcc	.+64     	; 0xdaa <__stack+0x94b>
     d6a:	08 94       	sec
     d6c:	61 08       	sbc	r6, r1
     d6e:	71 08       	sbc	r7, r1
     d70:	81 08       	sbc	r8, r1
     d72:	91 08       	sbc	r9, r1
     d74:	6d a1       	ldd	r22, Y+37	; 0x25
     d76:	7e a1       	ldd	r23, Y+38	; 0x26
     d78:	8f a1       	ldd	r24, Y+39	; 0x27
     d7a:	98 a5       	ldd	r25, Y+40	; 0x28
     d7c:	a6 0e       	add	r10, r22
     d7e:	b7 1e       	adc	r11, r23
     d80:	c8 1e       	adc	r12, r24
     d82:	d9 1e       	adc	r13, r25
     d84:	a6 16       	cp	r10, r22
     d86:	b7 06       	cpc	r11, r23
     d88:	c8 06       	cpc	r12, r24
     d8a:	d9 06       	cpc	r13, r25
     d8c:	70 f0       	brcs	.+28     	; 0xdaa <__stack+0x94b>
     d8e:	a2 16       	cp	r10, r18
     d90:	b3 06       	cpc	r11, r19
     d92:	c4 06       	cpc	r12, r20
     d94:	d5 06       	cpc	r13, r21
     d96:	48 f4       	brcc	.+18     	; 0xdaa <__stack+0x94b>
     d98:	08 94       	sec
     d9a:	61 08       	sbc	r6, r1
     d9c:	71 08       	sbc	r7, r1
     d9e:	81 08       	sbc	r8, r1
     da0:	91 08       	sbc	r9, r1
     da2:	a6 0e       	add	r10, r22
     da4:	b7 1e       	adc	r11, r23
     da6:	c8 1e       	adc	r12, r24
     da8:	d9 1e       	adc	r13, r25
     daa:	d6 01       	movw	r26, r12
     dac:	c5 01       	movw	r24, r10
     dae:	82 1b       	sub	r24, r18
     db0:	93 0b       	sbc	r25, r19
     db2:	a4 0b       	sbc	r26, r20
     db4:	b5 0b       	sbc	r27, r21
     db6:	89 8f       	std	Y+25, r24	; 0x19
     db8:	9a 8f       	std	Y+26, r25	; 0x1a
     dba:	ab 8f       	std	Y+27, r26	; 0x1b
     dbc:	bc 8f       	std	Y+28, r27	; 0x1c
     dbe:	d1 01       	movw	r26, r2
     dc0:	99 27       	eor	r25, r25
     dc2:	88 27       	eor	r24, r24
     dc4:	64 01       	movw	r12, r8
     dc6:	53 01       	movw	r10, r6
     dc8:	a8 2a       	or	r10, r24
     dca:	b9 2a       	or	r11, r25
     dcc:	ca 2a       	or	r12, r26
     dce:	db 2a       	or	r13, r27
     dd0:	a9 aa       	std	Y+49, r10	; 0x31
     dd2:	ba aa       	std	Y+50, r11	; 0x32
     dd4:	cb aa       	std	Y+51, r12	; 0x33
     dd6:	dc aa       	std	Y+52, r13	; 0x34
     dd8:	86 01       	movw	r16, r12
     dda:	75 01       	movw	r14, r10
     ddc:	2f ef       	ldi	r18, 0xFF	; 255
     dde:	3f ef       	ldi	r19, 0xFF	; 255
     de0:	40 e0       	ldi	r20, 0x00	; 0
     de2:	50 e0       	ldi	r21, 0x00	; 0
     de4:	e2 22       	and	r14, r18
     de6:	f3 22       	and	r15, r19
     de8:	04 23       	and	r16, r20
     dea:	15 23       	and	r17, r21
     dec:	a6 01       	movw	r20, r12
     dee:	66 27       	eor	r22, r22
     df0:	77 27       	eor	r23, r23
     df2:	6d 96       	adiw	r28, 0x1d	; 29
     df4:	4c af       	std	Y+60, r20	; 0x3c
     df6:	5d af       	std	Y+61, r21	; 0x3d
     df8:	6e af       	std	Y+62, r22	; 0x3e
     dfa:	7f af       	std	Y+63, r23	; 0x3f
     dfc:	6d 97       	sbiw	r28, 0x1d	; 29
     dfe:	a9 a0       	ldd	r10, Y+33	; 0x21
     e00:	ba a0       	ldd	r11, Y+34	; 0x22
     e02:	cb a0       	ldd	r12, Y+35	; 0x23
     e04:	dc a0       	ldd	r13, Y+36	; 0x24
     e06:	6f ef       	ldi	r22, 0xFF	; 255
     e08:	7f ef       	ldi	r23, 0xFF	; 255
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	a6 22       	and	r10, r22
     e10:	b7 22       	and	r11, r23
     e12:	c8 22       	and	r12, r24
     e14:	d9 22       	and	r13, r25
     e16:	89 a1       	ldd	r24, Y+33	; 0x21
     e18:	9a a1       	ldd	r25, Y+34	; 0x22
     e1a:	ab a1       	ldd	r26, Y+35	; 0x23
     e1c:	bc a1       	ldd	r27, Y+36	; 0x24
     e1e:	1d 01       	movw	r2, r26
     e20:	44 24       	eor	r4, r4
     e22:	55 24       	eor	r5, r5
     e24:	c8 01       	movw	r24, r16
     e26:	b7 01       	movw	r22, r14
     e28:	a6 01       	movw	r20, r12
     e2a:	95 01       	movw	r18, r10
     e2c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     e30:	69 96       	adiw	r28, 0x19	; 25
     e32:	6c af       	std	Y+60, r22	; 0x3c
     e34:	7d af       	std	Y+61, r23	; 0x3d
     e36:	8e af       	std	Y+62, r24	; 0x3e
     e38:	9f af       	std	Y+63, r25	; 0x3f
     e3a:	69 97       	sbiw	r28, 0x19	; 25
     e3c:	c8 01       	movw	r24, r16
     e3e:	b7 01       	movw	r22, r14
     e40:	a2 01       	movw	r20, r4
     e42:	91 01       	movw	r18, r2
     e44:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     e48:	3b 01       	movw	r6, r22
     e4a:	4c 01       	movw	r8, r24
     e4c:	6d 96       	adiw	r28, 0x1d	; 29
     e4e:	6c ad       	ldd	r22, Y+60	; 0x3c
     e50:	7d ad       	ldd	r23, Y+61	; 0x3d
     e52:	8e ad       	ldd	r24, Y+62	; 0x3e
     e54:	9f ad       	ldd	r25, Y+63	; 0x3f
     e56:	6d 97       	sbiw	r28, 0x1d	; 29
     e58:	a6 01       	movw	r20, r12
     e5a:	95 01       	movw	r18, r10
     e5c:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     e60:	7b 01       	movw	r14, r22
     e62:	8c 01       	movw	r16, r24
     e64:	6d 96       	adiw	r28, 0x1d	; 29
     e66:	6c ad       	ldd	r22, Y+60	; 0x3c
     e68:	7d ad       	ldd	r23, Y+61	; 0x3d
     e6a:	8e ad       	ldd	r24, Y+62	; 0x3e
     e6c:	9f ad       	ldd	r25, Y+63	; 0x3f
     e6e:	6d 97       	sbiw	r28, 0x1d	; 29
     e70:	a2 01       	movw	r20, r4
     e72:	91 01       	movw	r18, r2
     e74:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
     e78:	5b 01       	movw	r10, r22
     e7a:	6c 01       	movw	r12, r24
     e7c:	a8 01       	movw	r20, r16
     e7e:	97 01       	movw	r18, r14
     e80:	26 0d       	add	r18, r6
     e82:	37 1d       	adc	r19, r7
     e84:	48 1d       	adc	r20, r8
     e86:	59 1d       	adc	r21, r9
     e88:	69 96       	adiw	r28, 0x19	; 25
     e8a:	6c ac       	ldd	r6, Y+60	; 0x3c
     e8c:	7d ac       	ldd	r7, Y+61	; 0x3d
     e8e:	8e ac       	ldd	r8, Y+62	; 0x3e
     e90:	9f ac       	ldd	r9, Y+63	; 0x3f
     e92:	69 97       	sbiw	r28, 0x19	; 25
     e94:	c4 01       	movw	r24, r8
     e96:	aa 27       	eor	r26, r26
     e98:	bb 27       	eor	r27, r27
     e9a:	28 0f       	add	r18, r24
     e9c:	39 1f       	adc	r19, r25
     e9e:	4a 1f       	adc	r20, r26
     ea0:	5b 1f       	adc	r21, r27
     ea2:	2e 15       	cp	r18, r14
     ea4:	3f 05       	cpc	r19, r15
     ea6:	40 07       	cpc	r20, r16
     ea8:	51 07       	cpc	r21, r17
     eaa:	48 f4       	brcc	.+18     	; 0xebe <__stack+0xa5f>
     eac:	e1 2c       	mov	r14, r1
     eae:	f1 2c       	mov	r15, r1
     eb0:	61 e0       	ldi	r22, 0x01	; 1
     eb2:	06 2f       	mov	r16, r22
     eb4:	11 2d       	mov	r17, r1
     eb6:	ae 0c       	add	r10, r14
     eb8:	bf 1c       	adc	r11, r15
     eba:	c0 1e       	adc	r12, r16
     ebc:	d1 1e       	adc	r13, r17
     ebe:	ca 01       	movw	r24, r20
     ec0:	aa 27       	eor	r26, r26
     ec2:	bb 27       	eor	r27, r27
     ec4:	bc 01       	movw	r22, r24
     ec6:	cd 01       	movw	r24, r26
     ec8:	6a 0d       	add	r22, r10
     eca:	7b 1d       	adc	r23, r11
     ecc:	8c 1d       	adc	r24, r12
     ece:	9d 1d       	adc	r25, r13
     ed0:	69 8c       	ldd	r6, Y+25	; 0x19
     ed2:	7a 8c       	ldd	r7, Y+26	; 0x1a
     ed4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ed6:	9c 8c       	ldd	r9, Y+28	; 0x1c
     ed8:	66 16       	cp	r6, r22
     eda:	77 06       	cpc	r7, r23
     edc:	88 06       	cpc	r8, r24
     ede:	99 06       	cpc	r9, r25
     ee0:	40 f1       	brcs	.+80     	; 0xf32 <__stack+0xad3>
     ee2:	66 15       	cp	r22, r6
     ee4:	77 05       	cpc	r23, r7
     ee6:	88 05       	cpc	r24, r8
     ee8:	99 05       	cpc	r25, r9
     eea:	09 f0       	breq	.+2      	; 0xeee <__stack+0xa8f>
     eec:	43 c0       	rjmp	.+134    	; 0xf74 <__stack+0xb15>
     eee:	d9 01       	movw	r26, r18
     ef0:	99 27       	eor	r25, r25
     ef2:	88 27       	eor	r24, r24
     ef4:	69 96       	adiw	r28, 0x19	; 25
     ef6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ef8:	3d ad       	ldd	r19, Y+61	; 0x3d
     efa:	4e ad       	ldd	r20, Y+62	; 0x3e
     efc:	5f ad       	ldd	r21, Y+63	; 0x3f
     efe:	69 97       	sbiw	r28, 0x19	; 25
     f00:	40 70       	andi	r20, 0x00	; 0
     f02:	50 70       	andi	r21, 0x00	; 0
     f04:	82 0f       	add	r24, r18
     f06:	93 1f       	adc	r25, r19
     f08:	a4 1f       	adc	r26, r20
     f0a:	b5 1f       	adc	r27, r21
     f0c:	2d a5       	ldd	r18, Y+45	; 0x2d
     f0e:	3e a5       	ldd	r19, Y+46	; 0x2e
     f10:	4f a5       	ldd	r20, Y+47	; 0x2f
     f12:	58 a9       	ldd	r21, Y+48	; 0x30
     f14:	6e 96       	adiw	r28, 0x1e	; 30
     f16:	0f ac       	ldd	r0, Y+63	; 0x3f
     f18:	6e 97       	sbiw	r28, 0x1e	; 30
     f1a:	04 c0       	rjmp	.+8      	; 0xf24 <__stack+0xac5>
     f1c:	22 0f       	add	r18, r18
     f1e:	33 1f       	adc	r19, r19
     f20:	44 1f       	adc	r20, r20
     f22:	55 1f       	adc	r21, r21
     f24:	0a 94       	dec	r0
     f26:	d2 f7       	brpl	.-12     	; 0xf1c <__stack+0xabd>
     f28:	28 17       	cp	r18, r24
     f2a:	39 07       	cpc	r19, r25
     f2c:	4a 07       	cpc	r20, r26
     f2e:	5b 07       	cpc	r21, r27
     f30:	08 f5       	brcc	.+66     	; 0xf74 <__stack+0xb15>
     f32:	09 a9       	ldd	r16, Y+49	; 0x31
     f34:	1a a9       	ldd	r17, Y+50	; 0x32
     f36:	2b a9       	ldd	r18, Y+51	; 0x33
     f38:	3c a9       	ldd	r19, Y+52	; 0x34
     f3a:	01 50       	subi	r16, 0x01	; 1
     f3c:	10 40       	sbci	r17, 0x00	; 0
     f3e:	20 40       	sbci	r18, 0x00	; 0
     f40:	30 40       	sbci	r19, 0x00	; 0
     f42:	09 ab       	std	Y+49, r16	; 0x31
     f44:	1a ab       	std	Y+50, r17	; 0x32
     f46:	2b ab       	std	Y+51, r18	; 0x33
     f48:	3c ab       	std	Y+52, r19	; 0x34
     f4a:	14 c0       	rjmp	.+40     	; 0xf74 <__stack+0xb15>
     f4c:	66 24       	eor	r6, r6
     f4e:	77 24       	eor	r7, r7
     f50:	43 01       	movw	r8, r6
     f52:	21 e0       	ldi	r18, 0x01	; 1
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	40 e0       	ldi	r20, 0x00	; 0
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	29 ab       	std	Y+49, r18	; 0x31
     f5c:	3a ab       	std	Y+50, r19	; 0x32
     f5e:	4b ab       	std	Y+51, r20	; 0x33
     f60:	5c ab       	std	Y+52, r21	; 0x34
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <__stack+0xb1b>
     f64:	66 24       	eor	r6, r6
     f66:	77 24       	eor	r7, r7
     f68:	43 01       	movw	r8, r6
     f6a:	19 aa       	std	Y+49, r1	; 0x31
     f6c:	1a aa       	std	Y+50, r1	; 0x32
     f6e:	1b aa       	std	Y+51, r1	; 0x33
     f70:	1c aa       	std	Y+52, r1	; 0x34
     f72:	03 c0       	rjmp	.+6      	; 0xf7a <__stack+0xb1b>
     f74:	66 24       	eor	r6, r6
     f76:	77 24       	eor	r7, r7
     f78:	43 01       	movw	r8, r6
     f7a:	fe 01       	movw	r30, r28
     f7c:	71 96       	adiw	r30, 0x11	; 17
     f7e:	88 e0       	ldi	r24, 0x08	; 8
     f80:	df 01       	movw	r26, r30
     f82:	1d 92       	st	X+, r1
     f84:	8a 95       	dec	r24
     f86:	e9 f7       	brne	.-6      	; 0xf82 <__stack+0xb23>
     f88:	a9 a8       	ldd	r10, Y+49	; 0x31
     f8a:	ba a8       	ldd	r11, Y+50	; 0x32
     f8c:	cb a8       	ldd	r12, Y+51	; 0x33
     f8e:	dc a8       	ldd	r13, Y+52	; 0x34
     f90:	a9 8a       	std	Y+17, r10	; 0x11
     f92:	ba 8a       	std	Y+18, r11	; 0x12
     f94:	cb 8a       	std	Y+19, r12	; 0x13
     f96:	dc 8a       	std	Y+20, r13	; 0x14
     f98:	6d 8a       	std	Y+21, r6	; 0x15
     f9a:	7e 8a       	std	Y+22, r7	; 0x16
     f9c:	8f 8a       	std	Y+23, r8	; 0x17
     f9e:	98 8e       	std	Y+24, r9	; 0x18
     fa0:	29 a9       	ldd	r18, Y+49	; 0x31
     fa2:	3a 89       	ldd	r19, Y+18	; 0x12
     fa4:	4b 89       	ldd	r20, Y+19	; 0x13
     fa6:	5c 89       	ldd	r21, Y+20	; 0x14
     fa8:	66 2d       	mov	r22, r6
     faa:	7e 89       	ldd	r23, Y+22	; 0x16
     fac:	8f 89       	ldd	r24, Y+23	; 0x17
     fae:	98 8d       	ldd	r25, Y+24	; 0x18
     fb0:	c2 5a       	subi	r28, 0xA2	; 162
     fb2:	df 4f       	sbci	r29, 0xFF	; 255
     fb4:	e2 e1       	ldi	r30, 0x12	; 18
     fb6:	0c 94 1f 1d 	jmp	0x3a3e	; 0x3a3e <__epilogue_restores__>

00000fba <_fpadd_parts>:
     fba:	a0 e0       	ldi	r26, 0x00	; 0
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	e3 ee       	ldi	r30, 0xE3	; 227
     fc0:	f7 e0       	ldi	r31, 0x07	; 7
     fc2:	0c 94 03 1d 	jmp	0x3a06	; 0x3a06 <__prologue_saves__>
     fc6:	dc 01       	movw	r26, r24
     fc8:	2b 01       	movw	r4, r22
     fca:	fa 01       	movw	r30, r20
     fcc:	9c 91       	ld	r25, X
     fce:	92 30       	cpi	r25, 0x02	; 2
     fd0:	08 f4       	brcc	.+2      	; 0xfd4 <_fpadd_parts+0x1a>
     fd2:	39 c1       	rjmp	.+626    	; 0x1246 <_fpadd_parts+0x28c>
     fd4:	eb 01       	movw	r28, r22
     fd6:	88 81       	ld	r24, Y
     fd8:	82 30       	cpi	r24, 0x02	; 2
     fda:	08 f4       	brcc	.+2      	; 0xfde <_fpadd_parts+0x24>
     fdc:	33 c1       	rjmp	.+614    	; 0x1244 <_fpadd_parts+0x28a>
     fde:	94 30       	cpi	r25, 0x04	; 4
     fe0:	69 f4       	brne	.+26     	; 0xffc <_fpadd_parts+0x42>
     fe2:	84 30       	cpi	r24, 0x04	; 4
     fe4:	09 f0       	breq	.+2      	; 0xfe8 <_fpadd_parts+0x2e>
     fe6:	2f c1       	rjmp	.+606    	; 0x1246 <_fpadd_parts+0x28c>
     fe8:	11 96       	adiw	r26, 0x01	; 1
     fea:	9c 91       	ld	r25, X
     fec:	11 97       	sbiw	r26, 0x01	; 1
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	98 17       	cp	r25, r24
     ff2:	09 f4       	brne	.+2      	; 0xff6 <_fpadd_parts+0x3c>
     ff4:	28 c1       	rjmp	.+592    	; 0x1246 <_fpadd_parts+0x28c>
     ff6:	a9 e7       	ldi	r26, 0x79	; 121
     ff8:	b0 e0       	ldi	r27, 0x00	; 0
     ffa:	25 c1       	rjmp	.+586    	; 0x1246 <_fpadd_parts+0x28c>
     ffc:	84 30       	cpi	r24, 0x04	; 4
     ffe:	09 f4       	brne	.+2      	; 0x1002 <_fpadd_parts+0x48>
    1000:	21 c1       	rjmp	.+578    	; 0x1244 <_fpadd_parts+0x28a>
    1002:	82 30       	cpi	r24, 0x02	; 2
    1004:	a9 f4       	brne	.+42     	; 0x1030 <_fpadd_parts+0x76>
    1006:	92 30       	cpi	r25, 0x02	; 2
    1008:	09 f0       	breq	.+2      	; 0x100c <_fpadd_parts+0x52>
    100a:	1d c1       	rjmp	.+570    	; 0x1246 <_fpadd_parts+0x28c>
    100c:	9a 01       	movw	r18, r20
    100e:	ad 01       	movw	r20, r26
    1010:	88 e0       	ldi	r24, 0x08	; 8
    1012:	ea 01       	movw	r28, r20
    1014:	09 90       	ld	r0, Y+
    1016:	ae 01       	movw	r20, r28
    1018:	e9 01       	movw	r28, r18
    101a:	09 92       	st	Y+, r0
    101c:	9e 01       	movw	r18, r28
    101e:	81 50       	subi	r24, 0x01	; 1
    1020:	c1 f7       	brne	.-16     	; 0x1012 <_fpadd_parts+0x58>
    1022:	e2 01       	movw	r28, r4
    1024:	89 81       	ldd	r24, Y+1	; 0x01
    1026:	11 96       	adiw	r26, 0x01	; 1
    1028:	9c 91       	ld	r25, X
    102a:	89 23       	and	r24, r25
    102c:	81 83       	std	Z+1, r24	; 0x01
    102e:	08 c1       	rjmp	.+528    	; 0x1240 <_fpadd_parts+0x286>
    1030:	92 30       	cpi	r25, 0x02	; 2
    1032:	09 f4       	brne	.+2      	; 0x1036 <_fpadd_parts+0x7c>
    1034:	07 c1       	rjmp	.+526    	; 0x1244 <_fpadd_parts+0x28a>
    1036:	12 96       	adiw	r26, 0x02	; 2
    1038:	2d 90       	ld	r2, X+
    103a:	3c 90       	ld	r3, X
    103c:	13 97       	sbiw	r26, 0x03	; 3
    103e:	eb 01       	movw	r28, r22
    1040:	8a 81       	ldd	r24, Y+2	; 0x02
    1042:	9b 81       	ldd	r25, Y+3	; 0x03
    1044:	14 96       	adiw	r26, 0x04	; 4
    1046:	ad 90       	ld	r10, X+
    1048:	bd 90       	ld	r11, X+
    104a:	cd 90       	ld	r12, X+
    104c:	dc 90       	ld	r13, X
    104e:	17 97       	sbiw	r26, 0x07	; 7
    1050:	ec 80       	ldd	r14, Y+4	; 0x04
    1052:	fd 80       	ldd	r15, Y+5	; 0x05
    1054:	0e 81       	ldd	r16, Y+6	; 0x06
    1056:	1f 81       	ldd	r17, Y+7	; 0x07
    1058:	91 01       	movw	r18, r2
    105a:	28 1b       	sub	r18, r24
    105c:	39 0b       	sbc	r19, r25
    105e:	b9 01       	movw	r22, r18
    1060:	37 ff       	sbrs	r19, 7
    1062:	04 c0       	rjmp	.+8      	; 0x106c <_fpadd_parts+0xb2>
    1064:	66 27       	eor	r22, r22
    1066:	77 27       	eor	r23, r23
    1068:	62 1b       	sub	r22, r18
    106a:	73 0b       	sbc	r23, r19
    106c:	60 32       	cpi	r22, 0x20	; 32
    106e:	71 05       	cpc	r23, r1
    1070:	0c f0       	brlt	.+2      	; 0x1074 <_fpadd_parts+0xba>
    1072:	61 c0       	rjmp	.+194    	; 0x1136 <_fpadd_parts+0x17c>
    1074:	12 16       	cp	r1, r18
    1076:	13 06       	cpc	r1, r19
    1078:	6c f5       	brge	.+90     	; 0x10d4 <_fpadd_parts+0x11a>
    107a:	37 01       	movw	r6, r14
    107c:	48 01       	movw	r8, r16
    107e:	06 2e       	mov	r0, r22
    1080:	04 c0       	rjmp	.+8      	; 0x108a <_fpadd_parts+0xd0>
    1082:	96 94       	lsr	r9
    1084:	87 94       	ror	r8
    1086:	77 94       	ror	r7
    1088:	67 94       	ror	r6
    108a:	0a 94       	dec	r0
    108c:	d2 f7       	brpl	.-12     	; 0x1082 <_fpadd_parts+0xc8>
    108e:	21 e0       	ldi	r18, 0x01	; 1
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	40 e0       	ldi	r20, 0x00	; 0
    1094:	50 e0       	ldi	r21, 0x00	; 0
    1096:	04 c0       	rjmp	.+8      	; 0x10a0 <_fpadd_parts+0xe6>
    1098:	22 0f       	add	r18, r18
    109a:	33 1f       	adc	r19, r19
    109c:	44 1f       	adc	r20, r20
    109e:	55 1f       	adc	r21, r21
    10a0:	6a 95       	dec	r22
    10a2:	d2 f7       	brpl	.-12     	; 0x1098 <_fpadd_parts+0xde>
    10a4:	21 50       	subi	r18, 0x01	; 1
    10a6:	30 40       	sbci	r19, 0x00	; 0
    10a8:	40 40       	sbci	r20, 0x00	; 0
    10aa:	50 40       	sbci	r21, 0x00	; 0
    10ac:	2e 21       	and	r18, r14
    10ae:	3f 21       	and	r19, r15
    10b0:	40 23       	and	r20, r16
    10b2:	51 23       	and	r21, r17
    10b4:	21 15       	cp	r18, r1
    10b6:	31 05       	cpc	r19, r1
    10b8:	41 05       	cpc	r20, r1
    10ba:	51 05       	cpc	r21, r1
    10bc:	21 f0       	breq	.+8      	; 0x10c6 <_fpadd_parts+0x10c>
    10be:	21 e0       	ldi	r18, 0x01	; 1
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	40 e0       	ldi	r20, 0x00	; 0
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	79 01       	movw	r14, r18
    10c8:	8a 01       	movw	r16, r20
    10ca:	e6 28       	or	r14, r6
    10cc:	f7 28       	or	r15, r7
    10ce:	08 29       	or	r16, r8
    10d0:	19 29       	or	r17, r9
    10d2:	3c c0       	rjmp	.+120    	; 0x114c <_fpadd_parts+0x192>
    10d4:	23 2b       	or	r18, r19
    10d6:	d1 f1       	breq	.+116    	; 0x114c <_fpadd_parts+0x192>
    10d8:	26 0e       	add	r2, r22
    10da:	37 1e       	adc	r3, r23
    10dc:	35 01       	movw	r6, r10
    10de:	46 01       	movw	r8, r12
    10e0:	06 2e       	mov	r0, r22
    10e2:	04 c0       	rjmp	.+8      	; 0x10ec <_fpadd_parts+0x132>
    10e4:	96 94       	lsr	r9
    10e6:	87 94       	ror	r8
    10e8:	77 94       	ror	r7
    10ea:	67 94       	ror	r6
    10ec:	0a 94       	dec	r0
    10ee:	d2 f7       	brpl	.-12     	; 0x10e4 <_fpadd_parts+0x12a>
    10f0:	21 e0       	ldi	r18, 0x01	; 1
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	40 e0       	ldi	r20, 0x00	; 0
    10f6:	50 e0       	ldi	r21, 0x00	; 0
    10f8:	04 c0       	rjmp	.+8      	; 0x1102 <_fpadd_parts+0x148>
    10fa:	22 0f       	add	r18, r18
    10fc:	33 1f       	adc	r19, r19
    10fe:	44 1f       	adc	r20, r20
    1100:	55 1f       	adc	r21, r21
    1102:	6a 95       	dec	r22
    1104:	d2 f7       	brpl	.-12     	; 0x10fa <_fpadd_parts+0x140>
    1106:	21 50       	subi	r18, 0x01	; 1
    1108:	30 40       	sbci	r19, 0x00	; 0
    110a:	40 40       	sbci	r20, 0x00	; 0
    110c:	50 40       	sbci	r21, 0x00	; 0
    110e:	2a 21       	and	r18, r10
    1110:	3b 21       	and	r19, r11
    1112:	4c 21       	and	r20, r12
    1114:	5d 21       	and	r21, r13
    1116:	21 15       	cp	r18, r1
    1118:	31 05       	cpc	r19, r1
    111a:	41 05       	cpc	r20, r1
    111c:	51 05       	cpc	r21, r1
    111e:	21 f0       	breq	.+8      	; 0x1128 <_fpadd_parts+0x16e>
    1120:	21 e0       	ldi	r18, 0x01	; 1
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	40 e0       	ldi	r20, 0x00	; 0
    1126:	50 e0       	ldi	r21, 0x00	; 0
    1128:	59 01       	movw	r10, r18
    112a:	6a 01       	movw	r12, r20
    112c:	a6 28       	or	r10, r6
    112e:	b7 28       	or	r11, r7
    1130:	c8 28       	or	r12, r8
    1132:	d9 28       	or	r13, r9
    1134:	0b c0       	rjmp	.+22     	; 0x114c <_fpadd_parts+0x192>
    1136:	82 15       	cp	r24, r2
    1138:	93 05       	cpc	r25, r3
    113a:	2c f0       	brlt	.+10     	; 0x1146 <_fpadd_parts+0x18c>
    113c:	1c 01       	movw	r2, r24
    113e:	aa 24       	eor	r10, r10
    1140:	bb 24       	eor	r11, r11
    1142:	65 01       	movw	r12, r10
    1144:	03 c0       	rjmp	.+6      	; 0x114c <_fpadd_parts+0x192>
    1146:	ee 24       	eor	r14, r14
    1148:	ff 24       	eor	r15, r15
    114a:	87 01       	movw	r16, r14
    114c:	11 96       	adiw	r26, 0x01	; 1
    114e:	9c 91       	ld	r25, X
    1150:	d2 01       	movw	r26, r4
    1152:	11 96       	adiw	r26, 0x01	; 1
    1154:	8c 91       	ld	r24, X
    1156:	98 17       	cp	r25, r24
    1158:	09 f4       	brne	.+2      	; 0x115c <_fpadd_parts+0x1a2>
    115a:	45 c0       	rjmp	.+138    	; 0x11e6 <_fpadd_parts+0x22c>
    115c:	99 23       	and	r25, r25
    115e:	39 f0       	breq	.+14     	; 0x116e <_fpadd_parts+0x1b4>
    1160:	a8 01       	movw	r20, r16
    1162:	97 01       	movw	r18, r14
    1164:	2a 19       	sub	r18, r10
    1166:	3b 09       	sbc	r19, r11
    1168:	4c 09       	sbc	r20, r12
    116a:	5d 09       	sbc	r21, r13
    116c:	06 c0       	rjmp	.+12     	; 0x117a <_fpadd_parts+0x1c0>
    116e:	a6 01       	movw	r20, r12
    1170:	95 01       	movw	r18, r10
    1172:	2e 19       	sub	r18, r14
    1174:	3f 09       	sbc	r19, r15
    1176:	40 0b       	sbc	r20, r16
    1178:	51 0b       	sbc	r21, r17
    117a:	57 fd       	sbrc	r21, 7
    117c:	08 c0       	rjmp	.+16     	; 0x118e <_fpadd_parts+0x1d4>
    117e:	11 82       	std	Z+1, r1	; 0x01
    1180:	33 82       	std	Z+3, r3	; 0x03
    1182:	22 82       	std	Z+2, r2	; 0x02
    1184:	24 83       	std	Z+4, r18	; 0x04
    1186:	35 83       	std	Z+5, r19	; 0x05
    1188:	46 83       	std	Z+6, r20	; 0x06
    118a:	57 83       	std	Z+7, r21	; 0x07
    118c:	1d c0       	rjmp	.+58     	; 0x11c8 <_fpadd_parts+0x20e>
    118e:	81 e0       	ldi	r24, 0x01	; 1
    1190:	81 83       	std	Z+1, r24	; 0x01
    1192:	33 82       	std	Z+3, r3	; 0x03
    1194:	22 82       	std	Z+2, r2	; 0x02
    1196:	88 27       	eor	r24, r24
    1198:	99 27       	eor	r25, r25
    119a:	dc 01       	movw	r26, r24
    119c:	82 1b       	sub	r24, r18
    119e:	93 0b       	sbc	r25, r19
    11a0:	a4 0b       	sbc	r26, r20
    11a2:	b5 0b       	sbc	r27, r21
    11a4:	84 83       	std	Z+4, r24	; 0x04
    11a6:	95 83       	std	Z+5, r25	; 0x05
    11a8:	a6 83       	std	Z+6, r26	; 0x06
    11aa:	b7 83       	std	Z+7, r27	; 0x07
    11ac:	0d c0       	rjmp	.+26     	; 0x11c8 <_fpadd_parts+0x20e>
    11ae:	22 0f       	add	r18, r18
    11b0:	33 1f       	adc	r19, r19
    11b2:	44 1f       	adc	r20, r20
    11b4:	55 1f       	adc	r21, r21
    11b6:	24 83       	std	Z+4, r18	; 0x04
    11b8:	35 83       	std	Z+5, r19	; 0x05
    11ba:	46 83       	std	Z+6, r20	; 0x06
    11bc:	57 83       	std	Z+7, r21	; 0x07
    11be:	82 81       	ldd	r24, Z+2	; 0x02
    11c0:	93 81       	ldd	r25, Z+3	; 0x03
    11c2:	01 97       	sbiw	r24, 0x01	; 1
    11c4:	93 83       	std	Z+3, r25	; 0x03
    11c6:	82 83       	std	Z+2, r24	; 0x02
    11c8:	24 81       	ldd	r18, Z+4	; 0x04
    11ca:	35 81       	ldd	r19, Z+5	; 0x05
    11cc:	46 81       	ldd	r20, Z+6	; 0x06
    11ce:	57 81       	ldd	r21, Z+7	; 0x07
    11d0:	da 01       	movw	r26, r20
    11d2:	c9 01       	movw	r24, r18
    11d4:	01 97       	sbiw	r24, 0x01	; 1
    11d6:	a1 09       	sbc	r26, r1
    11d8:	b1 09       	sbc	r27, r1
    11da:	8f 5f       	subi	r24, 0xFF	; 255
    11dc:	9f 4f       	sbci	r25, 0xFF	; 255
    11de:	af 4f       	sbci	r26, 0xFF	; 255
    11e0:	bf 43       	sbci	r27, 0x3F	; 63
    11e2:	28 f3       	brcs	.-54     	; 0x11ae <_fpadd_parts+0x1f4>
    11e4:	0b c0       	rjmp	.+22     	; 0x11fc <_fpadd_parts+0x242>
    11e6:	91 83       	std	Z+1, r25	; 0x01
    11e8:	33 82       	std	Z+3, r3	; 0x03
    11ea:	22 82       	std	Z+2, r2	; 0x02
    11ec:	ea 0c       	add	r14, r10
    11ee:	fb 1c       	adc	r15, r11
    11f0:	0c 1d       	adc	r16, r12
    11f2:	1d 1d       	adc	r17, r13
    11f4:	e4 82       	std	Z+4, r14	; 0x04
    11f6:	f5 82       	std	Z+5, r15	; 0x05
    11f8:	06 83       	std	Z+6, r16	; 0x06
    11fa:	17 83       	std	Z+7, r17	; 0x07
    11fc:	83 e0       	ldi	r24, 0x03	; 3
    11fe:	80 83       	st	Z, r24
    1200:	24 81       	ldd	r18, Z+4	; 0x04
    1202:	35 81       	ldd	r19, Z+5	; 0x05
    1204:	46 81       	ldd	r20, Z+6	; 0x06
    1206:	57 81       	ldd	r21, Z+7	; 0x07
    1208:	57 ff       	sbrs	r21, 7
    120a:	1a c0       	rjmp	.+52     	; 0x1240 <_fpadd_parts+0x286>
    120c:	c9 01       	movw	r24, r18
    120e:	aa 27       	eor	r26, r26
    1210:	97 fd       	sbrc	r25, 7
    1212:	a0 95       	com	r26
    1214:	ba 2f       	mov	r27, r26
    1216:	81 70       	andi	r24, 0x01	; 1
    1218:	90 70       	andi	r25, 0x00	; 0
    121a:	a0 70       	andi	r26, 0x00	; 0
    121c:	b0 70       	andi	r27, 0x00	; 0
    121e:	56 95       	lsr	r21
    1220:	47 95       	ror	r20
    1222:	37 95       	ror	r19
    1224:	27 95       	ror	r18
    1226:	82 2b       	or	r24, r18
    1228:	93 2b       	or	r25, r19
    122a:	a4 2b       	or	r26, r20
    122c:	b5 2b       	or	r27, r21
    122e:	84 83       	std	Z+4, r24	; 0x04
    1230:	95 83       	std	Z+5, r25	; 0x05
    1232:	a6 83       	std	Z+6, r26	; 0x06
    1234:	b7 83       	std	Z+7, r27	; 0x07
    1236:	82 81       	ldd	r24, Z+2	; 0x02
    1238:	93 81       	ldd	r25, Z+3	; 0x03
    123a:	01 96       	adiw	r24, 0x01	; 1
    123c:	93 83       	std	Z+3, r25	; 0x03
    123e:	82 83       	std	Z+2, r24	; 0x02
    1240:	df 01       	movw	r26, r30
    1242:	01 c0       	rjmp	.+2      	; 0x1246 <_fpadd_parts+0x28c>
    1244:	d2 01       	movw	r26, r4
    1246:	cd 01       	movw	r24, r26
    1248:	cd b7       	in	r28, 0x3d	; 61
    124a:	de b7       	in	r29, 0x3e	; 62
    124c:	e2 e1       	ldi	r30, 0x12	; 18
    124e:	0c 94 1f 1d 	jmp	0x3a3e	; 0x3a3e <__epilogue_restores__>

00001252 <__subsf3>:
    1252:	a0 e2       	ldi	r26, 0x20	; 32
    1254:	b0 e0       	ldi	r27, 0x00	; 0
    1256:	ef e2       	ldi	r30, 0x2F	; 47
    1258:	f9 e0       	ldi	r31, 0x09	; 9
    125a:	0c 94 0f 1d 	jmp	0x3a1e	; 0x3a1e <__prologue_saves__+0x18>
    125e:	69 83       	std	Y+1, r22	; 0x01
    1260:	7a 83       	std	Y+2, r23	; 0x02
    1262:	8b 83       	std	Y+3, r24	; 0x03
    1264:	9c 83       	std	Y+4, r25	; 0x04
    1266:	2d 83       	std	Y+5, r18	; 0x05
    1268:	3e 83       	std	Y+6, r19	; 0x06
    126a:	4f 83       	std	Y+7, r20	; 0x07
    126c:	58 87       	std	Y+8, r21	; 0x08
    126e:	e9 e0       	ldi	r30, 0x09	; 9
    1270:	ee 2e       	mov	r14, r30
    1272:	f1 2c       	mov	r15, r1
    1274:	ec 0e       	add	r14, r28
    1276:	fd 1e       	adc	r15, r29
    1278:	ce 01       	movw	r24, r28
    127a:	01 96       	adiw	r24, 0x01	; 1
    127c:	b7 01       	movw	r22, r14
    127e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1282:	8e 01       	movw	r16, r28
    1284:	0f 5e       	subi	r16, 0xEF	; 239
    1286:	1f 4f       	sbci	r17, 0xFF	; 255
    1288:	ce 01       	movw	r24, r28
    128a:	05 96       	adiw	r24, 0x05	; 5
    128c:	b8 01       	movw	r22, r16
    128e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1292:	8a 89       	ldd	r24, Y+18	; 0x12
    1294:	91 e0       	ldi	r25, 0x01	; 1
    1296:	89 27       	eor	r24, r25
    1298:	8a 8b       	std	Y+18, r24	; 0x12
    129a:	c7 01       	movw	r24, r14
    129c:	b8 01       	movw	r22, r16
    129e:	ae 01       	movw	r20, r28
    12a0:	47 5e       	subi	r20, 0xE7	; 231
    12a2:	5f 4f       	sbci	r21, 0xFF	; 255
    12a4:	0e 94 dd 07 	call	0xfba	; 0xfba <_fpadd_parts>
    12a8:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__pack_f>
    12ac:	a0 96       	adiw	r28, 0x20	; 32
    12ae:	e6 e0       	ldi	r30, 0x06	; 6
    12b0:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__epilogue_restores__+0x18>

000012b4 <__addsf3>:
    12b4:	a0 e2       	ldi	r26, 0x20	; 32
    12b6:	b0 e0       	ldi	r27, 0x00	; 0
    12b8:	e0 e6       	ldi	r30, 0x60	; 96
    12ba:	f9 e0       	ldi	r31, 0x09	; 9
    12bc:	0c 94 0f 1d 	jmp	0x3a1e	; 0x3a1e <__prologue_saves__+0x18>
    12c0:	69 83       	std	Y+1, r22	; 0x01
    12c2:	7a 83       	std	Y+2, r23	; 0x02
    12c4:	8b 83       	std	Y+3, r24	; 0x03
    12c6:	9c 83       	std	Y+4, r25	; 0x04
    12c8:	2d 83       	std	Y+5, r18	; 0x05
    12ca:	3e 83       	std	Y+6, r19	; 0x06
    12cc:	4f 83       	std	Y+7, r20	; 0x07
    12ce:	58 87       	std	Y+8, r21	; 0x08
    12d0:	f9 e0       	ldi	r31, 0x09	; 9
    12d2:	ef 2e       	mov	r14, r31
    12d4:	f1 2c       	mov	r15, r1
    12d6:	ec 0e       	add	r14, r28
    12d8:	fd 1e       	adc	r15, r29
    12da:	ce 01       	movw	r24, r28
    12dc:	01 96       	adiw	r24, 0x01	; 1
    12de:	b7 01       	movw	r22, r14
    12e0:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    12e4:	8e 01       	movw	r16, r28
    12e6:	0f 5e       	subi	r16, 0xEF	; 239
    12e8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ea:	ce 01       	movw	r24, r28
    12ec:	05 96       	adiw	r24, 0x05	; 5
    12ee:	b8 01       	movw	r22, r16
    12f0:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    12f4:	c7 01       	movw	r24, r14
    12f6:	b8 01       	movw	r22, r16
    12f8:	ae 01       	movw	r20, r28
    12fa:	47 5e       	subi	r20, 0xE7	; 231
    12fc:	5f 4f       	sbci	r21, 0xFF	; 255
    12fe:	0e 94 dd 07 	call	0xfba	; 0xfba <_fpadd_parts>
    1302:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__pack_f>
    1306:	a0 96       	adiw	r28, 0x20	; 32
    1308:	e6 e0       	ldi	r30, 0x06	; 6
    130a:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__epilogue_restores__+0x18>

0000130e <__mulsf3>:
    130e:	a0 e2       	ldi	r26, 0x20	; 32
    1310:	b0 e0       	ldi	r27, 0x00	; 0
    1312:	ed e8       	ldi	r30, 0x8D	; 141
    1314:	f9 e0       	ldi	r31, 0x09	; 9
    1316:	0c 94 03 1d 	jmp	0x3a06	; 0x3a06 <__prologue_saves__>
    131a:	69 83       	std	Y+1, r22	; 0x01
    131c:	7a 83       	std	Y+2, r23	; 0x02
    131e:	8b 83       	std	Y+3, r24	; 0x03
    1320:	9c 83       	std	Y+4, r25	; 0x04
    1322:	2d 83       	std	Y+5, r18	; 0x05
    1324:	3e 83       	std	Y+6, r19	; 0x06
    1326:	4f 83       	std	Y+7, r20	; 0x07
    1328:	58 87       	std	Y+8, r21	; 0x08
    132a:	ce 01       	movw	r24, r28
    132c:	01 96       	adiw	r24, 0x01	; 1
    132e:	be 01       	movw	r22, r28
    1330:	67 5f       	subi	r22, 0xF7	; 247
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1338:	ce 01       	movw	r24, r28
    133a:	05 96       	adiw	r24, 0x05	; 5
    133c:	be 01       	movw	r22, r28
    133e:	6f 5e       	subi	r22, 0xEF	; 239
    1340:	7f 4f       	sbci	r23, 0xFF	; 255
    1342:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1346:	99 85       	ldd	r25, Y+9	; 0x09
    1348:	92 30       	cpi	r25, 0x02	; 2
    134a:	88 f0       	brcs	.+34     	; 0x136e <__mulsf3+0x60>
    134c:	89 89       	ldd	r24, Y+17	; 0x11
    134e:	82 30       	cpi	r24, 0x02	; 2
    1350:	c8 f0       	brcs	.+50     	; 0x1384 <__mulsf3+0x76>
    1352:	94 30       	cpi	r25, 0x04	; 4
    1354:	19 f4       	brne	.+6      	; 0x135c <__mulsf3+0x4e>
    1356:	82 30       	cpi	r24, 0x02	; 2
    1358:	51 f4       	brne	.+20     	; 0x136e <__mulsf3+0x60>
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <__mulsf3+0x56>
    135c:	84 30       	cpi	r24, 0x04	; 4
    135e:	29 f4       	brne	.+10     	; 0x136a <__mulsf3+0x5c>
    1360:	92 30       	cpi	r25, 0x02	; 2
    1362:	81 f4       	brne	.+32     	; 0x1384 <__mulsf3+0x76>
    1364:	89 e7       	ldi	r24, 0x79	; 121
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	c6 c0       	rjmp	.+396    	; 0x14f6 <__mulsf3+0x1e8>
    136a:	92 30       	cpi	r25, 0x02	; 2
    136c:	49 f4       	brne	.+18     	; 0x1380 <__mulsf3+0x72>
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	9a 85       	ldd	r25, Y+10	; 0x0a
    1372:	8a 89       	ldd	r24, Y+18	; 0x12
    1374:	98 13       	cpse	r25, r24
    1376:	21 e0       	ldi	r18, 0x01	; 1
    1378:	2a 87       	std	Y+10, r18	; 0x0a
    137a:	ce 01       	movw	r24, r28
    137c:	09 96       	adiw	r24, 0x09	; 9
    137e:	bb c0       	rjmp	.+374    	; 0x14f6 <__mulsf3+0x1e8>
    1380:	82 30       	cpi	r24, 0x02	; 2
    1382:	49 f4       	brne	.+18     	; 0x1396 <__mulsf3+0x88>
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	9a 85       	ldd	r25, Y+10	; 0x0a
    1388:	8a 89       	ldd	r24, Y+18	; 0x12
    138a:	98 13       	cpse	r25, r24
    138c:	21 e0       	ldi	r18, 0x01	; 1
    138e:	2a 8b       	std	Y+18, r18	; 0x12
    1390:	ce 01       	movw	r24, r28
    1392:	41 96       	adiw	r24, 0x11	; 17
    1394:	b0 c0       	rjmp	.+352    	; 0x14f6 <__mulsf3+0x1e8>
    1396:	2d 84       	ldd	r2, Y+13	; 0x0d
    1398:	3e 84       	ldd	r3, Y+14	; 0x0e
    139a:	4f 84       	ldd	r4, Y+15	; 0x0f
    139c:	58 88       	ldd	r5, Y+16	; 0x10
    139e:	6d 88       	ldd	r6, Y+21	; 0x15
    13a0:	7e 88       	ldd	r7, Y+22	; 0x16
    13a2:	8f 88       	ldd	r8, Y+23	; 0x17
    13a4:	98 8c       	ldd	r9, Y+24	; 0x18
    13a6:	ee 24       	eor	r14, r14
    13a8:	ff 24       	eor	r15, r15
    13aa:	87 01       	movw	r16, r14
    13ac:	aa 24       	eor	r10, r10
    13ae:	bb 24       	eor	r11, r11
    13b0:	65 01       	movw	r12, r10
    13b2:	40 e0       	ldi	r20, 0x00	; 0
    13b4:	50 e0       	ldi	r21, 0x00	; 0
    13b6:	60 e0       	ldi	r22, 0x00	; 0
    13b8:	70 e0       	ldi	r23, 0x00	; 0
    13ba:	e0 e0       	ldi	r30, 0x00	; 0
    13bc:	f0 e0       	ldi	r31, 0x00	; 0
    13be:	c1 01       	movw	r24, r2
    13c0:	81 70       	andi	r24, 0x01	; 1
    13c2:	90 70       	andi	r25, 0x00	; 0
    13c4:	89 2b       	or	r24, r25
    13c6:	e9 f0       	breq	.+58     	; 0x1402 <__mulsf3+0xf4>
    13c8:	e6 0c       	add	r14, r6
    13ca:	f7 1c       	adc	r15, r7
    13cc:	08 1d       	adc	r16, r8
    13ce:	19 1d       	adc	r17, r9
    13d0:	9a 01       	movw	r18, r20
    13d2:	ab 01       	movw	r20, r22
    13d4:	2a 0d       	add	r18, r10
    13d6:	3b 1d       	adc	r19, r11
    13d8:	4c 1d       	adc	r20, r12
    13da:	5d 1d       	adc	r21, r13
    13dc:	80 e0       	ldi	r24, 0x00	; 0
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	a0 e0       	ldi	r26, 0x00	; 0
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	e6 14       	cp	r14, r6
    13e6:	f7 04       	cpc	r15, r7
    13e8:	08 05       	cpc	r16, r8
    13ea:	19 05       	cpc	r17, r9
    13ec:	20 f4       	brcc	.+8      	; 0x13f6 <__mulsf3+0xe8>
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	a0 e0       	ldi	r26, 0x00	; 0
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	ba 01       	movw	r22, r20
    13f8:	a9 01       	movw	r20, r18
    13fa:	48 0f       	add	r20, r24
    13fc:	59 1f       	adc	r21, r25
    13fe:	6a 1f       	adc	r22, r26
    1400:	7b 1f       	adc	r23, r27
    1402:	aa 0c       	add	r10, r10
    1404:	bb 1c       	adc	r11, r11
    1406:	cc 1c       	adc	r12, r12
    1408:	dd 1c       	adc	r13, r13
    140a:	97 fe       	sbrs	r9, 7
    140c:	08 c0       	rjmp	.+16     	; 0x141e <__mulsf3+0x110>
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	a0 e0       	ldi	r26, 0x00	; 0
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	a8 2a       	or	r10, r24
    1418:	b9 2a       	or	r11, r25
    141a:	ca 2a       	or	r12, r26
    141c:	db 2a       	or	r13, r27
    141e:	31 96       	adiw	r30, 0x01	; 1
    1420:	e0 32       	cpi	r30, 0x20	; 32
    1422:	f1 05       	cpc	r31, r1
    1424:	49 f0       	breq	.+18     	; 0x1438 <__mulsf3+0x12a>
    1426:	66 0c       	add	r6, r6
    1428:	77 1c       	adc	r7, r7
    142a:	88 1c       	adc	r8, r8
    142c:	99 1c       	adc	r9, r9
    142e:	56 94       	lsr	r5
    1430:	47 94       	ror	r4
    1432:	37 94       	ror	r3
    1434:	27 94       	ror	r2
    1436:	c3 cf       	rjmp	.-122    	; 0x13be <__mulsf3+0xb0>
    1438:	fa 85       	ldd	r31, Y+10	; 0x0a
    143a:	ea 89       	ldd	r30, Y+18	; 0x12
    143c:	2b 89       	ldd	r18, Y+19	; 0x13
    143e:	3c 89       	ldd	r19, Y+20	; 0x14
    1440:	8b 85       	ldd	r24, Y+11	; 0x0b
    1442:	9c 85       	ldd	r25, Y+12	; 0x0c
    1444:	28 0f       	add	r18, r24
    1446:	39 1f       	adc	r19, r25
    1448:	2e 5f       	subi	r18, 0xFE	; 254
    144a:	3f 4f       	sbci	r19, 0xFF	; 255
    144c:	17 c0       	rjmp	.+46     	; 0x147c <__mulsf3+0x16e>
    144e:	ca 01       	movw	r24, r20
    1450:	81 70       	andi	r24, 0x01	; 1
    1452:	90 70       	andi	r25, 0x00	; 0
    1454:	89 2b       	or	r24, r25
    1456:	61 f0       	breq	.+24     	; 0x1470 <__mulsf3+0x162>
    1458:	16 95       	lsr	r17
    145a:	07 95       	ror	r16
    145c:	f7 94       	ror	r15
    145e:	e7 94       	ror	r14
    1460:	80 e0       	ldi	r24, 0x00	; 0
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	a0 e0       	ldi	r26, 0x00	; 0
    1466:	b0 e8       	ldi	r27, 0x80	; 128
    1468:	e8 2a       	or	r14, r24
    146a:	f9 2a       	or	r15, r25
    146c:	0a 2b       	or	r16, r26
    146e:	1b 2b       	or	r17, r27
    1470:	76 95       	lsr	r23
    1472:	67 95       	ror	r22
    1474:	57 95       	ror	r21
    1476:	47 95       	ror	r20
    1478:	2f 5f       	subi	r18, 0xFF	; 255
    147a:	3f 4f       	sbci	r19, 0xFF	; 255
    147c:	77 fd       	sbrc	r23, 7
    147e:	e7 cf       	rjmp	.-50     	; 0x144e <__mulsf3+0x140>
    1480:	0c c0       	rjmp	.+24     	; 0x149a <__mulsf3+0x18c>
    1482:	44 0f       	add	r20, r20
    1484:	55 1f       	adc	r21, r21
    1486:	66 1f       	adc	r22, r22
    1488:	77 1f       	adc	r23, r23
    148a:	17 fd       	sbrc	r17, 7
    148c:	41 60       	ori	r20, 0x01	; 1
    148e:	ee 0c       	add	r14, r14
    1490:	ff 1c       	adc	r15, r15
    1492:	00 1f       	adc	r16, r16
    1494:	11 1f       	adc	r17, r17
    1496:	21 50       	subi	r18, 0x01	; 1
    1498:	30 40       	sbci	r19, 0x00	; 0
    149a:	40 30       	cpi	r20, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	59 07       	cpc	r21, r25
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	69 07       	cpc	r22, r25
    14a4:	90 e4       	ldi	r25, 0x40	; 64
    14a6:	79 07       	cpc	r23, r25
    14a8:	60 f3       	brcs	.-40     	; 0x1482 <__mulsf3+0x174>
    14aa:	2b 8f       	std	Y+27, r18	; 0x1b
    14ac:	3c 8f       	std	Y+28, r19	; 0x1c
    14ae:	db 01       	movw	r26, r22
    14b0:	ca 01       	movw	r24, r20
    14b2:	8f 77       	andi	r24, 0x7F	; 127
    14b4:	90 70       	andi	r25, 0x00	; 0
    14b6:	a0 70       	andi	r26, 0x00	; 0
    14b8:	b0 70       	andi	r27, 0x00	; 0
    14ba:	80 34       	cpi	r24, 0x40	; 64
    14bc:	91 05       	cpc	r25, r1
    14be:	a1 05       	cpc	r26, r1
    14c0:	b1 05       	cpc	r27, r1
    14c2:	61 f4       	brne	.+24     	; 0x14dc <__mulsf3+0x1ce>
    14c4:	47 fd       	sbrc	r20, 7
    14c6:	0a c0       	rjmp	.+20     	; 0x14dc <__mulsf3+0x1ce>
    14c8:	e1 14       	cp	r14, r1
    14ca:	f1 04       	cpc	r15, r1
    14cc:	01 05       	cpc	r16, r1
    14ce:	11 05       	cpc	r17, r1
    14d0:	29 f0       	breq	.+10     	; 0x14dc <__mulsf3+0x1ce>
    14d2:	40 5c       	subi	r20, 0xC0	; 192
    14d4:	5f 4f       	sbci	r21, 0xFF	; 255
    14d6:	6f 4f       	sbci	r22, 0xFF	; 255
    14d8:	7f 4f       	sbci	r23, 0xFF	; 255
    14da:	40 78       	andi	r20, 0x80	; 128
    14dc:	1a 8e       	std	Y+26, r1	; 0x1a
    14de:	fe 17       	cp	r31, r30
    14e0:	11 f0       	breq	.+4      	; 0x14e6 <__mulsf3+0x1d8>
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	8a 8f       	std	Y+26, r24	; 0x1a
    14e6:	4d 8f       	std	Y+29, r20	; 0x1d
    14e8:	5e 8f       	std	Y+30, r21	; 0x1e
    14ea:	6f 8f       	std	Y+31, r22	; 0x1f
    14ec:	78 a3       	std	Y+32, r23	; 0x20
    14ee:	83 e0       	ldi	r24, 0x03	; 3
    14f0:	89 8f       	std	Y+25, r24	; 0x19
    14f2:	ce 01       	movw	r24, r28
    14f4:	49 96       	adiw	r24, 0x19	; 25
    14f6:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__pack_f>
    14fa:	a0 96       	adiw	r28, 0x20	; 32
    14fc:	e2 e1       	ldi	r30, 0x12	; 18
    14fe:	0c 94 1f 1d 	jmp	0x3a3e	; 0x3a3e <__epilogue_restores__>

00001502 <__divsf3>:
    1502:	a8 e1       	ldi	r26, 0x18	; 24
    1504:	b0 e0       	ldi	r27, 0x00	; 0
    1506:	e7 e8       	ldi	r30, 0x87	; 135
    1508:	fa e0       	ldi	r31, 0x0A	; 10
    150a:	0c 94 0b 1d 	jmp	0x3a16	; 0x3a16 <__prologue_saves__+0x10>
    150e:	69 83       	std	Y+1, r22	; 0x01
    1510:	7a 83       	std	Y+2, r23	; 0x02
    1512:	8b 83       	std	Y+3, r24	; 0x03
    1514:	9c 83       	std	Y+4, r25	; 0x04
    1516:	2d 83       	std	Y+5, r18	; 0x05
    1518:	3e 83       	std	Y+6, r19	; 0x06
    151a:	4f 83       	std	Y+7, r20	; 0x07
    151c:	58 87       	std	Y+8, r21	; 0x08
    151e:	b9 e0       	ldi	r27, 0x09	; 9
    1520:	eb 2e       	mov	r14, r27
    1522:	f1 2c       	mov	r15, r1
    1524:	ec 0e       	add	r14, r28
    1526:	fd 1e       	adc	r15, r29
    1528:	ce 01       	movw	r24, r28
    152a:	01 96       	adiw	r24, 0x01	; 1
    152c:	b7 01       	movw	r22, r14
    152e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1532:	8e 01       	movw	r16, r28
    1534:	0f 5e       	subi	r16, 0xEF	; 239
    1536:	1f 4f       	sbci	r17, 0xFF	; 255
    1538:	ce 01       	movw	r24, r28
    153a:	05 96       	adiw	r24, 0x05	; 5
    153c:	b8 01       	movw	r22, r16
    153e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    1542:	29 85       	ldd	r18, Y+9	; 0x09
    1544:	22 30       	cpi	r18, 0x02	; 2
    1546:	08 f4       	brcc	.+2      	; 0x154a <__divsf3+0x48>
    1548:	7e c0       	rjmp	.+252    	; 0x1646 <__divsf3+0x144>
    154a:	39 89       	ldd	r19, Y+17	; 0x11
    154c:	32 30       	cpi	r19, 0x02	; 2
    154e:	10 f4       	brcc	.+4      	; 0x1554 <__divsf3+0x52>
    1550:	b8 01       	movw	r22, r16
    1552:	7c c0       	rjmp	.+248    	; 0x164c <__divsf3+0x14a>
    1554:	8a 85       	ldd	r24, Y+10	; 0x0a
    1556:	9a 89       	ldd	r25, Y+18	; 0x12
    1558:	89 27       	eor	r24, r25
    155a:	8a 87       	std	Y+10, r24	; 0x0a
    155c:	24 30       	cpi	r18, 0x04	; 4
    155e:	11 f0       	breq	.+4      	; 0x1564 <__divsf3+0x62>
    1560:	22 30       	cpi	r18, 0x02	; 2
    1562:	31 f4       	brne	.+12     	; 0x1570 <__divsf3+0x6e>
    1564:	23 17       	cp	r18, r19
    1566:	09 f0       	breq	.+2      	; 0x156a <__divsf3+0x68>
    1568:	6e c0       	rjmp	.+220    	; 0x1646 <__divsf3+0x144>
    156a:	69 e7       	ldi	r22, 0x79	; 121
    156c:	70 e0       	ldi	r23, 0x00	; 0
    156e:	6e c0       	rjmp	.+220    	; 0x164c <__divsf3+0x14a>
    1570:	34 30       	cpi	r19, 0x04	; 4
    1572:	39 f4       	brne	.+14     	; 0x1582 <__divsf3+0x80>
    1574:	1d 86       	std	Y+13, r1	; 0x0d
    1576:	1e 86       	std	Y+14, r1	; 0x0e
    1578:	1f 86       	std	Y+15, r1	; 0x0f
    157a:	18 8a       	std	Y+16, r1	; 0x10
    157c:	1c 86       	std	Y+12, r1	; 0x0c
    157e:	1b 86       	std	Y+11, r1	; 0x0b
    1580:	04 c0       	rjmp	.+8      	; 0x158a <__divsf3+0x88>
    1582:	32 30       	cpi	r19, 0x02	; 2
    1584:	21 f4       	brne	.+8      	; 0x158e <__divsf3+0x8c>
    1586:	84 e0       	ldi	r24, 0x04	; 4
    1588:	89 87       	std	Y+9, r24	; 0x09
    158a:	b7 01       	movw	r22, r14
    158c:	5f c0       	rjmp	.+190    	; 0x164c <__divsf3+0x14a>
    158e:	2b 85       	ldd	r18, Y+11	; 0x0b
    1590:	3c 85       	ldd	r19, Y+12	; 0x0c
    1592:	8b 89       	ldd	r24, Y+19	; 0x13
    1594:	9c 89       	ldd	r25, Y+20	; 0x14
    1596:	28 1b       	sub	r18, r24
    1598:	39 0b       	sbc	r19, r25
    159a:	3c 87       	std	Y+12, r19	; 0x0c
    159c:	2b 87       	std	Y+11, r18	; 0x0b
    159e:	ed 84       	ldd	r14, Y+13	; 0x0d
    15a0:	fe 84       	ldd	r15, Y+14	; 0x0e
    15a2:	0f 85       	ldd	r16, Y+15	; 0x0f
    15a4:	18 89       	ldd	r17, Y+16	; 0x10
    15a6:	ad 88       	ldd	r10, Y+21	; 0x15
    15a8:	be 88       	ldd	r11, Y+22	; 0x16
    15aa:	cf 88       	ldd	r12, Y+23	; 0x17
    15ac:	d8 8c       	ldd	r13, Y+24	; 0x18
    15ae:	ea 14       	cp	r14, r10
    15b0:	fb 04       	cpc	r15, r11
    15b2:	0c 05       	cpc	r16, r12
    15b4:	1d 05       	cpc	r17, r13
    15b6:	40 f4       	brcc	.+16     	; 0x15c8 <__divsf3+0xc6>
    15b8:	ee 0c       	add	r14, r14
    15ba:	ff 1c       	adc	r15, r15
    15bc:	00 1f       	adc	r16, r16
    15be:	11 1f       	adc	r17, r17
    15c0:	21 50       	subi	r18, 0x01	; 1
    15c2:	30 40       	sbci	r19, 0x00	; 0
    15c4:	3c 87       	std	Y+12, r19	; 0x0c
    15c6:	2b 87       	std	Y+11, r18	; 0x0b
    15c8:	20 e0       	ldi	r18, 0x00	; 0
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	40 e0       	ldi	r20, 0x00	; 0
    15ce:	50 e0       	ldi	r21, 0x00	; 0
    15d0:	80 e0       	ldi	r24, 0x00	; 0
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	a0 e0       	ldi	r26, 0x00	; 0
    15d6:	b0 e4       	ldi	r27, 0x40	; 64
    15d8:	60 e0       	ldi	r22, 0x00	; 0
    15da:	70 e0       	ldi	r23, 0x00	; 0
    15dc:	ea 14       	cp	r14, r10
    15de:	fb 04       	cpc	r15, r11
    15e0:	0c 05       	cpc	r16, r12
    15e2:	1d 05       	cpc	r17, r13
    15e4:	40 f0       	brcs	.+16     	; 0x15f6 <__divsf3+0xf4>
    15e6:	28 2b       	or	r18, r24
    15e8:	39 2b       	or	r19, r25
    15ea:	4a 2b       	or	r20, r26
    15ec:	5b 2b       	or	r21, r27
    15ee:	ea 18       	sub	r14, r10
    15f0:	fb 08       	sbc	r15, r11
    15f2:	0c 09       	sbc	r16, r12
    15f4:	1d 09       	sbc	r17, r13
    15f6:	b6 95       	lsr	r27
    15f8:	a7 95       	ror	r26
    15fa:	97 95       	ror	r25
    15fc:	87 95       	ror	r24
    15fe:	ee 0c       	add	r14, r14
    1600:	ff 1c       	adc	r15, r15
    1602:	00 1f       	adc	r16, r16
    1604:	11 1f       	adc	r17, r17
    1606:	6f 5f       	subi	r22, 0xFF	; 255
    1608:	7f 4f       	sbci	r23, 0xFF	; 255
    160a:	6f 31       	cpi	r22, 0x1F	; 31
    160c:	71 05       	cpc	r23, r1
    160e:	31 f7       	brne	.-52     	; 0x15dc <__divsf3+0xda>
    1610:	da 01       	movw	r26, r20
    1612:	c9 01       	movw	r24, r18
    1614:	8f 77       	andi	r24, 0x7F	; 127
    1616:	90 70       	andi	r25, 0x00	; 0
    1618:	a0 70       	andi	r26, 0x00	; 0
    161a:	b0 70       	andi	r27, 0x00	; 0
    161c:	80 34       	cpi	r24, 0x40	; 64
    161e:	91 05       	cpc	r25, r1
    1620:	a1 05       	cpc	r26, r1
    1622:	b1 05       	cpc	r27, r1
    1624:	61 f4       	brne	.+24     	; 0x163e <__divsf3+0x13c>
    1626:	27 fd       	sbrc	r18, 7
    1628:	0a c0       	rjmp	.+20     	; 0x163e <__divsf3+0x13c>
    162a:	e1 14       	cp	r14, r1
    162c:	f1 04       	cpc	r15, r1
    162e:	01 05       	cpc	r16, r1
    1630:	11 05       	cpc	r17, r1
    1632:	29 f0       	breq	.+10     	; 0x163e <__divsf3+0x13c>
    1634:	20 5c       	subi	r18, 0xC0	; 192
    1636:	3f 4f       	sbci	r19, 0xFF	; 255
    1638:	4f 4f       	sbci	r20, 0xFF	; 255
    163a:	5f 4f       	sbci	r21, 0xFF	; 255
    163c:	20 78       	andi	r18, 0x80	; 128
    163e:	2d 87       	std	Y+13, r18	; 0x0d
    1640:	3e 87       	std	Y+14, r19	; 0x0e
    1642:	4f 87       	std	Y+15, r20	; 0x0f
    1644:	58 8b       	std	Y+16, r21	; 0x10
    1646:	be 01       	movw	r22, r28
    1648:	67 5f       	subi	r22, 0xF7	; 247
    164a:	7f 4f       	sbci	r23, 0xFF	; 255
    164c:	cb 01       	movw	r24, r22
    164e:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__pack_f>
    1652:	68 96       	adiw	r28, 0x18	; 24
    1654:	ea e0       	ldi	r30, 0x0A	; 10
    1656:	0c 94 27 1d 	jmp	0x3a4e	; 0x3a4e <__epilogue_restores__+0x10>

0000165a <__gtsf2>:
    165a:	a8 e1       	ldi	r26, 0x18	; 24
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e3 e3       	ldi	r30, 0x33	; 51
    1660:	fb e0       	ldi	r31, 0x0B	; 11
    1662:	0c 94 0f 1d 	jmp	0x3a1e	; 0x3a1e <__prologue_saves__+0x18>
    1666:	69 83       	std	Y+1, r22	; 0x01
    1668:	7a 83       	std	Y+2, r23	; 0x02
    166a:	8b 83       	std	Y+3, r24	; 0x03
    166c:	9c 83       	std	Y+4, r25	; 0x04
    166e:	2d 83       	std	Y+5, r18	; 0x05
    1670:	3e 83       	std	Y+6, r19	; 0x06
    1672:	4f 83       	std	Y+7, r20	; 0x07
    1674:	58 87       	std	Y+8, r21	; 0x08
    1676:	89 e0       	ldi	r24, 0x09	; 9
    1678:	e8 2e       	mov	r14, r24
    167a:	f1 2c       	mov	r15, r1
    167c:	ec 0e       	add	r14, r28
    167e:	fd 1e       	adc	r15, r29
    1680:	ce 01       	movw	r24, r28
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	b7 01       	movw	r22, r14
    1686:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    168a:	8e 01       	movw	r16, r28
    168c:	0f 5e       	subi	r16, 0xEF	; 239
    168e:	1f 4f       	sbci	r17, 0xFF	; 255
    1690:	ce 01       	movw	r24, r28
    1692:	05 96       	adiw	r24, 0x05	; 5
    1694:	b8 01       	movw	r22, r16
    1696:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    169a:	89 85       	ldd	r24, Y+9	; 0x09
    169c:	82 30       	cpi	r24, 0x02	; 2
    169e:	40 f0       	brcs	.+16     	; 0x16b0 <__gtsf2+0x56>
    16a0:	89 89       	ldd	r24, Y+17	; 0x11
    16a2:	82 30       	cpi	r24, 0x02	; 2
    16a4:	28 f0       	brcs	.+10     	; 0x16b0 <__gtsf2+0x56>
    16a6:	c7 01       	movw	r24, r14
    16a8:	b8 01       	movw	r22, r16
    16aa:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__fpcmp_parts_f>
    16ae:	01 c0       	rjmp	.+2      	; 0x16b2 <__gtsf2+0x58>
    16b0:	8f ef       	ldi	r24, 0xFF	; 255
    16b2:	68 96       	adiw	r28, 0x18	; 24
    16b4:	e6 e0       	ldi	r30, 0x06	; 6
    16b6:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__epilogue_restores__+0x18>

000016ba <__gesf2>:
    16ba:	a8 e1       	ldi	r26, 0x18	; 24
    16bc:	b0 e0       	ldi	r27, 0x00	; 0
    16be:	e3 e6       	ldi	r30, 0x63	; 99
    16c0:	fb e0       	ldi	r31, 0x0B	; 11
    16c2:	0c 94 0f 1d 	jmp	0x3a1e	; 0x3a1e <__prologue_saves__+0x18>
    16c6:	69 83       	std	Y+1, r22	; 0x01
    16c8:	7a 83       	std	Y+2, r23	; 0x02
    16ca:	8b 83       	std	Y+3, r24	; 0x03
    16cc:	9c 83       	std	Y+4, r25	; 0x04
    16ce:	2d 83       	std	Y+5, r18	; 0x05
    16d0:	3e 83       	std	Y+6, r19	; 0x06
    16d2:	4f 83       	std	Y+7, r20	; 0x07
    16d4:	58 87       	std	Y+8, r21	; 0x08
    16d6:	89 e0       	ldi	r24, 0x09	; 9
    16d8:	e8 2e       	mov	r14, r24
    16da:	f1 2c       	mov	r15, r1
    16dc:	ec 0e       	add	r14, r28
    16de:	fd 1e       	adc	r15, r29
    16e0:	ce 01       	movw	r24, r28
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	b7 01       	movw	r22, r14
    16e6:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    16ea:	8e 01       	movw	r16, r28
    16ec:	0f 5e       	subi	r16, 0xEF	; 239
    16ee:	1f 4f       	sbci	r17, 0xFF	; 255
    16f0:	ce 01       	movw	r24, r28
    16f2:	05 96       	adiw	r24, 0x05	; 5
    16f4:	b8 01       	movw	r22, r16
    16f6:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    16fa:	89 85       	ldd	r24, Y+9	; 0x09
    16fc:	82 30       	cpi	r24, 0x02	; 2
    16fe:	40 f0       	brcs	.+16     	; 0x1710 <__gesf2+0x56>
    1700:	89 89       	ldd	r24, Y+17	; 0x11
    1702:	82 30       	cpi	r24, 0x02	; 2
    1704:	28 f0       	brcs	.+10     	; 0x1710 <__gesf2+0x56>
    1706:	c7 01       	movw	r24, r14
    1708:	b8 01       	movw	r22, r16
    170a:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__fpcmp_parts_f>
    170e:	01 c0       	rjmp	.+2      	; 0x1712 <__gesf2+0x58>
    1710:	8f ef       	ldi	r24, 0xFF	; 255
    1712:	68 96       	adiw	r28, 0x18	; 24
    1714:	e6 e0       	ldi	r30, 0x06	; 6
    1716:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__epilogue_restores__+0x18>

0000171a <__ltsf2>:
    171a:	a8 e1       	ldi	r26, 0x18	; 24
    171c:	b0 e0       	ldi	r27, 0x00	; 0
    171e:	e3 e9       	ldi	r30, 0x93	; 147
    1720:	fb e0       	ldi	r31, 0x0B	; 11
    1722:	0c 94 0f 1d 	jmp	0x3a1e	; 0x3a1e <__prologue_saves__+0x18>
    1726:	69 83       	std	Y+1, r22	; 0x01
    1728:	7a 83       	std	Y+2, r23	; 0x02
    172a:	8b 83       	std	Y+3, r24	; 0x03
    172c:	9c 83       	std	Y+4, r25	; 0x04
    172e:	2d 83       	std	Y+5, r18	; 0x05
    1730:	3e 83       	std	Y+6, r19	; 0x06
    1732:	4f 83       	std	Y+7, r20	; 0x07
    1734:	58 87       	std	Y+8, r21	; 0x08
    1736:	89 e0       	ldi	r24, 0x09	; 9
    1738:	e8 2e       	mov	r14, r24
    173a:	f1 2c       	mov	r15, r1
    173c:	ec 0e       	add	r14, r28
    173e:	fd 1e       	adc	r15, r29
    1740:	ce 01       	movw	r24, r28
    1742:	01 96       	adiw	r24, 0x01	; 1
    1744:	b7 01       	movw	r22, r14
    1746:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    174a:	8e 01       	movw	r16, r28
    174c:	0f 5e       	subi	r16, 0xEF	; 239
    174e:	1f 4f       	sbci	r17, 0xFF	; 255
    1750:	ce 01       	movw	r24, r28
    1752:	05 96       	adiw	r24, 0x05	; 5
    1754:	b8 01       	movw	r22, r16
    1756:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    175a:	89 85       	ldd	r24, Y+9	; 0x09
    175c:	82 30       	cpi	r24, 0x02	; 2
    175e:	40 f0       	brcs	.+16     	; 0x1770 <__ltsf2+0x56>
    1760:	89 89       	ldd	r24, Y+17	; 0x11
    1762:	82 30       	cpi	r24, 0x02	; 2
    1764:	28 f0       	brcs	.+10     	; 0x1770 <__ltsf2+0x56>
    1766:	c7 01       	movw	r24, r14
    1768:	b8 01       	movw	r22, r16
    176a:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__fpcmp_parts_f>
    176e:	01 c0       	rjmp	.+2      	; 0x1772 <__ltsf2+0x58>
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	68 96       	adiw	r28, 0x18	; 24
    1774:	e6 e0       	ldi	r30, 0x06	; 6
    1776:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__epilogue_restores__+0x18>

0000177a <__fixsfsi>:
    177a:	ac e0       	ldi	r26, 0x0C	; 12
    177c:	b0 e0       	ldi	r27, 0x00	; 0
    177e:	e3 ec       	ldi	r30, 0xC3	; 195
    1780:	fb e0       	ldi	r31, 0x0B	; 11
    1782:	0c 94 13 1d 	jmp	0x3a26	; 0x3a26 <__prologue_saves__+0x20>
    1786:	69 83       	std	Y+1, r22	; 0x01
    1788:	7a 83       	std	Y+2, r23	; 0x02
    178a:	8b 83       	std	Y+3, r24	; 0x03
    178c:	9c 83       	std	Y+4, r25	; 0x04
    178e:	ce 01       	movw	r24, r28
    1790:	01 96       	adiw	r24, 0x01	; 1
    1792:	be 01       	movw	r22, r28
    1794:	6b 5f       	subi	r22, 0xFB	; 251
    1796:	7f 4f       	sbci	r23, 0xFF	; 255
    1798:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__unpack_f>
    179c:	8d 81       	ldd	r24, Y+5	; 0x05
    179e:	82 30       	cpi	r24, 0x02	; 2
    17a0:	61 f1       	breq	.+88     	; 0x17fa <__fixsfsi+0x80>
    17a2:	82 30       	cpi	r24, 0x02	; 2
    17a4:	50 f1       	brcs	.+84     	; 0x17fa <__fixsfsi+0x80>
    17a6:	84 30       	cpi	r24, 0x04	; 4
    17a8:	21 f4       	brne	.+8      	; 0x17b2 <__fixsfsi+0x38>
    17aa:	8e 81       	ldd	r24, Y+6	; 0x06
    17ac:	88 23       	and	r24, r24
    17ae:	51 f1       	breq	.+84     	; 0x1804 <__fixsfsi+0x8a>
    17b0:	2e c0       	rjmp	.+92     	; 0x180e <__fixsfsi+0x94>
    17b2:	2f 81       	ldd	r18, Y+7	; 0x07
    17b4:	38 85       	ldd	r19, Y+8	; 0x08
    17b6:	37 fd       	sbrc	r19, 7
    17b8:	20 c0       	rjmp	.+64     	; 0x17fa <__fixsfsi+0x80>
    17ba:	6e 81       	ldd	r22, Y+6	; 0x06
    17bc:	2f 31       	cpi	r18, 0x1F	; 31
    17be:	31 05       	cpc	r19, r1
    17c0:	1c f0       	brlt	.+6      	; 0x17c8 <__fixsfsi+0x4e>
    17c2:	66 23       	and	r22, r22
    17c4:	f9 f0       	breq	.+62     	; 0x1804 <__fixsfsi+0x8a>
    17c6:	23 c0       	rjmp	.+70     	; 0x180e <__fixsfsi+0x94>
    17c8:	8e e1       	ldi	r24, 0x1E	; 30
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	82 1b       	sub	r24, r18
    17ce:	93 0b       	sbc	r25, r19
    17d0:	29 85       	ldd	r18, Y+9	; 0x09
    17d2:	3a 85       	ldd	r19, Y+10	; 0x0a
    17d4:	4b 85       	ldd	r20, Y+11	; 0x0b
    17d6:	5c 85       	ldd	r21, Y+12	; 0x0c
    17d8:	04 c0       	rjmp	.+8      	; 0x17e2 <__fixsfsi+0x68>
    17da:	56 95       	lsr	r21
    17dc:	47 95       	ror	r20
    17de:	37 95       	ror	r19
    17e0:	27 95       	ror	r18
    17e2:	8a 95       	dec	r24
    17e4:	d2 f7       	brpl	.-12     	; 0x17da <__fixsfsi+0x60>
    17e6:	66 23       	and	r22, r22
    17e8:	b1 f0       	breq	.+44     	; 0x1816 <__fixsfsi+0x9c>
    17ea:	50 95       	com	r21
    17ec:	40 95       	com	r20
    17ee:	30 95       	com	r19
    17f0:	21 95       	neg	r18
    17f2:	3f 4f       	sbci	r19, 0xFF	; 255
    17f4:	4f 4f       	sbci	r20, 0xFF	; 255
    17f6:	5f 4f       	sbci	r21, 0xFF	; 255
    17f8:	0e c0       	rjmp	.+28     	; 0x1816 <__fixsfsi+0x9c>
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	40 e0       	ldi	r20, 0x00	; 0
    1800:	50 e0       	ldi	r21, 0x00	; 0
    1802:	09 c0       	rjmp	.+18     	; 0x1816 <__fixsfsi+0x9c>
    1804:	2f ef       	ldi	r18, 0xFF	; 255
    1806:	3f ef       	ldi	r19, 0xFF	; 255
    1808:	4f ef       	ldi	r20, 0xFF	; 255
    180a:	5f e7       	ldi	r21, 0x7F	; 127
    180c:	04 c0       	rjmp	.+8      	; 0x1816 <__fixsfsi+0x9c>
    180e:	20 e0       	ldi	r18, 0x00	; 0
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	40 e0       	ldi	r20, 0x00	; 0
    1814:	50 e8       	ldi	r21, 0x80	; 128
    1816:	b9 01       	movw	r22, r18
    1818:	ca 01       	movw	r24, r20
    181a:	2c 96       	adiw	r28, 0x0c	; 12
    181c:	e2 e0       	ldi	r30, 0x02	; 2
    181e:	0c 94 2f 1d 	jmp	0x3a5e	; 0x3a5e <__epilogue_restores__+0x20>

00001822 <__floatunsisf>:
    1822:	a8 e0       	ldi	r26, 0x08	; 8
    1824:	b0 e0       	ldi	r27, 0x00	; 0
    1826:	e7 e1       	ldi	r30, 0x17	; 23
    1828:	fc e0       	ldi	r31, 0x0C	; 12
    182a:	0c 94 0b 1d 	jmp	0x3a16	; 0x3a16 <__prologue_saves__+0x10>
    182e:	7b 01       	movw	r14, r22
    1830:	8c 01       	movw	r16, r24
    1832:	61 15       	cp	r22, r1
    1834:	71 05       	cpc	r23, r1
    1836:	81 05       	cpc	r24, r1
    1838:	91 05       	cpc	r25, r1
    183a:	19 f4       	brne	.+6      	; 0x1842 <__floatunsisf+0x20>
    183c:	82 e0       	ldi	r24, 0x02	; 2
    183e:	89 83       	std	Y+1, r24	; 0x01
    1840:	60 c0       	rjmp	.+192    	; 0x1902 <__floatunsisf+0xe0>
    1842:	83 e0       	ldi	r24, 0x03	; 3
    1844:	89 83       	std	Y+1, r24	; 0x01
    1846:	8e e1       	ldi	r24, 0x1E	; 30
    1848:	c8 2e       	mov	r12, r24
    184a:	d1 2c       	mov	r13, r1
    184c:	dc 82       	std	Y+4, r13	; 0x04
    184e:	cb 82       	std	Y+3, r12	; 0x03
    1850:	ed 82       	std	Y+5, r14	; 0x05
    1852:	fe 82       	std	Y+6, r15	; 0x06
    1854:	0f 83       	std	Y+7, r16	; 0x07
    1856:	18 87       	std	Y+8, r17	; 0x08
    1858:	c8 01       	movw	r24, r16
    185a:	b7 01       	movw	r22, r14
    185c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <__clzsi2>
    1860:	fc 01       	movw	r30, r24
    1862:	31 97       	sbiw	r30, 0x01	; 1
    1864:	f7 ff       	sbrs	r31, 7
    1866:	3b c0       	rjmp	.+118    	; 0x18de <__floatunsisf+0xbc>
    1868:	22 27       	eor	r18, r18
    186a:	33 27       	eor	r19, r19
    186c:	2e 1b       	sub	r18, r30
    186e:	3f 0b       	sbc	r19, r31
    1870:	57 01       	movw	r10, r14
    1872:	68 01       	movw	r12, r16
    1874:	02 2e       	mov	r0, r18
    1876:	04 c0       	rjmp	.+8      	; 0x1880 <__floatunsisf+0x5e>
    1878:	d6 94       	lsr	r13
    187a:	c7 94       	ror	r12
    187c:	b7 94       	ror	r11
    187e:	a7 94       	ror	r10
    1880:	0a 94       	dec	r0
    1882:	d2 f7       	brpl	.-12     	; 0x1878 <__floatunsisf+0x56>
    1884:	40 e0       	ldi	r20, 0x00	; 0
    1886:	50 e0       	ldi	r21, 0x00	; 0
    1888:	60 e0       	ldi	r22, 0x00	; 0
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	a0 e0       	ldi	r26, 0x00	; 0
    1892:	b0 e0       	ldi	r27, 0x00	; 0
    1894:	04 c0       	rjmp	.+8      	; 0x189e <__floatunsisf+0x7c>
    1896:	88 0f       	add	r24, r24
    1898:	99 1f       	adc	r25, r25
    189a:	aa 1f       	adc	r26, r26
    189c:	bb 1f       	adc	r27, r27
    189e:	2a 95       	dec	r18
    18a0:	d2 f7       	brpl	.-12     	; 0x1896 <__floatunsisf+0x74>
    18a2:	01 97       	sbiw	r24, 0x01	; 1
    18a4:	a1 09       	sbc	r26, r1
    18a6:	b1 09       	sbc	r27, r1
    18a8:	8e 21       	and	r24, r14
    18aa:	9f 21       	and	r25, r15
    18ac:	a0 23       	and	r26, r16
    18ae:	b1 23       	and	r27, r17
    18b0:	00 97       	sbiw	r24, 0x00	; 0
    18b2:	a1 05       	cpc	r26, r1
    18b4:	b1 05       	cpc	r27, r1
    18b6:	21 f0       	breq	.+8      	; 0x18c0 <__floatunsisf+0x9e>
    18b8:	41 e0       	ldi	r20, 0x01	; 1
    18ba:	50 e0       	ldi	r21, 0x00	; 0
    18bc:	60 e0       	ldi	r22, 0x00	; 0
    18be:	70 e0       	ldi	r23, 0x00	; 0
    18c0:	4a 29       	or	r20, r10
    18c2:	5b 29       	or	r21, r11
    18c4:	6c 29       	or	r22, r12
    18c6:	7d 29       	or	r23, r13
    18c8:	4d 83       	std	Y+5, r20	; 0x05
    18ca:	5e 83       	std	Y+6, r21	; 0x06
    18cc:	6f 83       	std	Y+7, r22	; 0x07
    18ce:	78 87       	std	Y+8, r23	; 0x08
    18d0:	8e e1       	ldi	r24, 0x1E	; 30
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	8e 1b       	sub	r24, r30
    18d6:	9f 0b       	sbc	r25, r31
    18d8:	9c 83       	std	Y+4, r25	; 0x04
    18da:	8b 83       	std	Y+3, r24	; 0x03
    18dc:	12 c0       	rjmp	.+36     	; 0x1902 <__floatunsisf+0xe0>
    18de:	30 97       	sbiw	r30, 0x00	; 0
    18e0:	81 f0       	breq	.+32     	; 0x1902 <__floatunsisf+0xe0>
    18e2:	0e 2e       	mov	r0, r30
    18e4:	04 c0       	rjmp	.+8      	; 0x18ee <__floatunsisf+0xcc>
    18e6:	ee 0c       	add	r14, r14
    18e8:	ff 1c       	adc	r15, r15
    18ea:	00 1f       	adc	r16, r16
    18ec:	11 1f       	adc	r17, r17
    18ee:	0a 94       	dec	r0
    18f0:	d2 f7       	brpl	.-12     	; 0x18e6 <__floatunsisf+0xc4>
    18f2:	ed 82       	std	Y+5, r14	; 0x05
    18f4:	fe 82       	std	Y+6, r15	; 0x06
    18f6:	0f 83       	std	Y+7, r16	; 0x07
    18f8:	18 87       	std	Y+8, r17	; 0x08
    18fa:	ce 1a       	sub	r12, r30
    18fc:	df 0a       	sbc	r13, r31
    18fe:	dc 82       	std	Y+4, r13	; 0x04
    1900:	cb 82       	std	Y+3, r12	; 0x03
    1902:	1a 82       	std	Y+2, r1	; 0x02
    1904:	ce 01       	movw	r24, r28
    1906:	01 96       	adiw	r24, 0x01	; 1
    1908:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__pack_f>
    190c:	28 96       	adiw	r28, 0x08	; 8
    190e:	ea e0       	ldi	r30, 0x0A	; 10
    1910:	0c 94 27 1d 	jmp	0x3a4e	; 0x3a4e <__epilogue_restores__+0x10>

00001914 <__clzsi2>:
    1914:	ef 92       	push	r14
    1916:	ff 92       	push	r15
    1918:	0f 93       	push	r16
    191a:	1f 93       	push	r17
    191c:	7b 01       	movw	r14, r22
    191e:	8c 01       	movw	r16, r24
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	e8 16       	cp	r14, r24
    1924:	80 e0       	ldi	r24, 0x00	; 0
    1926:	f8 06       	cpc	r15, r24
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	08 07       	cpc	r16, r24
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	18 07       	cpc	r17, r24
    1930:	88 f4       	brcc	.+34     	; 0x1954 <__clzsi2+0x40>
    1932:	8f ef       	ldi	r24, 0xFF	; 255
    1934:	e8 16       	cp	r14, r24
    1936:	f1 04       	cpc	r15, r1
    1938:	01 05       	cpc	r16, r1
    193a:	11 05       	cpc	r17, r1
    193c:	31 f0       	breq	.+12     	; 0x194a <__clzsi2+0x36>
    193e:	28 f0       	brcs	.+10     	; 0x194a <__clzsi2+0x36>
    1940:	88 e0       	ldi	r24, 0x08	; 8
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	a0 e0       	ldi	r26, 0x00	; 0
    1946:	b0 e0       	ldi	r27, 0x00	; 0
    1948:	17 c0       	rjmp	.+46     	; 0x1978 <__clzsi2+0x64>
    194a:	80 e0       	ldi	r24, 0x00	; 0
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	a0 e0       	ldi	r26, 0x00	; 0
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	12 c0       	rjmp	.+36     	; 0x1978 <__clzsi2+0x64>
    1954:	80 e0       	ldi	r24, 0x00	; 0
    1956:	e8 16       	cp	r14, r24
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	f8 06       	cpc	r15, r24
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	08 07       	cpc	r16, r24
    1960:	81 e0       	ldi	r24, 0x01	; 1
    1962:	18 07       	cpc	r17, r24
    1964:	28 f0       	brcs	.+10     	; 0x1970 <__clzsi2+0x5c>
    1966:	88 e1       	ldi	r24, 0x18	; 24
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	a0 e0       	ldi	r26, 0x00	; 0
    196c:	b0 e0       	ldi	r27, 0x00	; 0
    196e:	04 c0       	rjmp	.+8      	; 0x1978 <__clzsi2+0x64>
    1970:	80 e1       	ldi	r24, 0x10	; 16
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	a0 e0       	ldi	r26, 0x00	; 0
    1976:	b0 e0       	ldi	r27, 0x00	; 0
    1978:	20 e2       	ldi	r18, 0x20	; 32
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	40 e0       	ldi	r20, 0x00	; 0
    197e:	50 e0       	ldi	r21, 0x00	; 0
    1980:	28 1b       	sub	r18, r24
    1982:	39 0b       	sbc	r19, r25
    1984:	4a 0b       	sbc	r20, r26
    1986:	5b 0b       	sbc	r21, r27
    1988:	04 c0       	rjmp	.+8      	; 0x1992 <__clzsi2+0x7e>
    198a:	16 95       	lsr	r17
    198c:	07 95       	ror	r16
    198e:	f7 94       	ror	r15
    1990:	e7 94       	ror	r14
    1992:	8a 95       	dec	r24
    1994:	d2 f7       	brpl	.-12     	; 0x198a <__clzsi2+0x76>
    1996:	f7 01       	movw	r30, r14
    1998:	ef 57       	subi	r30, 0x7F	; 127
    199a:	ff 4f       	sbci	r31, 0xFF	; 255
    199c:	80 81       	ld	r24, Z
    199e:	28 1b       	sub	r18, r24
    19a0:	31 09       	sbc	r19, r1
    19a2:	41 09       	sbc	r20, r1
    19a4:	51 09       	sbc	r21, r1
    19a6:	c9 01       	movw	r24, r18
    19a8:	1f 91       	pop	r17
    19aa:	0f 91       	pop	r16
    19ac:	ff 90       	pop	r15
    19ae:	ef 90       	pop	r14
    19b0:	08 95       	ret

000019b2 <__pack_f>:
    19b2:	df 92       	push	r13
    19b4:	ef 92       	push	r14
    19b6:	ff 92       	push	r15
    19b8:	0f 93       	push	r16
    19ba:	1f 93       	push	r17
    19bc:	fc 01       	movw	r30, r24
    19be:	e4 80       	ldd	r14, Z+4	; 0x04
    19c0:	f5 80       	ldd	r15, Z+5	; 0x05
    19c2:	06 81       	ldd	r16, Z+6	; 0x06
    19c4:	17 81       	ldd	r17, Z+7	; 0x07
    19c6:	d1 80       	ldd	r13, Z+1	; 0x01
    19c8:	80 81       	ld	r24, Z
    19ca:	82 30       	cpi	r24, 0x02	; 2
    19cc:	48 f4       	brcc	.+18     	; 0x19e0 <__pack_f+0x2e>
    19ce:	80 e0       	ldi	r24, 0x00	; 0
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	a0 e1       	ldi	r26, 0x10	; 16
    19d4:	b0 e0       	ldi	r27, 0x00	; 0
    19d6:	e8 2a       	or	r14, r24
    19d8:	f9 2a       	or	r15, r25
    19da:	0a 2b       	or	r16, r26
    19dc:	1b 2b       	or	r17, r27
    19de:	a5 c0       	rjmp	.+330    	; 0x1b2a <__pack_f+0x178>
    19e0:	84 30       	cpi	r24, 0x04	; 4
    19e2:	09 f4       	brne	.+2      	; 0x19e6 <__pack_f+0x34>
    19e4:	9f c0       	rjmp	.+318    	; 0x1b24 <__pack_f+0x172>
    19e6:	82 30       	cpi	r24, 0x02	; 2
    19e8:	21 f4       	brne	.+8      	; 0x19f2 <__pack_f+0x40>
    19ea:	ee 24       	eor	r14, r14
    19ec:	ff 24       	eor	r15, r15
    19ee:	87 01       	movw	r16, r14
    19f0:	05 c0       	rjmp	.+10     	; 0x19fc <__pack_f+0x4a>
    19f2:	e1 14       	cp	r14, r1
    19f4:	f1 04       	cpc	r15, r1
    19f6:	01 05       	cpc	r16, r1
    19f8:	11 05       	cpc	r17, r1
    19fa:	19 f4       	brne	.+6      	; 0x1a02 <__pack_f+0x50>
    19fc:	e0 e0       	ldi	r30, 0x00	; 0
    19fe:	f0 e0       	ldi	r31, 0x00	; 0
    1a00:	96 c0       	rjmp	.+300    	; 0x1b2e <__pack_f+0x17c>
    1a02:	62 81       	ldd	r22, Z+2	; 0x02
    1a04:	73 81       	ldd	r23, Z+3	; 0x03
    1a06:	9f ef       	ldi	r25, 0xFF	; 255
    1a08:	62 38       	cpi	r22, 0x82	; 130
    1a0a:	79 07       	cpc	r23, r25
    1a0c:	0c f0       	brlt	.+2      	; 0x1a10 <__pack_f+0x5e>
    1a0e:	5b c0       	rjmp	.+182    	; 0x1ac6 <__pack_f+0x114>
    1a10:	22 e8       	ldi	r18, 0x82	; 130
    1a12:	3f ef       	ldi	r19, 0xFF	; 255
    1a14:	26 1b       	sub	r18, r22
    1a16:	37 0b       	sbc	r19, r23
    1a18:	2a 31       	cpi	r18, 0x1A	; 26
    1a1a:	31 05       	cpc	r19, r1
    1a1c:	2c f0       	brlt	.+10     	; 0x1a28 <__pack_f+0x76>
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	40 e0       	ldi	r20, 0x00	; 0
    1a24:	50 e0       	ldi	r21, 0x00	; 0
    1a26:	2a c0       	rjmp	.+84     	; 0x1a7c <__pack_f+0xca>
    1a28:	b8 01       	movw	r22, r16
    1a2a:	a7 01       	movw	r20, r14
    1a2c:	02 2e       	mov	r0, r18
    1a2e:	04 c0       	rjmp	.+8      	; 0x1a38 <__pack_f+0x86>
    1a30:	76 95       	lsr	r23
    1a32:	67 95       	ror	r22
    1a34:	57 95       	ror	r21
    1a36:	47 95       	ror	r20
    1a38:	0a 94       	dec	r0
    1a3a:	d2 f7       	brpl	.-12     	; 0x1a30 <__pack_f+0x7e>
    1a3c:	81 e0       	ldi	r24, 0x01	; 1
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	a0 e0       	ldi	r26, 0x00	; 0
    1a42:	b0 e0       	ldi	r27, 0x00	; 0
    1a44:	04 c0       	rjmp	.+8      	; 0x1a4e <__pack_f+0x9c>
    1a46:	88 0f       	add	r24, r24
    1a48:	99 1f       	adc	r25, r25
    1a4a:	aa 1f       	adc	r26, r26
    1a4c:	bb 1f       	adc	r27, r27
    1a4e:	2a 95       	dec	r18
    1a50:	d2 f7       	brpl	.-12     	; 0x1a46 <__pack_f+0x94>
    1a52:	01 97       	sbiw	r24, 0x01	; 1
    1a54:	a1 09       	sbc	r26, r1
    1a56:	b1 09       	sbc	r27, r1
    1a58:	8e 21       	and	r24, r14
    1a5a:	9f 21       	and	r25, r15
    1a5c:	a0 23       	and	r26, r16
    1a5e:	b1 23       	and	r27, r17
    1a60:	00 97       	sbiw	r24, 0x00	; 0
    1a62:	a1 05       	cpc	r26, r1
    1a64:	b1 05       	cpc	r27, r1
    1a66:	21 f0       	breq	.+8      	; 0x1a70 <__pack_f+0xbe>
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	a0 e0       	ldi	r26, 0x00	; 0
    1a6e:	b0 e0       	ldi	r27, 0x00	; 0
    1a70:	9a 01       	movw	r18, r20
    1a72:	ab 01       	movw	r20, r22
    1a74:	28 2b       	or	r18, r24
    1a76:	39 2b       	or	r19, r25
    1a78:	4a 2b       	or	r20, r26
    1a7a:	5b 2b       	or	r21, r27
    1a7c:	da 01       	movw	r26, r20
    1a7e:	c9 01       	movw	r24, r18
    1a80:	8f 77       	andi	r24, 0x7F	; 127
    1a82:	90 70       	andi	r25, 0x00	; 0
    1a84:	a0 70       	andi	r26, 0x00	; 0
    1a86:	b0 70       	andi	r27, 0x00	; 0
    1a88:	80 34       	cpi	r24, 0x40	; 64
    1a8a:	91 05       	cpc	r25, r1
    1a8c:	a1 05       	cpc	r26, r1
    1a8e:	b1 05       	cpc	r27, r1
    1a90:	39 f4       	brne	.+14     	; 0x1aa0 <__pack_f+0xee>
    1a92:	27 ff       	sbrs	r18, 7
    1a94:	09 c0       	rjmp	.+18     	; 0x1aa8 <__pack_f+0xf6>
    1a96:	20 5c       	subi	r18, 0xC0	; 192
    1a98:	3f 4f       	sbci	r19, 0xFF	; 255
    1a9a:	4f 4f       	sbci	r20, 0xFF	; 255
    1a9c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a9e:	04 c0       	rjmp	.+8      	; 0x1aa8 <__pack_f+0xf6>
    1aa0:	21 5c       	subi	r18, 0xC1	; 193
    1aa2:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa4:	4f 4f       	sbci	r20, 0xFF	; 255
    1aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa8:	e0 e0       	ldi	r30, 0x00	; 0
    1aaa:	f0 e0       	ldi	r31, 0x00	; 0
    1aac:	20 30       	cpi	r18, 0x00	; 0
    1aae:	a0 e0       	ldi	r26, 0x00	; 0
    1ab0:	3a 07       	cpc	r19, r26
    1ab2:	a0 e0       	ldi	r26, 0x00	; 0
    1ab4:	4a 07       	cpc	r20, r26
    1ab6:	a0 e4       	ldi	r26, 0x40	; 64
    1ab8:	5a 07       	cpc	r21, r26
    1aba:	10 f0       	brcs	.+4      	; 0x1ac0 <__pack_f+0x10e>
    1abc:	e1 e0       	ldi	r30, 0x01	; 1
    1abe:	f0 e0       	ldi	r31, 0x00	; 0
    1ac0:	79 01       	movw	r14, r18
    1ac2:	8a 01       	movw	r16, r20
    1ac4:	27 c0       	rjmp	.+78     	; 0x1b14 <__pack_f+0x162>
    1ac6:	60 38       	cpi	r22, 0x80	; 128
    1ac8:	71 05       	cpc	r23, r1
    1aca:	64 f5       	brge	.+88     	; 0x1b24 <__pack_f+0x172>
    1acc:	fb 01       	movw	r30, r22
    1ace:	e1 58       	subi	r30, 0x81	; 129
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	d8 01       	movw	r26, r16
    1ad4:	c7 01       	movw	r24, r14
    1ad6:	8f 77       	andi	r24, 0x7F	; 127
    1ad8:	90 70       	andi	r25, 0x00	; 0
    1ada:	a0 70       	andi	r26, 0x00	; 0
    1adc:	b0 70       	andi	r27, 0x00	; 0
    1ade:	80 34       	cpi	r24, 0x40	; 64
    1ae0:	91 05       	cpc	r25, r1
    1ae2:	a1 05       	cpc	r26, r1
    1ae4:	b1 05       	cpc	r27, r1
    1ae6:	39 f4       	brne	.+14     	; 0x1af6 <__pack_f+0x144>
    1ae8:	e7 fe       	sbrs	r14, 7
    1aea:	0d c0       	rjmp	.+26     	; 0x1b06 <__pack_f+0x154>
    1aec:	80 e4       	ldi	r24, 0x40	; 64
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	a0 e0       	ldi	r26, 0x00	; 0
    1af2:	b0 e0       	ldi	r27, 0x00	; 0
    1af4:	04 c0       	rjmp	.+8      	; 0x1afe <__pack_f+0x14c>
    1af6:	8f e3       	ldi	r24, 0x3F	; 63
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	a0 e0       	ldi	r26, 0x00	; 0
    1afc:	b0 e0       	ldi	r27, 0x00	; 0
    1afe:	e8 0e       	add	r14, r24
    1b00:	f9 1e       	adc	r15, r25
    1b02:	0a 1f       	adc	r16, r26
    1b04:	1b 1f       	adc	r17, r27
    1b06:	17 ff       	sbrs	r17, 7
    1b08:	05 c0       	rjmp	.+10     	; 0x1b14 <__pack_f+0x162>
    1b0a:	16 95       	lsr	r17
    1b0c:	07 95       	ror	r16
    1b0e:	f7 94       	ror	r15
    1b10:	e7 94       	ror	r14
    1b12:	31 96       	adiw	r30, 0x01	; 1
    1b14:	87 e0       	ldi	r24, 0x07	; 7
    1b16:	16 95       	lsr	r17
    1b18:	07 95       	ror	r16
    1b1a:	f7 94       	ror	r15
    1b1c:	e7 94       	ror	r14
    1b1e:	8a 95       	dec	r24
    1b20:	d1 f7       	brne	.-12     	; 0x1b16 <__pack_f+0x164>
    1b22:	05 c0       	rjmp	.+10     	; 0x1b2e <__pack_f+0x17c>
    1b24:	ee 24       	eor	r14, r14
    1b26:	ff 24       	eor	r15, r15
    1b28:	87 01       	movw	r16, r14
    1b2a:	ef ef       	ldi	r30, 0xFF	; 255
    1b2c:	f0 e0       	ldi	r31, 0x00	; 0
    1b2e:	6e 2f       	mov	r22, r30
    1b30:	67 95       	ror	r22
    1b32:	66 27       	eor	r22, r22
    1b34:	67 95       	ror	r22
    1b36:	90 2f       	mov	r25, r16
    1b38:	9f 77       	andi	r25, 0x7F	; 127
    1b3a:	d7 94       	ror	r13
    1b3c:	dd 24       	eor	r13, r13
    1b3e:	d7 94       	ror	r13
    1b40:	8e 2f       	mov	r24, r30
    1b42:	86 95       	lsr	r24
    1b44:	49 2f       	mov	r20, r25
    1b46:	46 2b       	or	r20, r22
    1b48:	58 2f       	mov	r21, r24
    1b4a:	5d 29       	or	r21, r13
    1b4c:	b7 01       	movw	r22, r14
    1b4e:	ca 01       	movw	r24, r20
    1b50:	1f 91       	pop	r17
    1b52:	0f 91       	pop	r16
    1b54:	ff 90       	pop	r15
    1b56:	ef 90       	pop	r14
    1b58:	df 90       	pop	r13
    1b5a:	08 95       	ret

00001b5c <__unpack_f>:
    1b5c:	fc 01       	movw	r30, r24
    1b5e:	db 01       	movw	r26, r22
    1b60:	40 81       	ld	r20, Z
    1b62:	51 81       	ldd	r21, Z+1	; 0x01
    1b64:	22 81       	ldd	r18, Z+2	; 0x02
    1b66:	62 2f       	mov	r22, r18
    1b68:	6f 77       	andi	r22, 0x7F	; 127
    1b6a:	70 e0       	ldi	r23, 0x00	; 0
    1b6c:	22 1f       	adc	r18, r18
    1b6e:	22 27       	eor	r18, r18
    1b70:	22 1f       	adc	r18, r18
    1b72:	93 81       	ldd	r25, Z+3	; 0x03
    1b74:	89 2f       	mov	r24, r25
    1b76:	88 0f       	add	r24, r24
    1b78:	82 2b       	or	r24, r18
    1b7a:	28 2f       	mov	r18, r24
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	99 1f       	adc	r25, r25
    1b80:	99 27       	eor	r25, r25
    1b82:	99 1f       	adc	r25, r25
    1b84:	11 96       	adiw	r26, 0x01	; 1
    1b86:	9c 93       	st	X, r25
    1b88:	11 97       	sbiw	r26, 0x01	; 1
    1b8a:	21 15       	cp	r18, r1
    1b8c:	31 05       	cpc	r19, r1
    1b8e:	a9 f5       	brne	.+106    	; 0x1bfa <__unpack_f+0x9e>
    1b90:	41 15       	cp	r20, r1
    1b92:	51 05       	cpc	r21, r1
    1b94:	61 05       	cpc	r22, r1
    1b96:	71 05       	cpc	r23, r1
    1b98:	11 f4       	brne	.+4      	; 0x1b9e <__unpack_f+0x42>
    1b9a:	82 e0       	ldi	r24, 0x02	; 2
    1b9c:	37 c0       	rjmp	.+110    	; 0x1c0c <__unpack_f+0xb0>
    1b9e:	82 e8       	ldi	r24, 0x82	; 130
    1ba0:	9f ef       	ldi	r25, 0xFF	; 255
    1ba2:	13 96       	adiw	r26, 0x03	; 3
    1ba4:	9c 93       	st	X, r25
    1ba6:	8e 93       	st	-X, r24
    1ba8:	12 97       	sbiw	r26, 0x02	; 2
    1baa:	9a 01       	movw	r18, r20
    1bac:	ab 01       	movw	r20, r22
    1bae:	67 e0       	ldi	r22, 0x07	; 7
    1bb0:	22 0f       	add	r18, r18
    1bb2:	33 1f       	adc	r19, r19
    1bb4:	44 1f       	adc	r20, r20
    1bb6:	55 1f       	adc	r21, r21
    1bb8:	6a 95       	dec	r22
    1bba:	d1 f7       	brne	.-12     	; 0x1bb0 <__unpack_f+0x54>
    1bbc:	83 e0       	ldi	r24, 0x03	; 3
    1bbe:	8c 93       	st	X, r24
    1bc0:	0d c0       	rjmp	.+26     	; 0x1bdc <__unpack_f+0x80>
    1bc2:	22 0f       	add	r18, r18
    1bc4:	33 1f       	adc	r19, r19
    1bc6:	44 1f       	adc	r20, r20
    1bc8:	55 1f       	adc	r21, r21
    1bca:	12 96       	adiw	r26, 0x02	; 2
    1bcc:	8d 91       	ld	r24, X+
    1bce:	9c 91       	ld	r25, X
    1bd0:	13 97       	sbiw	r26, 0x03	; 3
    1bd2:	01 97       	sbiw	r24, 0x01	; 1
    1bd4:	13 96       	adiw	r26, 0x03	; 3
    1bd6:	9c 93       	st	X, r25
    1bd8:	8e 93       	st	-X, r24
    1bda:	12 97       	sbiw	r26, 0x02	; 2
    1bdc:	20 30       	cpi	r18, 0x00	; 0
    1bde:	80 e0       	ldi	r24, 0x00	; 0
    1be0:	38 07       	cpc	r19, r24
    1be2:	80 e0       	ldi	r24, 0x00	; 0
    1be4:	48 07       	cpc	r20, r24
    1be6:	80 e4       	ldi	r24, 0x40	; 64
    1be8:	58 07       	cpc	r21, r24
    1bea:	58 f3       	brcs	.-42     	; 0x1bc2 <__unpack_f+0x66>
    1bec:	14 96       	adiw	r26, 0x04	; 4
    1bee:	2d 93       	st	X+, r18
    1bf0:	3d 93       	st	X+, r19
    1bf2:	4d 93       	st	X+, r20
    1bf4:	5c 93       	st	X, r21
    1bf6:	17 97       	sbiw	r26, 0x07	; 7
    1bf8:	08 95       	ret
    1bfa:	2f 3f       	cpi	r18, 0xFF	; 255
    1bfc:	31 05       	cpc	r19, r1
    1bfe:	79 f4       	brne	.+30     	; 0x1c1e <__unpack_f+0xc2>
    1c00:	41 15       	cp	r20, r1
    1c02:	51 05       	cpc	r21, r1
    1c04:	61 05       	cpc	r22, r1
    1c06:	71 05       	cpc	r23, r1
    1c08:	19 f4       	brne	.+6      	; 0x1c10 <__unpack_f+0xb4>
    1c0a:	84 e0       	ldi	r24, 0x04	; 4
    1c0c:	8c 93       	st	X, r24
    1c0e:	08 95       	ret
    1c10:	64 ff       	sbrs	r22, 4
    1c12:	03 c0       	rjmp	.+6      	; 0x1c1a <__unpack_f+0xbe>
    1c14:	81 e0       	ldi	r24, 0x01	; 1
    1c16:	8c 93       	st	X, r24
    1c18:	12 c0       	rjmp	.+36     	; 0x1c3e <__unpack_f+0xe2>
    1c1a:	1c 92       	st	X, r1
    1c1c:	10 c0       	rjmp	.+32     	; 0x1c3e <__unpack_f+0xe2>
    1c1e:	2f 57       	subi	r18, 0x7F	; 127
    1c20:	30 40       	sbci	r19, 0x00	; 0
    1c22:	13 96       	adiw	r26, 0x03	; 3
    1c24:	3c 93       	st	X, r19
    1c26:	2e 93       	st	-X, r18
    1c28:	12 97       	sbiw	r26, 0x02	; 2
    1c2a:	83 e0       	ldi	r24, 0x03	; 3
    1c2c:	8c 93       	st	X, r24
    1c2e:	87 e0       	ldi	r24, 0x07	; 7
    1c30:	44 0f       	add	r20, r20
    1c32:	55 1f       	adc	r21, r21
    1c34:	66 1f       	adc	r22, r22
    1c36:	77 1f       	adc	r23, r23
    1c38:	8a 95       	dec	r24
    1c3a:	d1 f7       	brne	.-12     	; 0x1c30 <__unpack_f+0xd4>
    1c3c:	70 64       	ori	r23, 0x40	; 64
    1c3e:	14 96       	adiw	r26, 0x04	; 4
    1c40:	4d 93       	st	X+, r20
    1c42:	5d 93       	st	X+, r21
    1c44:	6d 93       	st	X+, r22
    1c46:	7c 93       	st	X, r23
    1c48:	17 97       	sbiw	r26, 0x07	; 7
    1c4a:	08 95       	ret

00001c4c <__fpcmp_parts_f>:
    1c4c:	1f 93       	push	r17
    1c4e:	dc 01       	movw	r26, r24
    1c50:	fb 01       	movw	r30, r22
    1c52:	9c 91       	ld	r25, X
    1c54:	92 30       	cpi	r25, 0x02	; 2
    1c56:	08 f4       	brcc	.+2      	; 0x1c5a <__fpcmp_parts_f+0xe>
    1c58:	47 c0       	rjmp	.+142    	; 0x1ce8 <__fpcmp_parts_f+0x9c>
    1c5a:	80 81       	ld	r24, Z
    1c5c:	82 30       	cpi	r24, 0x02	; 2
    1c5e:	08 f4       	brcc	.+2      	; 0x1c62 <__fpcmp_parts_f+0x16>
    1c60:	43 c0       	rjmp	.+134    	; 0x1ce8 <__fpcmp_parts_f+0x9c>
    1c62:	94 30       	cpi	r25, 0x04	; 4
    1c64:	51 f4       	brne	.+20     	; 0x1c7a <__fpcmp_parts_f+0x2e>
    1c66:	11 96       	adiw	r26, 0x01	; 1
    1c68:	1c 91       	ld	r17, X
    1c6a:	84 30       	cpi	r24, 0x04	; 4
    1c6c:	99 f5       	brne	.+102    	; 0x1cd4 <__fpcmp_parts_f+0x88>
    1c6e:	81 81       	ldd	r24, Z+1	; 0x01
    1c70:	68 2f       	mov	r22, r24
    1c72:	70 e0       	ldi	r23, 0x00	; 0
    1c74:	61 1b       	sub	r22, r17
    1c76:	71 09       	sbc	r23, r1
    1c78:	3f c0       	rjmp	.+126    	; 0x1cf8 <__fpcmp_parts_f+0xac>
    1c7a:	84 30       	cpi	r24, 0x04	; 4
    1c7c:	21 f0       	breq	.+8      	; 0x1c86 <__fpcmp_parts_f+0x3a>
    1c7e:	92 30       	cpi	r25, 0x02	; 2
    1c80:	31 f4       	brne	.+12     	; 0x1c8e <__fpcmp_parts_f+0x42>
    1c82:	82 30       	cpi	r24, 0x02	; 2
    1c84:	b9 f1       	breq	.+110    	; 0x1cf4 <__fpcmp_parts_f+0xa8>
    1c86:	81 81       	ldd	r24, Z+1	; 0x01
    1c88:	88 23       	and	r24, r24
    1c8a:	89 f1       	breq	.+98     	; 0x1cee <__fpcmp_parts_f+0xa2>
    1c8c:	2d c0       	rjmp	.+90     	; 0x1ce8 <__fpcmp_parts_f+0x9c>
    1c8e:	11 96       	adiw	r26, 0x01	; 1
    1c90:	1c 91       	ld	r17, X
    1c92:	11 97       	sbiw	r26, 0x01	; 1
    1c94:	82 30       	cpi	r24, 0x02	; 2
    1c96:	f1 f0       	breq	.+60     	; 0x1cd4 <__fpcmp_parts_f+0x88>
    1c98:	81 81       	ldd	r24, Z+1	; 0x01
    1c9a:	18 17       	cp	r17, r24
    1c9c:	d9 f4       	brne	.+54     	; 0x1cd4 <__fpcmp_parts_f+0x88>
    1c9e:	12 96       	adiw	r26, 0x02	; 2
    1ca0:	2d 91       	ld	r18, X+
    1ca2:	3c 91       	ld	r19, X
    1ca4:	13 97       	sbiw	r26, 0x03	; 3
    1ca6:	82 81       	ldd	r24, Z+2	; 0x02
    1ca8:	93 81       	ldd	r25, Z+3	; 0x03
    1caa:	82 17       	cp	r24, r18
    1cac:	93 07       	cpc	r25, r19
    1cae:	94 f0       	brlt	.+36     	; 0x1cd4 <__fpcmp_parts_f+0x88>
    1cb0:	28 17       	cp	r18, r24
    1cb2:	39 07       	cpc	r19, r25
    1cb4:	bc f0       	brlt	.+46     	; 0x1ce4 <__fpcmp_parts_f+0x98>
    1cb6:	14 96       	adiw	r26, 0x04	; 4
    1cb8:	8d 91       	ld	r24, X+
    1cba:	9d 91       	ld	r25, X+
    1cbc:	0d 90       	ld	r0, X+
    1cbe:	bc 91       	ld	r27, X
    1cc0:	a0 2d       	mov	r26, r0
    1cc2:	24 81       	ldd	r18, Z+4	; 0x04
    1cc4:	35 81       	ldd	r19, Z+5	; 0x05
    1cc6:	46 81       	ldd	r20, Z+6	; 0x06
    1cc8:	57 81       	ldd	r21, Z+7	; 0x07
    1cca:	28 17       	cp	r18, r24
    1ccc:	39 07       	cpc	r19, r25
    1cce:	4a 07       	cpc	r20, r26
    1cd0:	5b 07       	cpc	r21, r27
    1cd2:	18 f4       	brcc	.+6      	; 0x1cda <__fpcmp_parts_f+0x8e>
    1cd4:	11 23       	and	r17, r17
    1cd6:	41 f0       	breq	.+16     	; 0x1ce8 <__fpcmp_parts_f+0x9c>
    1cd8:	0a c0       	rjmp	.+20     	; 0x1cee <__fpcmp_parts_f+0xa2>
    1cda:	82 17       	cp	r24, r18
    1cdc:	93 07       	cpc	r25, r19
    1cde:	a4 07       	cpc	r26, r20
    1ce0:	b5 07       	cpc	r27, r21
    1ce2:	40 f4       	brcc	.+16     	; 0x1cf4 <__fpcmp_parts_f+0xa8>
    1ce4:	11 23       	and	r17, r17
    1ce6:	19 f0       	breq	.+6      	; 0x1cee <__fpcmp_parts_f+0xa2>
    1ce8:	61 e0       	ldi	r22, 0x01	; 1
    1cea:	70 e0       	ldi	r23, 0x00	; 0
    1cec:	05 c0       	rjmp	.+10     	; 0x1cf8 <__fpcmp_parts_f+0xac>
    1cee:	6f ef       	ldi	r22, 0xFF	; 255
    1cf0:	7f ef       	ldi	r23, 0xFF	; 255
    1cf2:	02 c0       	rjmp	.+4      	; 0x1cf8 <__fpcmp_parts_f+0xac>
    1cf4:	60 e0       	ldi	r22, 0x00	; 0
    1cf6:	70 e0       	ldi	r23, 0x00	; 0
    1cf8:	cb 01       	movw	r24, r22
    1cfa:	1f 91       	pop	r17
    1cfc:	08 95       	ret

00001cfe <DcMotor_init>:
#include "DC_Motor.h"

#include "Timer.h"

void DcMotor_init(void)
{
    1cfe:	df 93       	push	r29
    1d00:	cf 93       	push	r28
    1d02:	cd b7       	in	r28, 0x3d	; 61
    1d04:	de b7       	in	r29, 0x3e	; 62
	GPIO_setupPinDirection(DcMotor_IN1_PORT_ID,DcMotor_IN1_PIN_ID,PIN_OUTPUT);
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	60 e0       	ldi	r22, 0x00	; 0
    1d0a:	41 e0       	ldi	r20, 0x01	; 1
    1d0c:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(DcMotor_IN2_PORT_ID,DcMotor_IN2_PIN_ID,PIN_OUTPUT);
    1d10:	81 e0       	ldi	r24, 0x01	; 1
    1d12:	61 e0       	ldi	r22, 0x01	; 1
    1d14:	41 e0       	ldi	r20, 0x01	; 1
    1d16:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <GPIO_setupPinDirection>
	GPIO_writePin(DcMotor_IN1_PORT_ID,DcMotor_IN1_PIN_ID,LOGIC_LOW);
    1d1a:	81 e0       	ldi	r24, 0x01	; 1
    1d1c:	60 e0       	ldi	r22, 0x00	; 0
    1d1e:	40 e0       	ldi	r20, 0x00	; 0
    1d20:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
	GPIO_writePin(DcMotor_IN2_PORT_ID,DcMotor_IN2_PIN_ID,LOGIC_LOW);
    1d24:	81 e0       	ldi	r24, 0x01	; 1
    1d26:	61 e0       	ldi	r22, 0x01	; 1
    1d28:	40 e0       	ldi	r20, 0x00	; 0
    1d2a:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
}
    1d2e:	cf 91       	pop	r28
    1d30:	df 91       	pop	r29
    1d32:	08 95       	ret

00001d34 <DcMotor_Rotate>:

void DcMotor_Rotate(DcMotor_State state,uint8 speed)
{
    1d34:	df 93       	push	r29
    1d36:	cf 93       	push	r28
    1d38:	00 d0       	rcall	.+0      	; 0x1d3a <DcMotor_Rotate+0x6>
    1d3a:	cd b7       	in	r28, 0x3d	; 61
    1d3c:	de b7       	in	r29, 0x3e	; 62
    1d3e:	89 83       	std	Y+1, r24	; 0x01
    1d40:	6a 83       	std	Y+2, r22	; 0x02
	if(state == STOP){
    1d42:	89 81       	ldd	r24, Y+1	; 0x01
    1d44:	88 23       	and	r24, r24
    1d46:	71 f4       	brne	.+28     	; 0x1d64 <DcMotor_Rotate+0x30>
		GPIO_writePin(DcMotor_IN1_PORT_ID,DcMotor_IN1_PIN_ID,LOGIC_LOW);
    1d48:	81 e0       	ldi	r24, 0x01	; 1
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	40 e0       	ldi	r20, 0x00	; 0
    1d4e:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
		GPIO_writePin(DcMotor_IN2_PORT_ID,DcMotor_IN2_PIN_ID,LOGIC_LOW);
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	61 e0       	ldi	r22, 0x01	; 1
    1d56:	40 e0       	ldi	r20, 0x00	; 0
    1d58:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
		PWM_Timer0_Init(speed);
    1d5c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5e:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <PWM_Timer0_Init>
    1d62:	21 c0       	rjmp	.+66     	; 0x1da6 <DcMotor_Rotate+0x72>
	}
	else if (state == CW)
    1d64:	89 81       	ldd	r24, Y+1	; 0x01
    1d66:	81 30       	cpi	r24, 0x01	; 1
    1d68:	71 f4       	brne	.+28     	; 0x1d86 <DcMotor_Rotate+0x52>
	{
		GPIO_writePin(DcMotor_IN1_PORT_ID,DcMotor_IN1_PIN_ID,LOGIC_LOW);
    1d6a:	81 e0       	ldi	r24, 0x01	; 1
    1d6c:	60 e0       	ldi	r22, 0x00	; 0
    1d6e:	40 e0       	ldi	r20, 0x00	; 0
    1d70:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
		GPIO_writePin(DcMotor_IN2_PORT_ID,DcMotor_IN2_PIN_ID,LOGIC_HIGH);
    1d74:	81 e0       	ldi	r24, 0x01	; 1
    1d76:	61 e0       	ldi	r22, 0x01	; 1
    1d78:	41 e0       	ldi	r20, 0x01	; 1
    1d7a:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
		PWM_Timer0_Init(speed);
    1d7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d80:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <PWM_Timer0_Init>
    1d84:	10 c0       	rjmp	.+32     	; 0x1da6 <DcMotor_Rotate+0x72>
	}
	else if (state == A_CW)
    1d86:	89 81       	ldd	r24, Y+1	; 0x01
    1d88:	82 30       	cpi	r24, 0x02	; 2
    1d8a:	69 f4       	brne	.+26     	; 0x1da6 <DcMotor_Rotate+0x72>
		{
			GPIO_writePin(DcMotor_IN1_PORT_ID,DcMotor_IN1_PIN_ID,LOGIC_HIGH);
    1d8c:	81 e0       	ldi	r24, 0x01	; 1
    1d8e:	60 e0       	ldi	r22, 0x00	; 0
    1d90:	41 e0       	ldi	r20, 0x01	; 1
    1d92:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
			GPIO_writePin(DcMotor_IN2_PORT_ID,DcMotor_IN2_PIN_ID,LOGIC_LOW);
    1d96:	81 e0       	ldi	r24, 0x01	; 1
    1d98:	61 e0       	ldi	r22, 0x01	; 1
    1d9a:	40 e0       	ldi	r20, 0x00	; 0
    1d9c:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
			PWM_Timer0_Init(speed);
    1da0:	8a 81       	ldd	r24, Y+2	; 0x02
    1da2:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <PWM_Timer0_Init>
		}
}
    1da6:	0f 90       	pop	r0
    1da8:	0f 90       	pop	r0
    1daa:	cf 91       	pop	r28
    1dac:	df 91       	pop	r29
    1dae:	08 95       	ret

00001db0 <ADC_init>:
/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

void ADC_init(const ADC_ConfigType * Config_Ptr)
{
    1db0:	df 93       	push	r29
    1db2:	cf 93       	push	r28
    1db4:	00 d0       	rcall	.+0      	; 0x1db6 <ADC_init+0x6>
    1db6:	cd b7       	in	r28, 0x3d	; 61
    1db8:	de b7       	in	r29, 0x3e	; 62
    1dba:	9a 83       	std	Y+2, r25	; 0x02
    1dbc:	89 83       	std	Y+1, r24	; 0x01
	/* ADMUX Register Bits Description:
	 * REFS1:0 = 00 to choose to connect external reference voltage by input this voltage through AREF pin
	 * ADLAR   = 0 right adjusted
	 * MUX4:0  = 00000 to choose channel 0 as initialization
	 */
	ADMUX |= ((Config_Ptr->ref_volt)<<6);
    1dbe:	a7 e2       	ldi	r26, 0x27	; 39
    1dc0:	b0 e0       	ldi	r27, 0x00	; 0
    1dc2:	e7 e2       	ldi	r30, 0x27	; 39
    1dc4:	f0 e0       	ldi	r31, 0x00	; 0
    1dc6:	80 81       	ld	r24, Z
    1dc8:	28 2f       	mov	r18, r24
    1dca:	e9 81       	ldd	r30, Y+1	; 0x01
    1dcc:	fa 81       	ldd	r31, Y+2	; 0x02
    1dce:	80 81       	ld	r24, Z
    1dd0:	88 2f       	mov	r24, r24
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	00 24       	eor	r0, r0
    1dd6:	96 95       	lsr	r25
    1dd8:	87 95       	ror	r24
    1dda:	07 94       	ror	r0
    1ddc:	96 95       	lsr	r25
    1dde:	87 95       	ror	r24
    1de0:	07 94       	ror	r0
    1de2:	98 2f       	mov	r25, r24
    1de4:	80 2d       	mov	r24, r0
    1de6:	82 2b       	or	r24, r18
    1de8:	8c 93       	st	X, r24
	 * ADEN    = 1 Enable ADC
	 * ADIE    = 0 Disable ADC Interrupt
	 * ADATE   = 0 Disable Auto Trigger
	 * ADPS2:0 = 011 to choose ADC_Clock=F_CPU/8=1Mhz/8=125Khz --> ADC must operate in range 50-200Khz
	 */
	ADCSRA |= (1<<ADEN)| (Config_Ptr->prescaler);
    1dea:	a6 e2       	ldi	r26, 0x26	; 38
    1dec:	b0 e0       	ldi	r27, 0x00	; 0
    1dee:	e6 e2       	ldi	r30, 0x26	; 38
    1df0:	f0 e0       	ldi	r31, 0x00	; 0
    1df2:	90 81       	ld	r25, Z
    1df4:	e9 81       	ldd	r30, Y+1	; 0x01
    1df6:	fa 81       	ldd	r31, Y+2	; 0x02
    1df8:	81 81       	ldd	r24, Z+1	; 0x01
    1dfa:	89 2b       	or	r24, r25
    1dfc:	80 68       	ori	r24, 0x80	; 128
    1dfe:	8c 93       	st	X, r24
}
    1e00:	0f 90       	pop	r0
    1e02:	0f 90       	pop	r0
    1e04:	cf 91       	pop	r28
    1e06:	df 91       	pop	r29
    1e08:	08 95       	ret

00001e0a <ADC_readChannel>:

uint16 ADC_readChannel(uint8  channel_num)
{
    1e0a:	df 93       	push	r29
    1e0c:	cf 93       	push	r28
    1e0e:	0f 92       	push	r0
    1e10:	cd b7       	in	r28, 0x3d	; 61
    1e12:	de b7       	in	r29, 0x3e	; 62
    1e14:	89 83       	std	Y+1, r24	; 0x01
	channel_num &= 0x07; /* Input channel number must be from 0 --> 7 */
    1e16:	89 81       	ldd	r24, Y+1	; 0x01
    1e18:	87 70       	andi	r24, 0x07	; 7
    1e1a:	89 83       	std	Y+1, r24	; 0x01
	ADMUX &= 0xE0; /* Clear first 5 bits in the ADMUX (channel number MUX4:0 bits) before set the required channel */
    1e1c:	a7 e2       	ldi	r26, 0x27	; 39
    1e1e:	b0 e0       	ldi	r27, 0x00	; 0
    1e20:	e7 e2       	ldi	r30, 0x27	; 39
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	80 7e       	andi	r24, 0xE0	; 224
    1e28:	8c 93       	st	X, r24
	ADMUX = ADMUX | channel_num; /* Choose the correct channel by setting the channel number in MUX4:0 bits */
    1e2a:	a7 e2       	ldi	r26, 0x27	; 39
    1e2c:	b0 e0       	ldi	r27, 0x00	; 0
    1e2e:	e7 e2       	ldi	r30, 0x27	; 39
    1e30:	f0 e0       	ldi	r31, 0x00	; 0
    1e32:	90 81       	ld	r25, Z
    1e34:	89 81       	ldd	r24, Y+1	; 0x01
    1e36:	89 2b       	or	r24, r25
    1e38:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADSC); /* Start conversion write '1' to ADSC */
    1e3a:	a6 e2       	ldi	r26, 0x26	; 38
    1e3c:	b0 e0       	ldi	r27, 0x00	; 0
    1e3e:	e6 e2       	ldi	r30, 0x26	; 38
    1e40:	f0 e0       	ldi	r31, 0x00	; 0
    1e42:	80 81       	ld	r24, Z
    1e44:	80 64       	ori	r24, 0x40	; 64
    1e46:	8c 93       	st	X, r24
	while(BIT_IS_CLEAR(ADCSRA,ADIF)); /* Wait for conversion to complete, ADIF becomes '1' */
    1e48:	e6 e2       	ldi	r30, 0x26	; 38
    1e4a:	f0 e0       	ldi	r31, 0x00	; 0
    1e4c:	80 81       	ld	r24, Z
    1e4e:	88 2f       	mov	r24, r24
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	80 71       	andi	r24, 0x10	; 16
    1e54:	90 70       	andi	r25, 0x00	; 0
    1e56:	00 97       	sbiw	r24, 0x00	; 0
    1e58:	b9 f3       	breq	.-18     	; 0x1e48 <ADC_readChannel+0x3e>
	SET_BIT(ADCSRA,ADIF); /* Clear ADIF by write '1' to it :) */
    1e5a:	a6 e2       	ldi	r26, 0x26	; 38
    1e5c:	b0 e0       	ldi	r27, 0x00	; 0
    1e5e:	e6 e2       	ldi	r30, 0x26	; 38
    1e60:	f0 e0       	ldi	r31, 0x00	; 0
    1e62:	80 81       	ld	r24, Z
    1e64:	80 61       	ori	r24, 0x10	; 16
    1e66:	8c 93       	st	X, r24
	return ADC; /* Read the digital value from the data register */
    1e68:	e4 e2       	ldi	r30, 0x24	; 36
    1e6a:	f0 e0       	ldi	r31, 0x00	; 0
    1e6c:	80 81       	ld	r24, Z
    1e6e:	91 81       	ldd	r25, Z+1	; 0x01
}
    1e70:	0f 90       	pop	r0
    1e72:	cf 91       	pop	r28
    1e74:	df 91       	pop	r29
    1e76:	08 95       	ret

00001e78 <GPIO_setupPinDirection>:
 * Description :
 * Setup the direction of the required pin input/output.
 * If the input port number or pin number are not correct, The function will not handle the request.
 */
void GPIO_setupPinDirection(uint8 port_num, uint8 pin_num, GPIO_PinDirectionType direction)
{
    1e78:	df 93       	push	r29
    1e7a:	cf 93       	push	r28
    1e7c:	00 d0       	rcall	.+0      	; 0x1e7e <GPIO_setupPinDirection+0x6>
    1e7e:	00 d0       	rcall	.+0      	; 0x1e80 <GPIO_setupPinDirection+0x8>
    1e80:	0f 92       	push	r0
    1e82:	cd b7       	in	r28, 0x3d	; 61
    1e84:	de b7       	in	r29, 0x3e	; 62
    1e86:	89 83       	std	Y+1, r24	; 0x01
    1e88:	6a 83       	std	Y+2, r22	; 0x02
    1e8a:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    1e8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e8e:	88 30       	cpi	r24, 0x08	; 8
    1e90:	08 f0       	brcs	.+2      	; 0x1e94 <GPIO_setupPinDirection+0x1c>
    1e92:	d5 c0       	rjmp	.+426    	; 0x203e <GPIO_setupPinDirection+0x1c6>
    1e94:	89 81       	ldd	r24, Y+1	; 0x01
    1e96:	84 30       	cpi	r24, 0x04	; 4
    1e98:	08 f0       	brcs	.+2      	; 0x1e9c <GPIO_setupPinDirection+0x24>
    1e9a:	d1 c0       	rjmp	.+418    	; 0x203e <GPIO_setupPinDirection+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Setup the pin direction as required */
		switch(port_num)
    1e9c:	89 81       	ldd	r24, Y+1	; 0x01
    1e9e:	28 2f       	mov	r18, r24
    1ea0:	30 e0       	ldi	r19, 0x00	; 0
    1ea2:	3d 83       	std	Y+5, r19	; 0x05
    1ea4:	2c 83       	std	Y+4, r18	; 0x04
    1ea6:	8c 81       	ldd	r24, Y+4	; 0x04
    1ea8:	9d 81       	ldd	r25, Y+5	; 0x05
    1eaa:	81 30       	cpi	r24, 0x01	; 1
    1eac:	91 05       	cpc	r25, r1
    1eae:	09 f4       	brne	.+2      	; 0x1eb2 <GPIO_setupPinDirection+0x3a>
    1eb0:	43 c0       	rjmp	.+134    	; 0x1f38 <GPIO_setupPinDirection+0xc0>
    1eb2:	2c 81       	ldd	r18, Y+4	; 0x04
    1eb4:	3d 81       	ldd	r19, Y+5	; 0x05
    1eb6:	22 30       	cpi	r18, 0x02	; 2
    1eb8:	31 05       	cpc	r19, r1
    1eba:	2c f4       	brge	.+10     	; 0x1ec6 <GPIO_setupPinDirection+0x4e>
    1ebc:	8c 81       	ldd	r24, Y+4	; 0x04
    1ebe:	9d 81       	ldd	r25, Y+5	; 0x05
    1ec0:	00 97       	sbiw	r24, 0x00	; 0
    1ec2:	71 f0       	breq	.+28     	; 0x1ee0 <GPIO_setupPinDirection+0x68>
    1ec4:	bc c0       	rjmp	.+376    	; 0x203e <GPIO_setupPinDirection+0x1c6>
    1ec6:	2c 81       	ldd	r18, Y+4	; 0x04
    1ec8:	3d 81       	ldd	r19, Y+5	; 0x05
    1eca:	22 30       	cpi	r18, 0x02	; 2
    1ecc:	31 05       	cpc	r19, r1
    1ece:	09 f4       	brne	.+2      	; 0x1ed2 <GPIO_setupPinDirection+0x5a>
    1ed0:	5f c0       	rjmp	.+190    	; 0x1f90 <GPIO_setupPinDirection+0x118>
    1ed2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ed4:	9d 81       	ldd	r25, Y+5	; 0x05
    1ed6:	83 30       	cpi	r24, 0x03	; 3
    1ed8:	91 05       	cpc	r25, r1
    1eda:	09 f4       	brne	.+2      	; 0x1ede <GPIO_setupPinDirection+0x66>
    1edc:	85 c0       	rjmp	.+266    	; 0x1fe8 <GPIO_setupPinDirection+0x170>
    1ede:	af c0       	rjmp	.+350    	; 0x203e <GPIO_setupPinDirection+0x1c6>
		{
		case PORTA_ID:
			if(direction == PIN_OUTPUT)
    1ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee2:	81 30       	cpi	r24, 0x01	; 1
    1ee4:	a1 f4       	brne	.+40     	; 0x1f0e <GPIO_setupPinDirection+0x96>
			{
				SET_BIT(DDRA,pin_num);
    1ee6:	aa e3       	ldi	r26, 0x3A	; 58
    1ee8:	b0 e0       	ldi	r27, 0x00	; 0
    1eea:	ea e3       	ldi	r30, 0x3A	; 58
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	80 81       	ld	r24, Z
    1ef0:	48 2f       	mov	r20, r24
    1ef2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef4:	28 2f       	mov	r18, r24
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	02 2e       	mov	r0, r18
    1efe:	02 c0       	rjmp	.+4      	; 0x1f04 <GPIO_setupPinDirection+0x8c>
    1f00:	88 0f       	add	r24, r24
    1f02:	99 1f       	adc	r25, r25
    1f04:	0a 94       	dec	r0
    1f06:	e2 f7       	brpl	.-8      	; 0x1f00 <GPIO_setupPinDirection+0x88>
    1f08:	84 2b       	or	r24, r20
    1f0a:	8c 93       	st	X, r24
    1f0c:	98 c0       	rjmp	.+304    	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRA,pin_num);
    1f0e:	aa e3       	ldi	r26, 0x3A	; 58
    1f10:	b0 e0       	ldi	r27, 0x00	; 0
    1f12:	ea e3       	ldi	r30, 0x3A	; 58
    1f14:	f0 e0       	ldi	r31, 0x00	; 0
    1f16:	80 81       	ld	r24, Z
    1f18:	48 2f       	mov	r20, r24
    1f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f1c:	28 2f       	mov	r18, r24
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	81 e0       	ldi	r24, 0x01	; 1
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	02 2e       	mov	r0, r18
    1f26:	02 c0       	rjmp	.+4      	; 0x1f2c <GPIO_setupPinDirection+0xb4>
    1f28:	88 0f       	add	r24, r24
    1f2a:	99 1f       	adc	r25, r25
    1f2c:	0a 94       	dec	r0
    1f2e:	e2 f7       	brpl	.-8      	; 0x1f28 <GPIO_setupPinDirection+0xb0>
    1f30:	80 95       	com	r24
    1f32:	84 23       	and	r24, r20
    1f34:	8c 93       	st	X, r24
    1f36:	83 c0       	rjmp	.+262    	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTB_ID:
			if(direction == PIN_OUTPUT)
    1f38:	8b 81       	ldd	r24, Y+3	; 0x03
    1f3a:	81 30       	cpi	r24, 0x01	; 1
    1f3c:	a1 f4       	brne	.+40     	; 0x1f66 <GPIO_setupPinDirection+0xee>
			{
				SET_BIT(DDRB,pin_num);
    1f3e:	a7 e3       	ldi	r26, 0x37	; 55
    1f40:	b0 e0       	ldi	r27, 0x00	; 0
    1f42:	e7 e3       	ldi	r30, 0x37	; 55
    1f44:	f0 e0       	ldi	r31, 0x00	; 0
    1f46:	80 81       	ld	r24, Z
    1f48:	48 2f       	mov	r20, r24
    1f4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f4c:	28 2f       	mov	r18, r24
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	81 e0       	ldi	r24, 0x01	; 1
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	02 2e       	mov	r0, r18
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <GPIO_setupPinDirection+0xe4>
    1f58:	88 0f       	add	r24, r24
    1f5a:	99 1f       	adc	r25, r25
    1f5c:	0a 94       	dec	r0
    1f5e:	e2 f7       	brpl	.-8      	; 0x1f58 <GPIO_setupPinDirection+0xe0>
    1f60:	84 2b       	or	r24, r20
    1f62:	8c 93       	st	X, r24
    1f64:	6c c0       	rjmp	.+216    	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRB,pin_num);
    1f66:	a7 e3       	ldi	r26, 0x37	; 55
    1f68:	b0 e0       	ldi	r27, 0x00	; 0
    1f6a:	e7 e3       	ldi	r30, 0x37	; 55
    1f6c:	f0 e0       	ldi	r31, 0x00	; 0
    1f6e:	80 81       	ld	r24, Z
    1f70:	48 2f       	mov	r20, r24
    1f72:	8a 81       	ldd	r24, Y+2	; 0x02
    1f74:	28 2f       	mov	r18, r24
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	02 2e       	mov	r0, r18
    1f7e:	02 c0       	rjmp	.+4      	; 0x1f84 <GPIO_setupPinDirection+0x10c>
    1f80:	88 0f       	add	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	0a 94       	dec	r0
    1f86:	e2 f7       	brpl	.-8      	; 0x1f80 <GPIO_setupPinDirection+0x108>
    1f88:	80 95       	com	r24
    1f8a:	84 23       	and	r24, r20
    1f8c:	8c 93       	st	X, r24
    1f8e:	57 c0       	rjmp	.+174    	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTC_ID:
			if(direction == PIN_OUTPUT)
    1f90:	8b 81       	ldd	r24, Y+3	; 0x03
    1f92:	81 30       	cpi	r24, 0x01	; 1
    1f94:	a1 f4       	brne	.+40     	; 0x1fbe <GPIO_setupPinDirection+0x146>
			{
				SET_BIT(DDRC,pin_num);
    1f96:	a4 e3       	ldi	r26, 0x34	; 52
    1f98:	b0 e0       	ldi	r27, 0x00	; 0
    1f9a:	e4 e3       	ldi	r30, 0x34	; 52
    1f9c:	f0 e0       	ldi	r31, 0x00	; 0
    1f9e:	80 81       	ld	r24, Z
    1fa0:	48 2f       	mov	r20, r24
    1fa2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa4:	28 2f       	mov	r18, r24
    1fa6:	30 e0       	ldi	r19, 0x00	; 0
    1fa8:	81 e0       	ldi	r24, 0x01	; 1
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	02 2e       	mov	r0, r18
    1fae:	02 c0       	rjmp	.+4      	; 0x1fb4 <GPIO_setupPinDirection+0x13c>
    1fb0:	88 0f       	add	r24, r24
    1fb2:	99 1f       	adc	r25, r25
    1fb4:	0a 94       	dec	r0
    1fb6:	e2 f7       	brpl	.-8      	; 0x1fb0 <GPIO_setupPinDirection+0x138>
    1fb8:	84 2b       	or	r24, r20
    1fba:	8c 93       	st	X, r24
    1fbc:	40 c0       	rjmp	.+128    	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRC,pin_num);
    1fbe:	a4 e3       	ldi	r26, 0x34	; 52
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	e4 e3       	ldi	r30, 0x34	; 52
    1fc4:	f0 e0       	ldi	r31, 0x00	; 0
    1fc6:	80 81       	ld	r24, Z
    1fc8:	48 2f       	mov	r20, r24
    1fca:	8a 81       	ldd	r24, Y+2	; 0x02
    1fcc:	28 2f       	mov	r18, r24
    1fce:	30 e0       	ldi	r19, 0x00	; 0
    1fd0:	81 e0       	ldi	r24, 0x01	; 1
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	02 2e       	mov	r0, r18
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <GPIO_setupPinDirection+0x164>
    1fd8:	88 0f       	add	r24, r24
    1fda:	99 1f       	adc	r25, r25
    1fdc:	0a 94       	dec	r0
    1fde:	e2 f7       	brpl	.-8      	; 0x1fd8 <GPIO_setupPinDirection+0x160>
    1fe0:	80 95       	com	r24
    1fe2:	84 23       	and	r24, r20
    1fe4:	8c 93       	st	X, r24
    1fe6:	2b c0       	rjmp	.+86     	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTD_ID:
			if(direction == PIN_OUTPUT)
    1fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    1fea:	81 30       	cpi	r24, 0x01	; 1
    1fec:	a1 f4       	brne	.+40     	; 0x2016 <GPIO_setupPinDirection+0x19e>
			{
				SET_BIT(DDRD,pin_num);
    1fee:	a1 e3       	ldi	r26, 0x31	; 49
    1ff0:	b0 e0       	ldi	r27, 0x00	; 0
    1ff2:	e1 e3       	ldi	r30, 0x31	; 49
    1ff4:	f0 e0       	ldi	r31, 0x00	; 0
    1ff6:	80 81       	ld	r24, Z
    1ff8:	48 2f       	mov	r20, r24
    1ffa:	8a 81       	ldd	r24, Y+2	; 0x02
    1ffc:	28 2f       	mov	r18, r24
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	02 2e       	mov	r0, r18
    2006:	02 c0       	rjmp	.+4      	; 0x200c <GPIO_setupPinDirection+0x194>
    2008:	88 0f       	add	r24, r24
    200a:	99 1f       	adc	r25, r25
    200c:	0a 94       	dec	r0
    200e:	e2 f7       	brpl	.-8      	; 0x2008 <GPIO_setupPinDirection+0x190>
    2010:	84 2b       	or	r24, r20
    2012:	8c 93       	st	X, r24
    2014:	14 c0       	rjmp	.+40     	; 0x203e <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRD,pin_num);
    2016:	a1 e3       	ldi	r26, 0x31	; 49
    2018:	b0 e0       	ldi	r27, 0x00	; 0
    201a:	e1 e3       	ldi	r30, 0x31	; 49
    201c:	f0 e0       	ldi	r31, 0x00	; 0
    201e:	80 81       	ld	r24, Z
    2020:	48 2f       	mov	r20, r24
    2022:	8a 81       	ldd	r24, Y+2	; 0x02
    2024:	28 2f       	mov	r18, r24
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	02 2e       	mov	r0, r18
    202e:	02 c0       	rjmp	.+4      	; 0x2034 <GPIO_setupPinDirection+0x1bc>
    2030:	88 0f       	add	r24, r24
    2032:	99 1f       	adc	r25, r25
    2034:	0a 94       	dec	r0
    2036:	e2 f7       	brpl	.-8      	; 0x2030 <GPIO_setupPinDirection+0x1b8>
    2038:	80 95       	com	r24
    203a:	84 23       	and	r24, r20
    203c:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    203e:	0f 90       	pop	r0
    2040:	0f 90       	pop	r0
    2042:	0f 90       	pop	r0
    2044:	0f 90       	pop	r0
    2046:	0f 90       	pop	r0
    2048:	cf 91       	pop	r28
    204a:	df 91       	pop	r29
    204c:	08 95       	ret

0000204e <GPIO_writePin>:
 * Write the value Logic High or Logic Low on the required pin.
 * If the input port number or pin number are not correct, The function will not handle the request.
 * If the pin is input, this function will enable/disable the internal pull-up resistor.
 */
void GPIO_writePin(uint8 port_num, uint8 pin_num, uint8 value)
{
    204e:	df 93       	push	r29
    2050:	cf 93       	push	r28
    2052:	00 d0       	rcall	.+0      	; 0x2054 <GPIO_writePin+0x6>
    2054:	00 d0       	rcall	.+0      	; 0x2056 <GPIO_writePin+0x8>
    2056:	0f 92       	push	r0
    2058:	cd b7       	in	r28, 0x3d	; 61
    205a:	de b7       	in	r29, 0x3e	; 62
    205c:	89 83       	std	Y+1, r24	; 0x01
    205e:	6a 83       	std	Y+2, r22	; 0x02
    2060:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    2062:	8a 81       	ldd	r24, Y+2	; 0x02
    2064:	88 30       	cpi	r24, 0x08	; 8
    2066:	08 f0       	brcs	.+2      	; 0x206a <GPIO_writePin+0x1c>
    2068:	d5 c0       	rjmp	.+426    	; 0x2214 <GPIO_writePin+0x1c6>
    206a:	89 81       	ldd	r24, Y+1	; 0x01
    206c:	84 30       	cpi	r24, 0x04	; 4
    206e:	08 f0       	brcs	.+2      	; 0x2072 <GPIO_writePin+0x24>
    2070:	d1 c0       	rjmp	.+418    	; 0x2214 <GPIO_writePin+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Write the pin value as required */
		switch(port_num)
    2072:	89 81       	ldd	r24, Y+1	; 0x01
    2074:	28 2f       	mov	r18, r24
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	3d 83       	std	Y+5, r19	; 0x05
    207a:	2c 83       	std	Y+4, r18	; 0x04
    207c:	8c 81       	ldd	r24, Y+4	; 0x04
    207e:	9d 81       	ldd	r25, Y+5	; 0x05
    2080:	81 30       	cpi	r24, 0x01	; 1
    2082:	91 05       	cpc	r25, r1
    2084:	09 f4       	brne	.+2      	; 0x2088 <GPIO_writePin+0x3a>
    2086:	43 c0       	rjmp	.+134    	; 0x210e <GPIO_writePin+0xc0>
    2088:	2c 81       	ldd	r18, Y+4	; 0x04
    208a:	3d 81       	ldd	r19, Y+5	; 0x05
    208c:	22 30       	cpi	r18, 0x02	; 2
    208e:	31 05       	cpc	r19, r1
    2090:	2c f4       	brge	.+10     	; 0x209c <GPIO_writePin+0x4e>
    2092:	8c 81       	ldd	r24, Y+4	; 0x04
    2094:	9d 81       	ldd	r25, Y+5	; 0x05
    2096:	00 97       	sbiw	r24, 0x00	; 0
    2098:	71 f0       	breq	.+28     	; 0x20b6 <GPIO_writePin+0x68>
    209a:	bc c0       	rjmp	.+376    	; 0x2214 <GPIO_writePin+0x1c6>
    209c:	2c 81       	ldd	r18, Y+4	; 0x04
    209e:	3d 81       	ldd	r19, Y+5	; 0x05
    20a0:	22 30       	cpi	r18, 0x02	; 2
    20a2:	31 05       	cpc	r19, r1
    20a4:	09 f4       	brne	.+2      	; 0x20a8 <GPIO_writePin+0x5a>
    20a6:	5f c0       	rjmp	.+190    	; 0x2166 <GPIO_writePin+0x118>
    20a8:	8c 81       	ldd	r24, Y+4	; 0x04
    20aa:	9d 81       	ldd	r25, Y+5	; 0x05
    20ac:	83 30       	cpi	r24, 0x03	; 3
    20ae:	91 05       	cpc	r25, r1
    20b0:	09 f4       	brne	.+2      	; 0x20b4 <GPIO_writePin+0x66>
    20b2:	85 c0       	rjmp	.+266    	; 0x21be <GPIO_writePin+0x170>
    20b4:	af c0       	rjmp	.+350    	; 0x2214 <GPIO_writePin+0x1c6>
		{
		case PORTA_ID:
			if(value == LOGIC_HIGH)
    20b6:	8b 81       	ldd	r24, Y+3	; 0x03
    20b8:	81 30       	cpi	r24, 0x01	; 1
    20ba:	a1 f4       	brne	.+40     	; 0x20e4 <GPIO_writePin+0x96>
			{
				SET_BIT(PORTA,pin_num);
    20bc:	ab e3       	ldi	r26, 0x3B	; 59
    20be:	b0 e0       	ldi	r27, 0x00	; 0
    20c0:	eb e3       	ldi	r30, 0x3B	; 59
    20c2:	f0 e0       	ldi	r31, 0x00	; 0
    20c4:	80 81       	ld	r24, Z
    20c6:	48 2f       	mov	r20, r24
    20c8:	8a 81       	ldd	r24, Y+2	; 0x02
    20ca:	28 2f       	mov	r18, r24
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	02 2e       	mov	r0, r18
    20d4:	02 c0       	rjmp	.+4      	; 0x20da <GPIO_writePin+0x8c>
    20d6:	88 0f       	add	r24, r24
    20d8:	99 1f       	adc	r25, r25
    20da:	0a 94       	dec	r0
    20dc:	e2 f7       	brpl	.-8      	; 0x20d6 <GPIO_writePin+0x88>
    20de:	84 2b       	or	r24, r20
    20e0:	8c 93       	st	X, r24
    20e2:	98 c0       	rjmp	.+304    	; 0x2214 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTA,pin_num);
    20e4:	ab e3       	ldi	r26, 0x3B	; 59
    20e6:	b0 e0       	ldi	r27, 0x00	; 0
    20e8:	eb e3       	ldi	r30, 0x3B	; 59
    20ea:	f0 e0       	ldi	r31, 0x00	; 0
    20ec:	80 81       	ld	r24, Z
    20ee:	48 2f       	mov	r20, r24
    20f0:	8a 81       	ldd	r24, Y+2	; 0x02
    20f2:	28 2f       	mov	r18, r24
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	02 2e       	mov	r0, r18
    20fc:	02 c0       	rjmp	.+4      	; 0x2102 <GPIO_writePin+0xb4>
    20fe:	88 0f       	add	r24, r24
    2100:	99 1f       	adc	r25, r25
    2102:	0a 94       	dec	r0
    2104:	e2 f7       	brpl	.-8      	; 0x20fe <GPIO_writePin+0xb0>
    2106:	80 95       	com	r24
    2108:	84 23       	and	r24, r20
    210a:	8c 93       	st	X, r24
    210c:	83 c0       	rjmp	.+262    	; 0x2214 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTB_ID:
			if(value == LOGIC_HIGH)
    210e:	8b 81       	ldd	r24, Y+3	; 0x03
    2110:	81 30       	cpi	r24, 0x01	; 1
    2112:	a1 f4       	brne	.+40     	; 0x213c <GPIO_writePin+0xee>
			{
				SET_BIT(PORTB,pin_num);
    2114:	a8 e3       	ldi	r26, 0x38	; 56
    2116:	b0 e0       	ldi	r27, 0x00	; 0
    2118:	e8 e3       	ldi	r30, 0x38	; 56
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	80 81       	ld	r24, Z
    211e:	48 2f       	mov	r20, r24
    2120:	8a 81       	ldd	r24, Y+2	; 0x02
    2122:	28 2f       	mov	r18, r24
    2124:	30 e0       	ldi	r19, 0x00	; 0
    2126:	81 e0       	ldi	r24, 0x01	; 1
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	02 2e       	mov	r0, r18
    212c:	02 c0       	rjmp	.+4      	; 0x2132 <GPIO_writePin+0xe4>
    212e:	88 0f       	add	r24, r24
    2130:	99 1f       	adc	r25, r25
    2132:	0a 94       	dec	r0
    2134:	e2 f7       	brpl	.-8      	; 0x212e <GPIO_writePin+0xe0>
    2136:	84 2b       	or	r24, r20
    2138:	8c 93       	st	X, r24
    213a:	6c c0       	rjmp	.+216    	; 0x2214 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTB,pin_num);
    213c:	a8 e3       	ldi	r26, 0x38	; 56
    213e:	b0 e0       	ldi	r27, 0x00	; 0
    2140:	e8 e3       	ldi	r30, 0x38	; 56
    2142:	f0 e0       	ldi	r31, 0x00	; 0
    2144:	80 81       	ld	r24, Z
    2146:	48 2f       	mov	r20, r24
    2148:	8a 81       	ldd	r24, Y+2	; 0x02
    214a:	28 2f       	mov	r18, r24
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	81 e0       	ldi	r24, 0x01	; 1
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	02 2e       	mov	r0, r18
    2154:	02 c0       	rjmp	.+4      	; 0x215a <GPIO_writePin+0x10c>
    2156:	88 0f       	add	r24, r24
    2158:	99 1f       	adc	r25, r25
    215a:	0a 94       	dec	r0
    215c:	e2 f7       	brpl	.-8      	; 0x2156 <GPIO_writePin+0x108>
    215e:	80 95       	com	r24
    2160:	84 23       	and	r24, r20
    2162:	8c 93       	st	X, r24
    2164:	57 c0       	rjmp	.+174    	; 0x2214 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTC_ID:
			if(value == LOGIC_HIGH)
    2166:	8b 81       	ldd	r24, Y+3	; 0x03
    2168:	81 30       	cpi	r24, 0x01	; 1
    216a:	a1 f4       	brne	.+40     	; 0x2194 <GPIO_writePin+0x146>
			{
				SET_BIT(PORTC,pin_num);
    216c:	a5 e3       	ldi	r26, 0x35	; 53
    216e:	b0 e0       	ldi	r27, 0x00	; 0
    2170:	e5 e3       	ldi	r30, 0x35	; 53
    2172:	f0 e0       	ldi	r31, 0x00	; 0
    2174:	80 81       	ld	r24, Z
    2176:	48 2f       	mov	r20, r24
    2178:	8a 81       	ldd	r24, Y+2	; 0x02
    217a:	28 2f       	mov	r18, r24
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	81 e0       	ldi	r24, 0x01	; 1
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	02 2e       	mov	r0, r18
    2184:	02 c0       	rjmp	.+4      	; 0x218a <GPIO_writePin+0x13c>
    2186:	88 0f       	add	r24, r24
    2188:	99 1f       	adc	r25, r25
    218a:	0a 94       	dec	r0
    218c:	e2 f7       	brpl	.-8      	; 0x2186 <GPIO_writePin+0x138>
    218e:	84 2b       	or	r24, r20
    2190:	8c 93       	st	X, r24
    2192:	40 c0       	rjmp	.+128    	; 0x2214 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTC,pin_num);
    2194:	a5 e3       	ldi	r26, 0x35	; 53
    2196:	b0 e0       	ldi	r27, 0x00	; 0
    2198:	e5 e3       	ldi	r30, 0x35	; 53
    219a:	f0 e0       	ldi	r31, 0x00	; 0
    219c:	80 81       	ld	r24, Z
    219e:	48 2f       	mov	r20, r24
    21a0:	8a 81       	ldd	r24, Y+2	; 0x02
    21a2:	28 2f       	mov	r18, r24
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	81 e0       	ldi	r24, 0x01	; 1
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	02 2e       	mov	r0, r18
    21ac:	02 c0       	rjmp	.+4      	; 0x21b2 <GPIO_writePin+0x164>
    21ae:	88 0f       	add	r24, r24
    21b0:	99 1f       	adc	r25, r25
    21b2:	0a 94       	dec	r0
    21b4:	e2 f7       	brpl	.-8      	; 0x21ae <GPIO_writePin+0x160>
    21b6:	80 95       	com	r24
    21b8:	84 23       	and	r24, r20
    21ba:	8c 93       	st	X, r24
    21bc:	2b c0       	rjmp	.+86     	; 0x2214 <GPIO_writePin+0x1c6>
			}
			break;
		case PORTD_ID:
			if(value == LOGIC_HIGH)
    21be:	8b 81       	ldd	r24, Y+3	; 0x03
    21c0:	81 30       	cpi	r24, 0x01	; 1
    21c2:	a1 f4       	brne	.+40     	; 0x21ec <GPIO_writePin+0x19e>
			{
				SET_BIT(PORTD,pin_num);
    21c4:	a2 e3       	ldi	r26, 0x32	; 50
    21c6:	b0 e0       	ldi	r27, 0x00	; 0
    21c8:	e2 e3       	ldi	r30, 0x32	; 50
    21ca:	f0 e0       	ldi	r31, 0x00	; 0
    21cc:	80 81       	ld	r24, Z
    21ce:	48 2f       	mov	r20, r24
    21d0:	8a 81       	ldd	r24, Y+2	; 0x02
    21d2:	28 2f       	mov	r18, r24
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	02 2e       	mov	r0, r18
    21dc:	02 c0       	rjmp	.+4      	; 0x21e2 <GPIO_writePin+0x194>
    21de:	88 0f       	add	r24, r24
    21e0:	99 1f       	adc	r25, r25
    21e2:	0a 94       	dec	r0
    21e4:	e2 f7       	brpl	.-8      	; 0x21de <GPIO_writePin+0x190>
    21e6:	84 2b       	or	r24, r20
    21e8:	8c 93       	st	X, r24
    21ea:	14 c0       	rjmp	.+40     	; 0x2214 <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTD,pin_num);
    21ec:	a2 e3       	ldi	r26, 0x32	; 50
    21ee:	b0 e0       	ldi	r27, 0x00	; 0
    21f0:	e2 e3       	ldi	r30, 0x32	; 50
    21f2:	f0 e0       	ldi	r31, 0x00	; 0
    21f4:	80 81       	ld	r24, Z
    21f6:	48 2f       	mov	r20, r24
    21f8:	8a 81       	ldd	r24, Y+2	; 0x02
    21fa:	28 2f       	mov	r18, r24
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	81 e0       	ldi	r24, 0x01	; 1
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	02 2e       	mov	r0, r18
    2204:	02 c0       	rjmp	.+4      	; 0x220a <GPIO_writePin+0x1bc>
    2206:	88 0f       	add	r24, r24
    2208:	99 1f       	adc	r25, r25
    220a:	0a 94       	dec	r0
    220c:	e2 f7       	brpl	.-8      	; 0x2206 <GPIO_writePin+0x1b8>
    220e:	80 95       	com	r24
    2210:	84 23       	and	r24, r20
    2212:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    2214:	0f 90       	pop	r0
    2216:	0f 90       	pop	r0
    2218:	0f 90       	pop	r0
    221a:	0f 90       	pop	r0
    221c:	0f 90       	pop	r0
    221e:	cf 91       	pop	r28
    2220:	df 91       	pop	r29
    2222:	08 95       	ret

00002224 <GPIO_readPin>:
 * Description :
 * Read and return the value for the required pin, it should be Logic High or Logic Low.
 * If the input port number or pin number are not correct, The function will return Logic Low.
 */
uint8 GPIO_readPin(uint8 port_num, uint8 pin_num)
{
    2224:	df 93       	push	r29
    2226:	cf 93       	push	r28
    2228:	00 d0       	rcall	.+0      	; 0x222a <GPIO_readPin+0x6>
    222a:	00 d0       	rcall	.+0      	; 0x222c <GPIO_readPin+0x8>
    222c:	0f 92       	push	r0
    222e:	cd b7       	in	r28, 0x3d	; 61
    2230:	de b7       	in	r29, 0x3e	; 62
    2232:	8a 83       	std	Y+2, r24	; 0x02
    2234:	6b 83       	std	Y+3, r22	; 0x03
	uint8 pin_value = LOGIC_LOW;
    2236:	19 82       	std	Y+1, r1	; 0x01
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    2238:	8b 81       	ldd	r24, Y+3	; 0x03
    223a:	88 30       	cpi	r24, 0x08	; 8
    223c:	08 f0       	brcs	.+2      	; 0x2240 <GPIO_readPin+0x1c>
    223e:	84 c0       	rjmp	.+264    	; 0x2348 <GPIO_readPin+0x124>
    2240:	8a 81       	ldd	r24, Y+2	; 0x02
    2242:	84 30       	cpi	r24, 0x04	; 4
    2244:	08 f0       	brcs	.+2      	; 0x2248 <GPIO_readPin+0x24>
    2246:	80 c0       	rjmp	.+256    	; 0x2348 <GPIO_readPin+0x124>
		/* Do Nothing */
	}
	else
	{
		/* Read the pin value as required */
		switch(port_num)
    2248:	8a 81       	ldd	r24, Y+2	; 0x02
    224a:	28 2f       	mov	r18, r24
    224c:	30 e0       	ldi	r19, 0x00	; 0
    224e:	3d 83       	std	Y+5, r19	; 0x05
    2250:	2c 83       	std	Y+4, r18	; 0x04
    2252:	4c 81       	ldd	r20, Y+4	; 0x04
    2254:	5d 81       	ldd	r21, Y+5	; 0x05
    2256:	41 30       	cpi	r20, 0x01	; 1
    2258:	51 05       	cpc	r21, r1
    225a:	79 f1       	breq	.+94     	; 0x22ba <GPIO_readPin+0x96>
    225c:	8c 81       	ldd	r24, Y+4	; 0x04
    225e:	9d 81       	ldd	r25, Y+5	; 0x05
    2260:	82 30       	cpi	r24, 0x02	; 2
    2262:	91 05       	cpc	r25, r1
    2264:	34 f4       	brge	.+12     	; 0x2272 <GPIO_readPin+0x4e>
    2266:	2c 81       	ldd	r18, Y+4	; 0x04
    2268:	3d 81       	ldd	r19, Y+5	; 0x05
    226a:	21 15       	cp	r18, r1
    226c:	31 05       	cpc	r19, r1
    226e:	69 f0       	breq	.+26     	; 0x228a <GPIO_readPin+0x66>
    2270:	6b c0       	rjmp	.+214    	; 0x2348 <GPIO_readPin+0x124>
    2272:	4c 81       	ldd	r20, Y+4	; 0x04
    2274:	5d 81       	ldd	r21, Y+5	; 0x05
    2276:	42 30       	cpi	r20, 0x02	; 2
    2278:	51 05       	cpc	r21, r1
    227a:	b9 f1       	breq	.+110    	; 0x22ea <GPIO_readPin+0xc6>
    227c:	8c 81       	ldd	r24, Y+4	; 0x04
    227e:	9d 81       	ldd	r25, Y+5	; 0x05
    2280:	83 30       	cpi	r24, 0x03	; 3
    2282:	91 05       	cpc	r25, r1
    2284:	09 f4       	brne	.+2      	; 0x2288 <GPIO_readPin+0x64>
    2286:	49 c0       	rjmp	.+146    	; 0x231a <GPIO_readPin+0xf6>
    2288:	5f c0       	rjmp	.+190    	; 0x2348 <GPIO_readPin+0x124>
		{
		case PORTA_ID:
			if(BIT_IS_SET(PINA,pin_num))
    228a:	e9 e3       	ldi	r30, 0x39	; 57
    228c:	f0 e0       	ldi	r31, 0x00	; 0
    228e:	80 81       	ld	r24, Z
    2290:	28 2f       	mov	r18, r24
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	8b 81       	ldd	r24, Y+3	; 0x03
    2296:	88 2f       	mov	r24, r24
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	a9 01       	movw	r20, r18
    229c:	02 c0       	rjmp	.+4      	; 0x22a2 <GPIO_readPin+0x7e>
    229e:	55 95       	asr	r21
    22a0:	47 95       	ror	r20
    22a2:	8a 95       	dec	r24
    22a4:	e2 f7       	brpl	.-8      	; 0x229e <GPIO_readPin+0x7a>
    22a6:	ca 01       	movw	r24, r20
    22a8:	81 70       	andi	r24, 0x01	; 1
    22aa:	90 70       	andi	r25, 0x00	; 0
    22ac:	88 23       	and	r24, r24
    22ae:	19 f0       	breq	.+6      	; 0x22b6 <GPIO_readPin+0x92>
			{
				pin_value = LOGIC_HIGH;
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	89 83       	std	Y+1, r24	; 0x01
    22b4:	49 c0       	rjmp	.+146    	; 0x2348 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    22b6:	19 82       	std	Y+1, r1	; 0x01
    22b8:	47 c0       	rjmp	.+142    	; 0x2348 <GPIO_readPin+0x124>
			}
			break;
		case PORTB_ID:
			if(BIT_IS_SET(PINB,pin_num))
    22ba:	e6 e3       	ldi	r30, 0x36	; 54
    22bc:	f0 e0       	ldi	r31, 0x00	; 0
    22be:	80 81       	ld	r24, Z
    22c0:	28 2f       	mov	r18, r24
    22c2:	30 e0       	ldi	r19, 0x00	; 0
    22c4:	8b 81       	ldd	r24, Y+3	; 0x03
    22c6:	88 2f       	mov	r24, r24
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	a9 01       	movw	r20, r18
    22cc:	02 c0       	rjmp	.+4      	; 0x22d2 <GPIO_readPin+0xae>
    22ce:	55 95       	asr	r21
    22d0:	47 95       	ror	r20
    22d2:	8a 95       	dec	r24
    22d4:	e2 f7       	brpl	.-8      	; 0x22ce <GPIO_readPin+0xaa>
    22d6:	ca 01       	movw	r24, r20
    22d8:	81 70       	andi	r24, 0x01	; 1
    22da:	90 70       	andi	r25, 0x00	; 0
    22dc:	88 23       	and	r24, r24
    22de:	19 f0       	breq	.+6      	; 0x22e6 <GPIO_readPin+0xc2>
			{
				pin_value = LOGIC_HIGH;
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	89 83       	std	Y+1, r24	; 0x01
    22e4:	31 c0       	rjmp	.+98     	; 0x2348 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    22e6:	19 82       	std	Y+1, r1	; 0x01
    22e8:	2f c0       	rjmp	.+94     	; 0x2348 <GPIO_readPin+0x124>
			}
			break;
		case PORTC_ID:
			if(BIT_IS_SET(PINC,pin_num))
    22ea:	e3 e3       	ldi	r30, 0x33	; 51
    22ec:	f0 e0       	ldi	r31, 0x00	; 0
    22ee:	80 81       	ld	r24, Z
    22f0:	28 2f       	mov	r18, r24
    22f2:	30 e0       	ldi	r19, 0x00	; 0
    22f4:	8b 81       	ldd	r24, Y+3	; 0x03
    22f6:	88 2f       	mov	r24, r24
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	a9 01       	movw	r20, r18
    22fc:	02 c0       	rjmp	.+4      	; 0x2302 <GPIO_readPin+0xde>
    22fe:	55 95       	asr	r21
    2300:	47 95       	ror	r20
    2302:	8a 95       	dec	r24
    2304:	e2 f7       	brpl	.-8      	; 0x22fe <GPIO_readPin+0xda>
    2306:	ca 01       	movw	r24, r20
    2308:	81 70       	andi	r24, 0x01	; 1
    230a:	90 70       	andi	r25, 0x00	; 0
    230c:	88 23       	and	r24, r24
    230e:	19 f0       	breq	.+6      	; 0x2316 <GPIO_readPin+0xf2>
			{
				pin_value = LOGIC_HIGH;
    2310:	81 e0       	ldi	r24, 0x01	; 1
    2312:	89 83       	std	Y+1, r24	; 0x01
    2314:	19 c0       	rjmp	.+50     	; 0x2348 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    2316:	19 82       	std	Y+1, r1	; 0x01
    2318:	17 c0       	rjmp	.+46     	; 0x2348 <GPIO_readPin+0x124>
			}
			break;
		case PORTD_ID:
			if(BIT_IS_SET(PIND,pin_num))
    231a:	e0 e3       	ldi	r30, 0x30	; 48
    231c:	f0 e0       	ldi	r31, 0x00	; 0
    231e:	80 81       	ld	r24, Z
    2320:	28 2f       	mov	r18, r24
    2322:	30 e0       	ldi	r19, 0x00	; 0
    2324:	8b 81       	ldd	r24, Y+3	; 0x03
    2326:	88 2f       	mov	r24, r24
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	a9 01       	movw	r20, r18
    232c:	02 c0       	rjmp	.+4      	; 0x2332 <GPIO_readPin+0x10e>
    232e:	55 95       	asr	r21
    2330:	47 95       	ror	r20
    2332:	8a 95       	dec	r24
    2334:	e2 f7       	brpl	.-8      	; 0x232e <GPIO_readPin+0x10a>
    2336:	ca 01       	movw	r24, r20
    2338:	81 70       	andi	r24, 0x01	; 1
    233a:	90 70       	andi	r25, 0x00	; 0
    233c:	88 23       	and	r24, r24
    233e:	19 f0       	breq	.+6      	; 0x2346 <GPIO_readPin+0x122>
			{
				pin_value = LOGIC_HIGH;
    2340:	81 e0       	ldi	r24, 0x01	; 1
    2342:	89 83       	std	Y+1, r24	; 0x01
    2344:	01 c0       	rjmp	.+2      	; 0x2348 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    2346:	19 82       	std	Y+1, r1	; 0x01
			}
			break;
		}
	}

	return pin_value;
    2348:	89 81       	ldd	r24, Y+1	; 0x01
}
    234a:	0f 90       	pop	r0
    234c:	0f 90       	pop	r0
    234e:	0f 90       	pop	r0
    2350:	0f 90       	pop	r0
    2352:	0f 90       	pop	r0
    2354:	cf 91       	pop	r28
    2356:	df 91       	pop	r29
    2358:	08 95       	ret

0000235a <GPIO_setupPortDirection>:
 * If the direction value is PORT_INPUT all pins in this port should be input pins.
 * If the direction value is PORT_OUTPUT all pins in this port should be output pins.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_setupPortDirection(uint8 port_num, GPIO_PortDirectionType direction)
{
    235a:	df 93       	push	r29
    235c:	cf 93       	push	r28
    235e:	00 d0       	rcall	.+0      	; 0x2360 <GPIO_setupPortDirection+0x6>
    2360:	00 d0       	rcall	.+0      	; 0x2362 <GPIO_setupPortDirection+0x8>
    2362:	cd b7       	in	r28, 0x3d	; 61
    2364:	de b7       	in	r29, 0x3e	; 62
    2366:	89 83       	std	Y+1, r24	; 0x01
    2368:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    236a:	89 81       	ldd	r24, Y+1	; 0x01
    236c:	84 30       	cpi	r24, 0x04	; 4
    236e:	90 f5       	brcc	.+100    	; 0x23d4 <GPIO_setupPortDirection+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Setup the port direction as required */
		switch(port_num)
    2370:	89 81       	ldd	r24, Y+1	; 0x01
    2372:	28 2f       	mov	r18, r24
    2374:	30 e0       	ldi	r19, 0x00	; 0
    2376:	3c 83       	std	Y+4, r19	; 0x04
    2378:	2b 83       	std	Y+3, r18	; 0x03
    237a:	8b 81       	ldd	r24, Y+3	; 0x03
    237c:	9c 81       	ldd	r25, Y+4	; 0x04
    237e:	81 30       	cpi	r24, 0x01	; 1
    2380:	91 05       	cpc	r25, r1
    2382:	d1 f0       	breq	.+52     	; 0x23b8 <GPIO_setupPortDirection+0x5e>
    2384:	2b 81       	ldd	r18, Y+3	; 0x03
    2386:	3c 81       	ldd	r19, Y+4	; 0x04
    2388:	22 30       	cpi	r18, 0x02	; 2
    238a:	31 05       	cpc	r19, r1
    238c:	2c f4       	brge	.+10     	; 0x2398 <GPIO_setupPortDirection+0x3e>
    238e:	8b 81       	ldd	r24, Y+3	; 0x03
    2390:	9c 81       	ldd	r25, Y+4	; 0x04
    2392:	00 97       	sbiw	r24, 0x00	; 0
    2394:	61 f0       	breq	.+24     	; 0x23ae <GPIO_setupPortDirection+0x54>
    2396:	1e c0       	rjmp	.+60     	; 0x23d4 <GPIO_setupPortDirection+0x7a>
    2398:	2b 81       	ldd	r18, Y+3	; 0x03
    239a:	3c 81       	ldd	r19, Y+4	; 0x04
    239c:	22 30       	cpi	r18, 0x02	; 2
    239e:	31 05       	cpc	r19, r1
    23a0:	81 f0       	breq	.+32     	; 0x23c2 <GPIO_setupPortDirection+0x68>
    23a2:	8b 81       	ldd	r24, Y+3	; 0x03
    23a4:	9c 81       	ldd	r25, Y+4	; 0x04
    23a6:	83 30       	cpi	r24, 0x03	; 3
    23a8:	91 05       	cpc	r25, r1
    23aa:	81 f0       	breq	.+32     	; 0x23cc <GPIO_setupPortDirection+0x72>
    23ac:	13 c0       	rjmp	.+38     	; 0x23d4 <GPIO_setupPortDirection+0x7a>
		{
		case PORTA_ID:
			DDRA = direction;
    23ae:	ea e3       	ldi	r30, 0x3A	; 58
    23b0:	f0 e0       	ldi	r31, 0x00	; 0
    23b2:	8a 81       	ldd	r24, Y+2	; 0x02
    23b4:	80 83       	st	Z, r24
    23b6:	0e c0       	rjmp	.+28     	; 0x23d4 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTB_ID:
			DDRB = direction;
    23b8:	e7 e3       	ldi	r30, 0x37	; 55
    23ba:	f0 e0       	ldi	r31, 0x00	; 0
    23bc:	8a 81       	ldd	r24, Y+2	; 0x02
    23be:	80 83       	st	Z, r24
    23c0:	09 c0       	rjmp	.+18     	; 0x23d4 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTC_ID:
			DDRC = direction;
    23c2:	e4 e3       	ldi	r30, 0x34	; 52
    23c4:	f0 e0       	ldi	r31, 0x00	; 0
    23c6:	8a 81       	ldd	r24, Y+2	; 0x02
    23c8:	80 83       	st	Z, r24
    23ca:	04 c0       	rjmp	.+8      	; 0x23d4 <GPIO_setupPortDirection+0x7a>
			break;
		case PORTD_ID:
			DDRD = direction;
    23cc:	e1 e3       	ldi	r30, 0x31	; 49
    23ce:	f0 e0       	ldi	r31, 0x00	; 0
    23d0:	8a 81       	ldd	r24, Y+2	; 0x02
    23d2:	80 83       	st	Z, r24
			break;
		}
	}
}
    23d4:	0f 90       	pop	r0
    23d6:	0f 90       	pop	r0
    23d8:	0f 90       	pop	r0
    23da:	0f 90       	pop	r0
    23dc:	cf 91       	pop	r28
    23de:	df 91       	pop	r29
    23e0:	08 95       	ret

000023e2 <GPIO_writePort>:
 * If any pin in the port is output pin the value will be written.
 * If any pin in the port is input pin this will activate/deactivate the internal pull-up resistor.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_writePort(uint8 port_num, uint8 value)
{
    23e2:	df 93       	push	r29
    23e4:	cf 93       	push	r28
    23e6:	00 d0       	rcall	.+0      	; 0x23e8 <GPIO_writePort+0x6>
    23e8:	00 d0       	rcall	.+0      	; 0x23ea <GPIO_writePort+0x8>
    23ea:	cd b7       	in	r28, 0x3d	; 61
    23ec:	de b7       	in	r29, 0x3e	; 62
    23ee:	89 83       	std	Y+1, r24	; 0x01
    23f0:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    23f2:	89 81       	ldd	r24, Y+1	; 0x01
    23f4:	84 30       	cpi	r24, 0x04	; 4
    23f6:	90 f5       	brcc	.+100    	; 0x245c <GPIO_writePort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Write the port value as required */
		switch(port_num)
    23f8:	89 81       	ldd	r24, Y+1	; 0x01
    23fa:	28 2f       	mov	r18, r24
    23fc:	30 e0       	ldi	r19, 0x00	; 0
    23fe:	3c 83       	std	Y+4, r19	; 0x04
    2400:	2b 83       	std	Y+3, r18	; 0x03
    2402:	8b 81       	ldd	r24, Y+3	; 0x03
    2404:	9c 81       	ldd	r25, Y+4	; 0x04
    2406:	81 30       	cpi	r24, 0x01	; 1
    2408:	91 05       	cpc	r25, r1
    240a:	d1 f0       	breq	.+52     	; 0x2440 <GPIO_writePort+0x5e>
    240c:	2b 81       	ldd	r18, Y+3	; 0x03
    240e:	3c 81       	ldd	r19, Y+4	; 0x04
    2410:	22 30       	cpi	r18, 0x02	; 2
    2412:	31 05       	cpc	r19, r1
    2414:	2c f4       	brge	.+10     	; 0x2420 <GPIO_writePort+0x3e>
    2416:	8b 81       	ldd	r24, Y+3	; 0x03
    2418:	9c 81       	ldd	r25, Y+4	; 0x04
    241a:	00 97       	sbiw	r24, 0x00	; 0
    241c:	61 f0       	breq	.+24     	; 0x2436 <GPIO_writePort+0x54>
    241e:	1e c0       	rjmp	.+60     	; 0x245c <GPIO_writePort+0x7a>
    2420:	2b 81       	ldd	r18, Y+3	; 0x03
    2422:	3c 81       	ldd	r19, Y+4	; 0x04
    2424:	22 30       	cpi	r18, 0x02	; 2
    2426:	31 05       	cpc	r19, r1
    2428:	81 f0       	breq	.+32     	; 0x244a <GPIO_writePort+0x68>
    242a:	8b 81       	ldd	r24, Y+3	; 0x03
    242c:	9c 81       	ldd	r25, Y+4	; 0x04
    242e:	83 30       	cpi	r24, 0x03	; 3
    2430:	91 05       	cpc	r25, r1
    2432:	81 f0       	breq	.+32     	; 0x2454 <GPIO_writePort+0x72>
    2434:	13 c0       	rjmp	.+38     	; 0x245c <GPIO_writePort+0x7a>
		{
		case PORTA_ID:
			PORTA = value;
    2436:	eb e3       	ldi	r30, 0x3B	; 59
    2438:	f0 e0       	ldi	r31, 0x00	; 0
    243a:	8a 81       	ldd	r24, Y+2	; 0x02
    243c:	80 83       	st	Z, r24
    243e:	0e c0       	rjmp	.+28     	; 0x245c <GPIO_writePort+0x7a>
			break;
		case PORTB_ID:
			PORTB = value;
    2440:	e8 e3       	ldi	r30, 0x38	; 56
    2442:	f0 e0       	ldi	r31, 0x00	; 0
    2444:	8a 81       	ldd	r24, Y+2	; 0x02
    2446:	80 83       	st	Z, r24
    2448:	09 c0       	rjmp	.+18     	; 0x245c <GPIO_writePort+0x7a>
			break;
		case PORTC_ID:
			PORTC = value;
    244a:	e5 e3       	ldi	r30, 0x35	; 53
    244c:	f0 e0       	ldi	r31, 0x00	; 0
    244e:	8a 81       	ldd	r24, Y+2	; 0x02
    2450:	80 83       	st	Z, r24
    2452:	04 c0       	rjmp	.+8      	; 0x245c <GPIO_writePort+0x7a>
			break;
		case PORTD_ID:
			PORTD = value;
    2454:	e2 e3       	ldi	r30, 0x32	; 50
    2456:	f0 e0       	ldi	r31, 0x00	; 0
    2458:	8a 81       	ldd	r24, Y+2	; 0x02
    245a:	80 83       	st	Z, r24
			break;
		}
	}
}
    245c:	0f 90       	pop	r0
    245e:	0f 90       	pop	r0
    2460:	0f 90       	pop	r0
    2462:	0f 90       	pop	r0
    2464:	cf 91       	pop	r28
    2466:	df 91       	pop	r29
    2468:	08 95       	ret

0000246a <GPIO_readPort>:
 * Description :
 * Read and return the value of the required port.
 * If the input port number is not correct, The function will return ZERO value.
 */
uint8 GPIO_readPort(uint8 port_num)
{
    246a:	df 93       	push	r29
    246c:	cf 93       	push	r28
    246e:	00 d0       	rcall	.+0      	; 0x2470 <GPIO_readPort+0x6>
    2470:	00 d0       	rcall	.+0      	; 0x2472 <GPIO_readPort+0x8>
    2472:	cd b7       	in	r28, 0x3d	; 61
    2474:	de b7       	in	r29, 0x3e	; 62
    2476:	8a 83       	std	Y+2, r24	; 0x02
	uint8 value = LOGIC_LOW;
    2478:	19 82       	std	Y+1, r1	; 0x01

	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    247a:	8a 81       	ldd	r24, Y+2	; 0x02
    247c:	84 30       	cpi	r24, 0x04	; 4
    247e:	90 f5       	brcc	.+100    	; 0x24e4 <GPIO_readPort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Read the port value as required */
		switch(port_num)
    2480:	8a 81       	ldd	r24, Y+2	; 0x02
    2482:	28 2f       	mov	r18, r24
    2484:	30 e0       	ldi	r19, 0x00	; 0
    2486:	3c 83       	std	Y+4, r19	; 0x04
    2488:	2b 83       	std	Y+3, r18	; 0x03
    248a:	8b 81       	ldd	r24, Y+3	; 0x03
    248c:	9c 81       	ldd	r25, Y+4	; 0x04
    248e:	81 30       	cpi	r24, 0x01	; 1
    2490:	91 05       	cpc	r25, r1
    2492:	d1 f0       	breq	.+52     	; 0x24c8 <GPIO_readPort+0x5e>
    2494:	2b 81       	ldd	r18, Y+3	; 0x03
    2496:	3c 81       	ldd	r19, Y+4	; 0x04
    2498:	22 30       	cpi	r18, 0x02	; 2
    249a:	31 05       	cpc	r19, r1
    249c:	2c f4       	brge	.+10     	; 0x24a8 <GPIO_readPort+0x3e>
    249e:	8b 81       	ldd	r24, Y+3	; 0x03
    24a0:	9c 81       	ldd	r25, Y+4	; 0x04
    24a2:	00 97       	sbiw	r24, 0x00	; 0
    24a4:	61 f0       	breq	.+24     	; 0x24be <GPIO_readPort+0x54>
    24a6:	1e c0       	rjmp	.+60     	; 0x24e4 <GPIO_readPort+0x7a>
    24a8:	2b 81       	ldd	r18, Y+3	; 0x03
    24aa:	3c 81       	ldd	r19, Y+4	; 0x04
    24ac:	22 30       	cpi	r18, 0x02	; 2
    24ae:	31 05       	cpc	r19, r1
    24b0:	81 f0       	breq	.+32     	; 0x24d2 <GPIO_readPort+0x68>
    24b2:	8b 81       	ldd	r24, Y+3	; 0x03
    24b4:	9c 81       	ldd	r25, Y+4	; 0x04
    24b6:	83 30       	cpi	r24, 0x03	; 3
    24b8:	91 05       	cpc	r25, r1
    24ba:	81 f0       	breq	.+32     	; 0x24dc <GPIO_readPort+0x72>
    24bc:	13 c0       	rjmp	.+38     	; 0x24e4 <GPIO_readPort+0x7a>
		{
		case PORTA_ID:
			value = PINA;
    24be:	e9 e3       	ldi	r30, 0x39	; 57
    24c0:	f0 e0       	ldi	r31, 0x00	; 0
    24c2:	80 81       	ld	r24, Z
    24c4:	89 83       	std	Y+1, r24	; 0x01
    24c6:	0e c0       	rjmp	.+28     	; 0x24e4 <GPIO_readPort+0x7a>
			break;
		case PORTB_ID:
			value = PINB;
    24c8:	e6 e3       	ldi	r30, 0x36	; 54
    24ca:	f0 e0       	ldi	r31, 0x00	; 0
    24cc:	80 81       	ld	r24, Z
    24ce:	89 83       	std	Y+1, r24	; 0x01
    24d0:	09 c0       	rjmp	.+18     	; 0x24e4 <GPIO_readPort+0x7a>
			break;
		case PORTC_ID:
			value = PINC;
    24d2:	e3 e3       	ldi	r30, 0x33	; 51
    24d4:	f0 e0       	ldi	r31, 0x00	; 0
    24d6:	80 81       	ld	r24, Z
    24d8:	89 83       	std	Y+1, r24	; 0x01
    24da:	04 c0       	rjmp	.+8      	; 0x24e4 <GPIO_readPort+0x7a>
			break;
		case PORTD_ID:
			value = PIND;
    24dc:	e0 e3       	ldi	r30, 0x30	; 48
    24de:	f0 e0       	ldi	r31, 0x00	; 0
    24e0:	80 81       	ld	r24, Z
    24e2:	89 83       	std	Y+1, r24	; 0x01
			break;
		}
	}

	return value;
    24e4:	89 81       	ldd	r24, Y+1	; 0x01
}
    24e6:	0f 90       	pop	r0
    24e8:	0f 90       	pop	r0
    24ea:	0f 90       	pop	r0
    24ec:	0f 90       	pop	r0
    24ee:	cf 91       	pop	r28
    24f0:	df 91       	pop	r29
    24f2:	08 95       	ret

000024f4 <LCD_init>:
 * Initialize the LCD:
 * 1. Setup the LCD pins directions by use the GPIO driver.
 * 2. Setup the LCD Data Mode 4-bits or 8-bits.
 */
void LCD_init(void)
{
    24f4:	df 93       	push	r29
    24f6:	cf 93       	push	r28
    24f8:	cd b7       	in	r28, 0x3d	; 61
    24fa:	de b7       	in	r29, 0x3e	; 62
	/* Configure the direction for RS, RW and E pins as output pins */
	GPIO_setupPinDirection(LCD_RS_PORT_ID,LCD_RS_PIN_ID,PIN_OUTPUT);
    24fc:	83 e0       	ldi	r24, 0x03	; 3
    24fe:	60 e0       	ldi	r22, 0x00	; 0
    2500:	41 e0       	ldi	r20, 0x01	; 1
    2502:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_RW_PORT_ID,LCD_RW_PIN_ID,PIN_OUTPUT);
    2506:	83 e0       	ldi	r24, 0x03	; 3
    2508:	61 e0       	ldi	r22, 0x01	; 1
    250a:	41 e0       	ldi	r20, 0x01	; 1
    250c:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_E_PORT_ID,LCD_E_PIN_ID,PIN_OUTPUT);
    2510:	83 e0       	ldi	r24, 0x03	; 3
    2512:	62 e0       	ldi	r22, 0x02	; 2
    2514:	41 e0       	ldi	r20, 0x01	; 1
    2516:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <GPIO_setupPinDirection>

	/* Configure the data port as output port */
	GPIO_setupPortDirection(LCD_DATA_PORT_ID,PORT_OUTPUT);
    251a:	82 e0       	ldi	r24, 0x02	; 2
    251c:	6f ef       	ldi	r22, 0xFF	; 255
    251e:	0e 94 ad 11 	call	0x235a	; 0x235a <GPIO_setupPortDirection>

	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE); /* use 2-line lcd + 8-bit Data Mode + 5*7 dot display Mode */
    2522:	88 e3       	ldi	r24, 0x38	; 56
    2524:	0e 94 9d 12 	call	0x253a	; 0x253a <LCD_sendCommand>
	
	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
    2528:	8c e0       	ldi	r24, 0x0C	; 12
    252a:	0e 94 9d 12 	call	0x253a	; 0x253a <LCD_sendCommand>
	
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
    252e:	81 e0       	ldi	r24, 0x01	; 1
    2530:	0e 94 9d 12 	call	0x253a	; 0x253a <LCD_sendCommand>
}
    2534:	cf 91       	pop	r28
    2536:	df 91       	pop	r29
    2538:	08 95       	ret

0000253a <LCD_sendCommand>:
/*
 * Description :
 * Send the required command to the screen
 */
void LCD_sendCommand(uint8 command)
{
    253a:	df 93       	push	r29
    253c:	cf 93       	push	r28
    253e:	cd b7       	in	r28, 0x3d	; 61
    2540:	de b7       	in	r29, 0x3e	; 62
    2542:	e9 97       	sbiw	r28, 0x39	; 57
    2544:	0f b6       	in	r0, 0x3f	; 63
    2546:	f8 94       	cli
    2548:	de bf       	out	0x3e, r29	; 62
    254a:	0f be       	out	0x3f, r0	; 63
    254c:	cd bf       	out	0x3d, r28	; 61
    254e:	89 af       	std	Y+57, r24	; 0x39
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_LOW); /* Instruction Mode RS=0 */
    2550:	83 e0       	ldi	r24, 0x03	; 3
    2552:	60 e0       	ldi	r22, 0x00	; 0
    2554:	40 e0       	ldi	r20, 0x00	; 0
    2556:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
    255a:	83 e0       	ldi	r24, 0x03	; 3
    255c:	61 e0       	ldi	r22, 0x01	; 1
    255e:	40 e0       	ldi	r20, 0x00	; 0
    2560:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    2564:	80 e0       	ldi	r24, 0x00	; 0
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	a0 e8       	ldi	r26, 0x80	; 128
    256a:	bf e3       	ldi	r27, 0x3F	; 63
    256c:	8d ab       	std	Y+53, r24	; 0x35
    256e:	9e ab       	std	Y+54, r25	; 0x36
    2570:	af ab       	std	Y+55, r26	; 0x37
    2572:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2574:	6d a9       	ldd	r22, Y+53	; 0x35
    2576:	7e a9       	ldd	r23, Y+54	; 0x36
    2578:	8f a9       	ldd	r24, Y+55	; 0x37
    257a:	98 ad       	ldd	r25, Y+56	; 0x38
    257c:	20 e0       	ldi	r18, 0x00	; 0
    257e:	30 e0       	ldi	r19, 0x00	; 0
    2580:	4a e7       	ldi	r20, 0x7A	; 122
    2582:	53 e4       	ldi	r21, 0x43	; 67
    2584:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2588:	dc 01       	movw	r26, r24
    258a:	cb 01       	movw	r24, r22
    258c:	89 ab       	std	Y+49, r24	; 0x31
    258e:	9a ab       	std	Y+50, r25	; 0x32
    2590:	ab ab       	std	Y+51, r26	; 0x33
    2592:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2594:	69 a9       	ldd	r22, Y+49	; 0x31
    2596:	7a a9       	ldd	r23, Y+50	; 0x32
    2598:	8b a9       	ldd	r24, Y+51	; 0x33
    259a:	9c a9       	ldd	r25, Y+52	; 0x34
    259c:	20 e0       	ldi	r18, 0x00	; 0
    259e:	30 e0       	ldi	r19, 0x00	; 0
    25a0:	40 e8       	ldi	r20, 0x80	; 128
    25a2:	5f e3       	ldi	r21, 0x3F	; 63
    25a4:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    25a8:	88 23       	and	r24, r24
    25aa:	2c f4       	brge	.+10     	; 0x25b6 <LCD_sendCommand+0x7c>
		__ticks = 1;
    25ac:	81 e0       	ldi	r24, 0x01	; 1
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	98 ab       	std	Y+48, r25	; 0x30
    25b2:	8f a7       	std	Y+47, r24	; 0x2f
    25b4:	3f c0       	rjmp	.+126    	; 0x2634 <LCD_sendCommand+0xfa>
	else if (__tmp > 65535)
    25b6:	69 a9       	ldd	r22, Y+49	; 0x31
    25b8:	7a a9       	ldd	r23, Y+50	; 0x32
    25ba:	8b a9       	ldd	r24, Y+51	; 0x33
    25bc:	9c a9       	ldd	r25, Y+52	; 0x34
    25be:	20 e0       	ldi	r18, 0x00	; 0
    25c0:	3f ef       	ldi	r19, 0xFF	; 255
    25c2:	4f e7       	ldi	r20, 0x7F	; 127
    25c4:	57 e4       	ldi	r21, 0x47	; 71
    25c6:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    25ca:	18 16       	cp	r1, r24
    25cc:	4c f5       	brge	.+82     	; 0x2620 <LCD_sendCommand+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ce:	6d a9       	ldd	r22, Y+53	; 0x35
    25d0:	7e a9       	ldd	r23, Y+54	; 0x36
    25d2:	8f a9       	ldd	r24, Y+55	; 0x37
    25d4:	98 ad       	ldd	r25, Y+56	; 0x38
    25d6:	20 e0       	ldi	r18, 0x00	; 0
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	40 e2       	ldi	r20, 0x20	; 32
    25dc:	51 e4       	ldi	r21, 0x41	; 65
    25de:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	bc 01       	movw	r22, r24
    25e8:	cd 01       	movw	r24, r26
    25ea:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	98 ab       	std	Y+48, r25	; 0x30
    25f4:	8f a7       	std	Y+47, r24	; 0x2f
    25f6:	0f c0       	rjmp	.+30     	; 0x2616 <LCD_sendCommand+0xdc>
    25f8:	89 e1       	ldi	r24, 0x19	; 25
    25fa:	90 e0       	ldi	r25, 0x00	; 0
    25fc:	9e a7       	std	Y+46, r25	; 0x2e
    25fe:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2600:	8d a5       	ldd	r24, Y+45	; 0x2d
    2602:	9e a5       	ldd	r25, Y+46	; 0x2e
    2604:	01 97       	sbiw	r24, 0x01	; 1
    2606:	f1 f7       	brne	.-4      	; 0x2604 <LCD_sendCommand+0xca>
    2608:	9e a7       	std	Y+46, r25	; 0x2e
    260a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    260c:	8f a5       	ldd	r24, Y+47	; 0x2f
    260e:	98 a9       	ldd	r25, Y+48	; 0x30
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	98 ab       	std	Y+48, r25	; 0x30
    2614:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2616:	8f a5       	ldd	r24, Y+47	; 0x2f
    2618:	98 a9       	ldd	r25, Y+48	; 0x30
    261a:	00 97       	sbiw	r24, 0x00	; 0
    261c:	69 f7       	brne	.-38     	; 0x25f8 <LCD_sendCommand+0xbe>
    261e:	14 c0       	rjmp	.+40     	; 0x2648 <LCD_sendCommand+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2620:	69 a9       	ldd	r22, Y+49	; 0x31
    2622:	7a a9       	ldd	r23, Y+50	; 0x32
    2624:	8b a9       	ldd	r24, Y+51	; 0x33
    2626:	9c a9       	ldd	r25, Y+52	; 0x34
    2628:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    262c:	dc 01       	movw	r26, r24
    262e:	cb 01       	movw	r24, r22
    2630:	98 ab       	std	Y+48, r25	; 0x30
    2632:	8f a7       	std	Y+47, r24	; 0x2f
    2634:	8f a5       	ldd	r24, Y+47	; 0x2f
    2636:	98 a9       	ldd	r25, Y+48	; 0x30
    2638:	9c a7       	std	Y+44, r25	; 0x2c
    263a:	8b a7       	std	Y+43, r24	; 0x2b
    263c:	8b a5       	ldd	r24, Y+43	; 0x2b
    263e:	9c a5       	ldd	r25, Y+44	; 0x2c
    2640:	01 97       	sbiw	r24, 0x01	; 1
    2642:	f1 f7       	brne	.-4      	; 0x2640 <LCD_sendCommand+0x106>
    2644:	9c a7       	std	Y+44, r25	; 0x2c
    2646:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    2648:	83 e0       	ldi	r24, 0x03	; 3
    264a:	62 e0       	ldi	r22, 0x02	; 2
    264c:	41 e0       	ldi	r20, 0x01	; 1
    264e:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    2652:	80 e0       	ldi	r24, 0x00	; 0
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	a0 e8       	ldi	r26, 0x80	; 128
    2658:	bf e3       	ldi	r27, 0x3F	; 63
    265a:	8f a3       	std	Y+39, r24	; 0x27
    265c:	98 a7       	std	Y+40, r25	; 0x28
    265e:	a9 a7       	std	Y+41, r26	; 0x29
    2660:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2662:	6f a1       	ldd	r22, Y+39	; 0x27
    2664:	78 a5       	ldd	r23, Y+40	; 0x28
    2666:	89 a5       	ldd	r24, Y+41	; 0x29
    2668:	9a a5       	ldd	r25, Y+42	; 0x2a
    266a:	20 e0       	ldi	r18, 0x00	; 0
    266c:	30 e0       	ldi	r19, 0x00	; 0
    266e:	4a e7       	ldi	r20, 0x7A	; 122
    2670:	53 e4       	ldi	r21, 0x43	; 67
    2672:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2676:	dc 01       	movw	r26, r24
    2678:	cb 01       	movw	r24, r22
    267a:	8b a3       	std	Y+35, r24	; 0x23
    267c:	9c a3       	std	Y+36, r25	; 0x24
    267e:	ad a3       	std	Y+37, r26	; 0x25
    2680:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2682:	6b a1       	ldd	r22, Y+35	; 0x23
    2684:	7c a1       	ldd	r23, Y+36	; 0x24
    2686:	8d a1       	ldd	r24, Y+37	; 0x25
    2688:	9e a1       	ldd	r25, Y+38	; 0x26
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	40 e8       	ldi	r20, 0x80	; 128
    2690:	5f e3       	ldi	r21, 0x3F	; 63
    2692:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2696:	88 23       	and	r24, r24
    2698:	2c f4       	brge	.+10     	; 0x26a4 <LCD_sendCommand+0x16a>
		__ticks = 1;
    269a:	81 e0       	ldi	r24, 0x01	; 1
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	9a a3       	std	Y+34, r25	; 0x22
    26a0:	89 a3       	std	Y+33, r24	; 0x21
    26a2:	3f c0       	rjmp	.+126    	; 0x2722 <LCD_sendCommand+0x1e8>
	else if (__tmp > 65535)
    26a4:	6b a1       	ldd	r22, Y+35	; 0x23
    26a6:	7c a1       	ldd	r23, Y+36	; 0x24
    26a8:	8d a1       	ldd	r24, Y+37	; 0x25
    26aa:	9e a1       	ldd	r25, Y+38	; 0x26
    26ac:	20 e0       	ldi	r18, 0x00	; 0
    26ae:	3f ef       	ldi	r19, 0xFF	; 255
    26b0:	4f e7       	ldi	r20, 0x7F	; 127
    26b2:	57 e4       	ldi	r21, 0x47	; 71
    26b4:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    26b8:	18 16       	cp	r1, r24
    26ba:	4c f5       	brge	.+82     	; 0x270e <LCD_sendCommand+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26bc:	6f a1       	ldd	r22, Y+39	; 0x27
    26be:	78 a5       	ldd	r23, Y+40	; 0x28
    26c0:	89 a5       	ldd	r24, Y+41	; 0x29
    26c2:	9a a5       	ldd	r25, Y+42	; 0x2a
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	40 e2       	ldi	r20, 0x20	; 32
    26ca:	51 e4       	ldi	r21, 0x41	; 65
    26cc:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    26d0:	dc 01       	movw	r26, r24
    26d2:	cb 01       	movw	r24, r22
    26d4:	bc 01       	movw	r22, r24
    26d6:	cd 01       	movw	r24, r26
    26d8:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    26dc:	dc 01       	movw	r26, r24
    26de:	cb 01       	movw	r24, r22
    26e0:	9a a3       	std	Y+34, r25	; 0x22
    26e2:	89 a3       	std	Y+33, r24	; 0x21
    26e4:	0f c0       	rjmp	.+30     	; 0x2704 <LCD_sendCommand+0x1ca>
    26e6:	89 e1       	ldi	r24, 0x19	; 25
    26e8:	90 e0       	ldi	r25, 0x00	; 0
    26ea:	98 a3       	std	Y+32, r25	; 0x20
    26ec:	8f 8f       	std	Y+31, r24	; 0x1f
    26ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    26f0:	98 a1       	ldd	r25, Y+32	; 0x20
    26f2:	01 97       	sbiw	r24, 0x01	; 1
    26f4:	f1 f7       	brne	.-4      	; 0x26f2 <LCD_sendCommand+0x1b8>
    26f6:	98 a3       	std	Y+32, r25	; 0x20
    26f8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26fa:	89 a1       	ldd	r24, Y+33	; 0x21
    26fc:	9a a1       	ldd	r25, Y+34	; 0x22
    26fe:	01 97       	sbiw	r24, 0x01	; 1
    2700:	9a a3       	std	Y+34, r25	; 0x22
    2702:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2704:	89 a1       	ldd	r24, Y+33	; 0x21
    2706:	9a a1       	ldd	r25, Y+34	; 0x22
    2708:	00 97       	sbiw	r24, 0x00	; 0
    270a:	69 f7       	brne	.-38     	; 0x26e6 <LCD_sendCommand+0x1ac>
    270c:	14 c0       	rjmp	.+40     	; 0x2736 <LCD_sendCommand+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    270e:	6b a1       	ldd	r22, Y+35	; 0x23
    2710:	7c a1       	ldd	r23, Y+36	; 0x24
    2712:	8d a1       	ldd	r24, Y+37	; 0x25
    2714:	9e a1       	ldd	r25, Y+38	; 0x26
    2716:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    271a:	dc 01       	movw	r26, r24
    271c:	cb 01       	movw	r24, r22
    271e:	9a a3       	std	Y+34, r25	; 0x22
    2720:	89 a3       	std	Y+33, r24	; 0x21
    2722:	89 a1       	ldd	r24, Y+33	; 0x21
    2724:	9a a1       	ldd	r25, Y+34	; 0x22
    2726:	9e 8f       	std	Y+30, r25	; 0x1e
    2728:	8d 8f       	std	Y+29, r24	; 0x1d
    272a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    272c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    272e:	01 97       	sbiw	r24, 0x01	; 1
    2730:	f1 f7       	brne	.-4      	; 0x272e <LCD_sendCommand+0x1f4>
    2732:	9e 8f       	std	Y+30, r25	; 0x1e
    2734:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,command); /* out the required command to the data bus D0 --> D7 */
    2736:	82 e0       	ldi	r24, 0x02	; 2
    2738:	69 ad       	ldd	r22, Y+57	; 0x39
    273a:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <GPIO_writePort>
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	a0 e8       	ldi	r26, 0x80	; 128
    2744:	bf e3       	ldi	r27, 0x3F	; 63
    2746:	89 8f       	std	Y+25, r24	; 0x19
    2748:	9a 8f       	std	Y+26, r25	; 0x1a
    274a:	ab 8f       	std	Y+27, r26	; 0x1b
    274c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    274e:	69 8d       	ldd	r22, Y+25	; 0x19
    2750:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2752:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2754:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	4a e7       	ldi	r20, 0x7A	; 122
    275c:	53 e4       	ldi	r21, 0x43	; 67
    275e:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2762:	dc 01       	movw	r26, r24
    2764:	cb 01       	movw	r24, r22
    2766:	8d 8b       	std	Y+21, r24	; 0x15
    2768:	9e 8b       	std	Y+22, r25	; 0x16
    276a:	af 8b       	std	Y+23, r26	; 0x17
    276c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    276e:	6d 89       	ldd	r22, Y+21	; 0x15
    2770:	7e 89       	ldd	r23, Y+22	; 0x16
    2772:	8f 89       	ldd	r24, Y+23	; 0x17
    2774:	98 8d       	ldd	r25, Y+24	; 0x18
    2776:	20 e0       	ldi	r18, 0x00	; 0
    2778:	30 e0       	ldi	r19, 0x00	; 0
    277a:	40 e8       	ldi	r20, 0x80	; 128
    277c:	5f e3       	ldi	r21, 0x3F	; 63
    277e:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2782:	88 23       	and	r24, r24
    2784:	2c f4       	brge	.+10     	; 0x2790 <LCD_sendCommand+0x256>
		__ticks = 1;
    2786:	81 e0       	ldi	r24, 0x01	; 1
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	9c 8b       	std	Y+20, r25	; 0x14
    278c:	8b 8b       	std	Y+19, r24	; 0x13
    278e:	3f c0       	rjmp	.+126    	; 0x280e <LCD_sendCommand+0x2d4>
	else if (__tmp > 65535)
    2790:	6d 89       	ldd	r22, Y+21	; 0x15
    2792:	7e 89       	ldd	r23, Y+22	; 0x16
    2794:	8f 89       	ldd	r24, Y+23	; 0x17
    2796:	98 8d       	ldd	r25, Y+24	; 0x18
    2798:	20 e0       	ldi	r18, 0x00	; 0
    279a:	3f ef       	ldi	r19, 0xFF	; 255
    279c:	4f e7       	ldi	r20, 0x7F	; 127
    279e:	57 e4       	ldi	r21, 0x47	; 71
    27a0:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    27a4:	18 16       	cp	r1, r24
    27a6:	4c f5       	brge	.+82     	; 0x27fa <LCD_sendCommand+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27a8:	69 8d       	ldd	r22, Y+25	; 0x19
    27aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27b0:	20 e0       	ldi	r18, 0x00	; 0
    27b2:	30 e0       	ldi	r19, 0x00	; 0
    27b4:	40 e2       	ldi	r20, 0x20	; 32
    27b6:	51 e4       	ldi	r21, 0x41	; 65
    27b8:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    27bc:	dc 01       	movw	r26, r24
    27be:	cb 01       	movw	r24, r22
    27c0:	bc 01       	movw	r22, r24
    27c2:	cd 01       	movw	r24, r26
    27c4:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    27c8:	dc 01       	movw	r26, r24
    27ca:	cb 01       	movw	r24, r22
    27cc:	9c 8b       	std	Y+20, r25	; 0x14
    27ce:	8b 8b       	std	Y+19, r24	; 0x13
    27d0:	0f c0       	rjmp	.+30     	; 0x27f0 <LCD_sendCommand+0x2b6>
    27d2:	89 e1       	ldi	r24, 0x19	; 25
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	9a 8b       	std	Y+18, r25	; 0x12
    27d8:	89 8b       	std	Y+17, r24	; 0x11
    27da:	89 89       	ldd	r24, Y+17	; 0x11
    27dc:	9a 89       	ldd	r25, Y+18	; 0x12
    27de:	01 97       	sbiw	r24, 0x01	; 1
    27e0:	f1 f7       	brne	.-4      	; 0x27de <LCD_sendCommand+0x2a4>
    27e2:	9a 8b       	std	Y+18, r25	; 0x12
    27e4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27e6:	8b 89       	ldd	r24, Y+19	; 0x13
    27e8:	9c 89       	ldd	r25, Y+20	; 0x14
    27ea:	01 97       	sbiw	r24, 0x01	; 1
    27ec:	9c 8b       	std	Y+20, r25	; 0x14
    27ee:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27f0:	8b 89       	ldd	r24, Y+19	; 0x13
    27f2:	9c 89       	ldd	r25, Y+20	; 0x14
    27f4:	00 97       	sbiw	r24, 0x00	; 0
    27f6:	69 f7       	brne	.-38     	; 0x27d2 <LCD_sendCommand+0x298>
    27f8:	14 c0       	rjmp	.+40     	; 0x2822 <LCD_sendCommand+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27fa:	6d 89       	ldd	r22, Y+21	; 0x15
    27fc:	7e 89       	ldd	r23, Y+22	; 0x16
    27fe:	8f 89       	ldd	r24, Y+23	; 0x17
    2800:	98 8d       	ldd	r25, Y+24	; 0x18
    2802:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2806:	dc 01       	movw	r26, r24
    2808:	cb 01       	movw	r24, r22
    280a:	9c 8b       	std	Y+20, r25	; 0x14
    280c:	8b 8b       	std	Y+19, r24	; 0x13
    280e:	8b 89       	ldd	r24, Y+19	; 0x13
    2810:	9c 89       	ldd	r25, Y+20	; 0x14
    2812:	98 8b       	std	Y+16, r25	; 0x10
    2814:	8f 87       	std	Y+15, r24	; 0x0f
    2816:	8f 85       	ldd	r24, Y+15	; 0x0f
    2818:	98 89       	ldd	r25, Y+16	; 0x10
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	f1 f7       	brne	.-4      	; 0x281a <LCD_sendCommand+0x2e0>
    281e:	98 8b       	std	Y+16, r25	; 0x10
    2820:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    2822:	83 e0       	ldi	r24, 0x03	; 3
    2824:	62 e0       	ldi	r22, 0x02	; 2
    2826:	40 e0       	ldi	r20, 0x00	; 0
    2828:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    282c:	80 e0       	ldi	r24, 0x00	; 0
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	a0 e8       	ldi	r26, 0x80	; 128
    2832:	bf e3       	ldi	r27, 0x3F	; 63
    2834:	8b 87       	std	Y+11, r24	; 0x0b
    2836:	9c 87       	std	Y+12, r25	; 0x0c
    2838:	ad 87       	std	Y+13, r26	; 0x0d
    283a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    283c:	6b 85       	ldd	r22, Y+11	; 0x0b
    283e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2840:	8d 85       	ldd	r24, Y+13	; 0x0d
    2842:	9e 85       	ldd	r25, Y+14	; 0x0e
    2844:	20 e0       	ldi	r18, 0x00	; 0
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	4a e7       	ldi	r20, 0x7A	; 122
    284a:	53 e4       	ldi	r21, 0x43	; 67
    284c:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2850:	dc 01       	movw	r26, r24
    2852:	cb 01       	movw	r24, r22
    2854:	8f 83       	std	Y+7, r24	; 0x07
    2856:	98 87       	std	Y+8, r25	; 0x08
    2858:	a9 87       	std	Y+9, r26	; 0x09
    285a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    285c:	6f 81       	ldd	r22, Y+7	; 0x07
    285e:	78 85       	ldd	r23, Y+8	; 0x08
    2860:	89 85       	ldd	r24, Y+9	; 0x09
    2862:	9a 85       	ldd	r25, Y+10	; 0x0a
    2864:	20 e0       	ldi	r18, 0x00	; 0
    2866:	30 e0       	ldi	r19, 0x00	; 0
    2868:	40 e8       	ldi	r20, 0x80	; 128
    286a:	5f e3       	ldi	r21, 0x3F	; 63
    286c:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2870:	88 23       	and	r24, r24
    2872:	2c f4       	brge	.+10     	; 0x287e <LCD_sendCommand+0x344>
		__ticks = 1;
    2874:	81 e0       	ldi	r24, 0x01	; 1
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	9e 83       	std	Y+6, r25	; 0x06
    287a:	8d 83       	std	Y+5, r24	; 0x05
    287c:	3f c0       	rjmp	.+126    	; 0x28fc <LCD_sendCommand+0x3c2>
	else if (__tmp > 65535)
    287e:	6f 81       	ldd	r22, Y+7	; 0x07
    2880:	78 85       	ldd	r23, Y+8	; 0x08
    2882:	89 85       	ldd	r24, Y+9	; 0x09
    2884:	9a 85       	ldd	r25, Y+10	; 0x0a
    2886:	20 e0       	ldi	r18, 0x00	; 0
    2888:	3f ef       	ldi	r19, 0xFF	; 255
    288a:	4f e7       	ldi	r20, 0x7F	; 127
    288c:	57 e4       	ldi	r21, 0x47	; 71
    288e:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    2892:	18 16       	cp	r1, r24
    2894:	4c f5       	brge	.+82     	; 0x28e8 <LCD_sendCommand+0x3ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2896:	6b 85       	ldd	r22, Y+11	; 0x0b
    2898:	7c 85       	ldd	r23, Y+12	; 0x0c
    289a:	8d 85       	ldd	r24, Y+13	; 0x0d
    289c:	9e 85       	ldd	r25, Y+14	; 0x0e
    289e:	20 e0       	ldi	r18, 0x00	; 0
    28a0:	30 e0       	ldi	r19, 0x00	; 0
    28a2:	40 e2       	ldi	r20, 0x20	; 32
    28a4:	51 e4       	ldi	r21, 0x41	; 65
    28a6:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    28aa:	dc 01       	movw	r26, r24
    28ac:	cb 01       	movw	r24, r22
    28ae:	bc 01       	movw	r22, r24
    28b0:	cd 01       	movw	r24, r26
    28b2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    28b6:	dc 01       	movw	r26, r24
    28b8:	cb 01       	movw	r24, r22
    28ba:	9e 83       	std	Y+6, r25	; 0x06
    28bc:	8d 83       	std	Y+5, r24	; 0x05
    28be:	0f c0       	rjmp	.+30     	; 0x28de <LCD_sendCommand+0x3a4>
    28c0:	89 e1       	ldi	r24, 0x19	; 25
    28c2:	90 e0       	ldi	r25, 0x00	; 0
    28c4:	9c 83       	std	Y+4, r25	; 0x04
    28c6:	8b 83       	std	Y+3, r24	; 0x03
    28c8:	8b 81       	ldd	r24, Y+3	; 0x03
    28ca:	9c 81       	ldd	r25, Y+4	; 0x04
    28cc:	01 97       	sbiw	r24, 0x01	; 1
    28ce:	f1 f7       	brne	.-4      	; 0x28cc <LCD_sendCommand+0x392>
    28d0:	9c 83       	std	Y+4, r25	; 0x04
    28d2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28d4:	8d 81       	ldd	r24, Y+5	; 0x05
    28d6:	9e 81       	ldd	r25, Y+6	; 0x06
    28d8:	01 97       	sbiw	r24, 0x01	; 1
    28da:	9e 83       	std	Y+6, r25	; 0x06
    28dc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28de:	8d 81       	ldd	r24, Y+5	; 0x05
    28e0:	9e 81       	ldd	r25, Y+6	; 0x06
    28e2:	00 97       	sbiw	r24, 0x00	; 0
    28e4:	69 f7       	brne	.-38     	; 0x28c0 <LCD_sendCommand+0x386>
    28e6:	14 c0       	rjmp	.+40     	; 0x2910 <LCD_sendCommand+0x3d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28e8:	6f 81       	ldd	r22, Y+7	; 0x07
    28ea:	78 85       	ldd	r23, Y+8	; 0x08
    28ec:	89 85       	ldd	r24, Y+9	; 0x09
    28ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    28f0:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    28f4:	dc 01       	movw	r26, r24
    28f6:	cb 01       	movw	r24, r22
    28f8:	9e 83       	std	Y+6, r25	; 0x06
    28fa:	8d 83       	std	Y+5, r24	; 0x05
    28fc:	8d 81       	ldd	r24, Y+5	; 0x05
    28fe:	9e 81       	ldd	r25, Y+6	; 0x06
    2900:	9a 83       	std	Y+2, r25	; 0x02
    2902:	89 83       	std	Y+1, r24	; 0x01
    2904:	89 81       	ldd	r24, Y+1	; 0x01
    2906:	9a 81       	ldd	r25, Y+2	; 0x02
    2908:	01 97       	sbiw	r24, 0x01	; 1
    290a:	f1 f7       	brne	.-4      	; 0x2908 <LCD_sendCommand+0x3ce>
    290c:	9a 83       	std	Y+2, r25	; 0x02
    290e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
    2910:	e9 96       	adiw	r28, 0x39	; 57
    2912:	0f b6       	in	r0, 0x3f	; 63
    2914:	f8 94       	cli
    2916:	de bf       	out	0x3e, r29	; 62
    2918:	0f be       	out	0x3f, r0	; 63
    291a:	cd bf       	out	0x3d, r28	; 61
    291c:	cf 91       	pop	r28
    291e:	df 91       	pop	r29
    2920:	08 95       	ret

00002922 <LCD_displayCharacter>:
/*
 * Description :
 * Display the required character on the screen
 */
void LCD_displayCharacter(uint8 data)
{
    2922:	df 93       	push	r29
    2924:	cf 93       	push	r28
    2926:	cd b7       	in	r28, 0x3d	; 61
    2928:	de b7       	in	r29, 0x3e	; 62
    292a:	e9 97       	sbiw	r28, 0x39	; 57
    292c:	0f b6       	in	r0, 0x3f	; 63
    292e:	f8 94       	cli
    2930:	de bf       	out	0x3e, r29	; 62
    2932:	0f be       	out	0x3f, r0	; 63
    2934:	cd bf       	out	0x3d, r28	; 61
    2936:	89 af       	std	Y+57, r24	; 0x39
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_HIGH); /* Data Mode RS=1 */
    2938:	83 e0       	ldi	r24, 0x03	; 3
    293a:	60 e0       	ldi	r22, 0x00	; 0
    293c:	41 e0       	ldi	r20, 0x01	; 1
    293e:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
	GPIO_writePin(LCD_RW_PORT_ID,LCD_RW_PIN_ID,LOGIC_LOW); /* write data to LCD so RW=0 */
    2942:	83 e0       	ldi	r24, 0x03	; 3
    2944:	61 e0       	ldi	r22, 0x01	; 1
    2946:	40 e0       	ldi	r20, 0x00	; 0
    2948:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    294c:	80 e0       	ldi	r24, 0x00	; 0
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	a0 e8       	ldi	r26, 0x80	; 128
    2952:	bf e3       	ldi	r27, 0x3F	; 63
    2954:	8d ab       	std	Y+53, r24	; 0x35
    2956:	9e ab       	std	Y+54, r25	; 0x36
    2958:	af ab       	std	Y+55, r26	; 0x37
    295a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    295c:	6d a9       	ldd	r22, Y+53	; 0x35
    295e:	7e a9       	ldd	r23, Y+54	; 0x36
    2960:	8f a9       	ldd	r24, Y+55	; 0x37
    2962:	98 ad       	ldd	r25, Y+56	; 0x38
    2964:	20 e0       	ldi	r18, 0x00	; 0
    2966:	30 e0       	ldi	r19, 0x00	; 0
    2968:	4a e7       	ldi	r20, 0x7A	; 122
    296a:	53 e4       	ldi	r21, 0x43	; 67
    296c:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2970:	dc 01       	movw	r26, r24
    2972:	cb 01       	movw	r24, r22
    2974:	89 ab       	std	Y+49, r24	; 0x31
    2976:	9a ab       	std	Y+50, r25	; 0x32
    2978:	ab ab       	std	Y+51, r26	; 0x33
    297a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    297c:	69 a9       	ldd	r22, Y+49	; 0x31
    297e:	7a a9       	ldd	r23, Y+50	; 0x32
    2980:	8b a9       	ldd	r24, Y+51	; 0x33
    2982:	9c a9       	ldd	r25, Y+52	; 0x34
    2984:	20 e0       	ldi	r18, 0x00	; 0
    2986:	30 e0       	ldi	r19, 0x00	; 0
    2988:	40 e8       	ldi	r20, 0x80	; 128
    298a:	5f e3       	ldi	r21, 0x3F	; 63
    298c:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2990:	88 23       	and	r24, r24
    2992:	2c f4       	brge	.+10     	; 0x299e <LCD_displayCharacter+0x7c>
		__ticks = 1;
    2994:	81 e0       	ldi	r24, 0x01	; 1
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	98 ab       	std	Y+48, r25	; 0x30
    299a:	8f a7       	std	Y+47, r24	; 0x2f
    299c:	3f c0       	rjmp	.+126    	; 0x2a1c <LCD_displayCharacter+0xfa>
	else if (__tmp > 65535)
    299e:	69 a9       	ldd	r22, Y+49	; 0x31
    29a0:	7a a9       	ldd	r23, Y+50	; 0x32
    29a2:	8b a9       	ldd	r24, Y+51	; 0x33
    29a4:	9c a9       	ldd	r25, Y+52	; 0x34
    29a6:	20 e0       	ldi	r18, 0x00	; 0
    29a8:	3f ef       	ldi	r19, 0xFF	; 255
    29aa:	4f e7       	ldi	r20, 0x7F	; 127
    29ac:	57 e4       	ldi	r21, 0x47	; 71
    29ae:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    29b2:	18 16       	cp	r1, r24
    29b4:	4c f5       	brge	.+82     	; 0x2a08 <LCD_displayCharacter+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29b6:	6d a9       	ldd	r22, Y+53	; 0x35
    29b8:	7e a9       	ldd	r23, Y+54	; 0x36
    29ba:	8f a9       	ldd	r24, Y+55	; 0x37
    29bc:	98 ad       	ldd	r25, Y+56	; 0x38
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	40 e2       	ldi	r20, 0x20	; 32
    29c4:	51 e4       	ldi	r21, 0x41	; 65
    29c6:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    29ca:	dc 01       	movw	r26, r24
    29cc:	cb 01       	movw	r24, r22
    29ce:	bc 01       	movw	r22, r24
    29d0:	cd 01       	movw	r24, r26
    29d2:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    29d6:	dc 01       	movw	r26, r24
    29d8:	cb 01       	movw	r24, r22
    29da:	98 ab       	std	Y+48, r25	; 0x30
    29dc:	8f a7       	std	Y+47, r24	; 0x2f
    29de:	0f c0       	rjmp	.+30     	; 0x29fe <LCD_displayCharacter+0xdc>
    29e0:	89 e1       	ldi	r24, 0x19	; 25
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	9e a7       	std	Y+46, r25	; 0x2e
    29e6:	8d a7       	std	Y+45, r24	; 0x2d
    29e8:	8d a5       	ldd	r24, Y+45	; 0x2d
    29ea:	9e a5       	ldd	r25, Y+46	; 0x2e
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <LCD_displayCharacter+0xca>
    29f0:	9e a7       	std	Y+46, r25	; 0x2e
    29f2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    29f6:	98 a9       	ldd	r25, Y+48	; 0x30
    29f8:	01 97       	sbiw	r24, 0x01	; 1
    29fa:	98 ab       	std	Y+48, r25	; 0x30
    29fc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a00:	98 a9       	ldd	r25, Y+48	; 0x30
    2a02:	00 97       	sbiw	r24, 0x00	; 0
    2a04:	69 f7       	brne	.-38     	; 0x29e0 <LCD_displayCharacter+0xbe>
    2a06:	14 c0       	rjmp	.+40     	; 0x2a30 <LCD_displayCharacter+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a08:	69 a9       	ldd	r22, Y+49	; 0x31
    2a0a:	7a a9       	ldd	r23, Y+50	; 0x32
    2a0c:	8b a9       	ldd	r24, Y+51	; 0x33
    2a0e:	9c a9       	ldd	r25, Y+52	; 0x34
    2a10:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2a14:	dc 01       	movw	r26, r24
    2a16:	cb 01       	movw	r24, r22
    2a18:	98 ab       	std	Y+48, r25	; 0x30
    2a1a:	8f a7       	std	Y+47, r24	; 0x2f
    2a1c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a1e:	98 a9       	ldd	r25, Y+48	; 0x30
    2a20:	9c a7       	std	Y+44, r25	; 0x2c
    2a22:	8b a7       	std	Y+43, r24	; 0x2b
    2a24:	8b a5       	ldd	r24, Y+43	; 0x2b
    2a26:	9c a5       	ldd	r25, Y+44	; 0x2c
    2a28:	01 97       	sbiw	r24, 0x01	; 1
    2a2a:	f1 f7       	brne	.-4      	; 0x2a28 <LCD_displayCharacter+0x106>
    2a2c:	9c a7       	std	Y+44, r25	; 0x2c
    2a2e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    2a30:	83 e0       	ldi	r24, 0x03	; 3
    2a32:	62 e0       	ldi	r22, 0x02	; 2
    2a34:	41 e0       	ldi	r20, 0x01	; 1
    2a36:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    2a3a:	80 e0       	ldi	r24, 0x00	; 0
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	a0 e8       	ldi	r26, 0x80	; 128
    2a40:	bf e3       	ldi	r27, 0x3F	; 63
    2a42:	8f a3       	std	Y+39, r24	; 0x27
    2a44:	98 a7       	std	Y+40, r25	; 0x28
    2a46:	a9 a7       	std	Y+41, r26	; 0x29
    2a48:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a4a:	6f a1       	ldd	r22, Y+39	; 0x27
    2a4c:	78 a5       	ldd	r23, Y+40	; 0x28
    2a4e:	89 a5       	ldd	r24, Y+41	; 0x29
    2a50:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a52:	20 e0       	ldi	r18, 0x00	; 0
    2a54:	30 e0       	ldi	r19, 0x00	; 0
    2a56:	4a e7       	ldi	r20, 0x7A	; 122
    2a58:	53 e4       	ldi	r21, 0x43	; 67
    2a5a:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2a5e:	dc 01       	movw	r26, r24
    2a60:	cb 01       	movw	r24, r22
    2a62:	8b a3       	std	Y+35, r24	; 0x23
    2a64:	9c a3       	std	Y+36, r25	; 0x24
    2a66:	ad a3       	std	Y+37, r26	; 0x25
    2a68:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a6a:	6b a1       	ldd	r22, Y+35	; 0x23
    2a6c:	7c a1       	ldd	r23, Y+36	; 0x24
    2a6e:	8d a1       	ldd	r24, Y+37	; 0x25
    2a70:	9e a1       	ldd	r25, Y+38	; 0x26
    2a72:	20 e0       	ldi	r18, 0x00	; 0
    2a74:	30 e0       	ldi	r19, 0x00	; 0
    2a76:	40 e8       	ldi	r20, 0x80	; 128
    2a78:	5f e3       	ldi	r21, 0x3F	; 63
    2a7a:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2a7e:	88 23       	and	r24, r24
    2a80:	2c f4       	brge	.+10     	; 0x2a8c <LCD_displayCharacter+0x16a>
		__ticks = 1;
    2a82:	81 e0       	ldi	r24, 0x01	; 1
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	9a a3       	std	Y+34, r25	; 0x22
    2a88:	89 a3       	std	Y+33, r24	; 0x21
    2a8a:	3f c0       	rjmp	.+126    	; 0x2b0a <LCD_displayCharacter+0x1e8>
	else if (__tmp > 65535)
    2a8c:	6b a1       	ldd	r22, Y+35	; 0x23
    2a8e:	7c a1       	ldd	r23, Y+36	; 0x24
    2a90:	8d a1       	ldd	r24, Y+37	; 0x25
    2a92:	9e a1       	ldd	r25, Y+38	; 0x26
    2a94:	20 e0       	ldi	r18, 0x00	; 0
    2a96:	3f ef       	ldi	r19, 0xFF	; 255
    2a98:	4f e7       	ldi	r20, 0x7F	; 127
    2a9a:	57 e4       	ldi	r21, 0x47	; 71
    2a9c:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    2aa0:	18 16       	cp	r1, r24
    2aa2:	4c f5       	brge	.+82     	; 0x2af6 <LCD_displayCharacter+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aa4:	6f a1       	ldd	r22, Y+39	; 0x27
    2aa6:	78 a5       	ldd	r23, Y+40	; 0x28
    2aa8:	89 a5       	ldd	r24, Y+41	; 0x29
    2aaa:	9a a5       	ldd	r25, Y+42	; 0x2a
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	40 e2       	ldi	r20, 0x20	; 32
    2ab2:	51 e4       	ldi	r21, 0x41	; 65
    2ab4:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2ab8:	dc 01       	movw	r26, r24
    2aba:	cb 01       	movw	r24, r22
    2abc:	bc 01       	movw	r22, r24
    2abe:	cd 01       	movw	r24, r26
    2ac0:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2ac4:	dc 01       	movw	r26, r24
    2ac6:	cb 01       	movw	r24, r22
    2ac8:	9a a3       	std	Y+34, r25	; 0x22
    2aca:	89 a3       	std	Y+33, r24	; 0x21
    2acc:	0f c0       	rjmp	.+30     	; 0x2aec <LCD_displayCharacter+0x1ca>
    2ace:	89 e1       	ldi	r24, 0x19	; 25
    2ad0:	90 e0       	ldi	r25, 0x00	; 0
    2ad2:	98 a3       	std	Y+32, r25	; 0x20
    2ad4:	8f 8f       	std	Y+31, r24	; 0x1f
    2ad6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2ad8:	98 a1       	ldd	r25, Y+32	; 0x20
    2ada:	01 97       	sbiw	r24, 0x01	; 1
    2adc:	f1 f7       	brne	.-4      	; 0x2ada <LCD_displayCharacter+0x1b8>
    2ade:	98 a3       	std	Y+32, r25	; 0x20
    2ae0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae2:	89 a1       	ldd	r24, Y+33	; 0x21
    2ae4:	9a a1       	ldd	r25, Y+34	; 0x22
    2ae6:	01 97       	sbiw	r24, 0x01	; 1
    2ae8:	9a a3       	std	Y+34, r25	; 0x22
    2aea:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aec:	89 a1       	ldd	r24, Y+33	; 0x21
    2aee:	9a a1       	ldd	r25, Y+34	; 0x22
    2af0:	00 97       	sbiw	r24, 0x00	; 0
    2af2:	69 f7       	brne	.-38     	; 0x2ace <LCD_displayCharacter+0x1ac>
    2af4:	14 c0       	rjmp	.+40     	; 0x2b1e <LCD_displayCharacter+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af6:	6b a1       	ldd	r22, Y+35	; 0x23
    2af8:	7c a1       	ldd	r23, Y+36	; 0x24
    2afa:	8d a1       	ldd	r24, Y+37	; 0x25
    2afc:	9e a1       	ldd	r25, Y+38	; 0x26
    2afe:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2b02:	dc 01       	movw	r26, r24
    2b04:	cb 01       	movw	r24, r22
    2b06:	9a a3       	std	Y+34, r25	; 0x22
    2b08:	89 a3       	std	Y+33, r24	; 0x21
    2b0a:	89 a1       	ldd	r24, Y+33	; 0x21
    2b0c:	9a a1       	ldd	r25, Y+34	; 0x22
    2b0e:	9e 8f       	std	Y+30, r25	; 0x1e
    2b10:	8d 8f       	std	Y+29, r24	; 0x1d
    2b12:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b14:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b16:	01 97       	sbiw	r24, 0x01	; 1
    2b18:	f1 f7       	brne	.-4      	; 0x2b16 <LCD_displayCharacter+0x1f4>
    2b1a:	9e 8f       	std	Y+30, r25	; 0x1e
    2b1c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	GPIO_writePort(LCD_DATA_PORT_ID,data); /* out the required command to the data bus D0 --> D7 */
    2b1e:	82 e0       	ldi	r24, 0x02	; 2
    2b20:	69 ad       	ldd	r22, Y+57	; 0x39
    2b22:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <GPIO_writePort>
    2b26:	80 e0       	ldi	r24, 0x00	; 0
    2b28:	90 e0       	ldi	r25, 0x00	; 0
    2b2a:	a0 e8       	ldi	r26, 0x80	; 128
    2b2c:	bf e3       	ldi	r27, 0x3F	; 63
    2b2e:	89 8f       	std	Y+25, r24	; 0x19
    2b30:	9a 8f       	std	Y+26, r25	; 0x1a
    2b32:	ab 8f       	std	Y+27, r26	; 0x1b
    2b34:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b36:	69 8d       	ldd	r22, Y+25	; 0x19
    2b38:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b3a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b3c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	4a e7       	ldi	r20, 0x7A	; 122
    2b44:	53 e4       	ldi	r21, 0x43	; 67
    2b46:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2b4a:	dc 01       	movw	r26, r24
    2b4c:	cb 01       	movw	r24, r22
    2b4e:	8d 8b       	std	Y+21, r24	; 0x15
    2b50:	9e 8b       	std	Y+22, r25	; 0x16
    2b52:	af 8b       	std	Y+23, r26	; 0x17
    2b54:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b56:	6d 89       	ldd	r22, Y+21	; 0x15
    2b58:	7e 89       	ldd	r23, Y+22	; 0x16
    2b5a:	8f 89       	ldd	r24, Y+23	; 0x17
    2b5c:	98 8d       	ldd	r25, Y+24	; 0x18
    2b5e:	20 e0       	ldi	r18, 0x00	; 0
    2b60:	30 e0       	ldi	r19, 0x00	; 0
    2b62:	40 e8       	ldi	r20, 0x80	; 128
    2b64:	5f e3       	ldi	r21, 0x3F	; 63
    2b66:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2b6a:	88 23       	and	r24, r24
    2b6c:	2c f4       	brge	.+10     	; 0x2b78 <LCD_displayCharacter+0x256>
		__ticks = 1;
    2b6e:	81 e0       	ldi	r24, 0x01	; 1
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	9c 8b       	std	Y+20, r25	; 0x14
    2b74:	8b 8b       	std	Y+19, r24	; 0x13
    2b76:	3f c0       	rjmp	.+126    	; 0x2bf6 <LCD_displayCharacter+0x2d4>
	else if (__tmp > 65535)
    2b78:	6d 89       	ldd	r22, Y+21	; 0x15
    2b7a:	7e 89       	ldd	r23, Y+22	; 0x16
    2b7c:	8f 89       	ldd	r24, Y+23	; 0x17
    2b7e:	98 8d       	ldd	r25, Y+24	; 0x18
    2b80:	20 e0       	ldi	r18, 0x00	; 0
    2b82:	3f ef       	ldi	r19, 0xFF	; 255
    2b84:	4f e7       	ldi	r20, 0x7F	; 127
    2b86:	57 e4       	ldi	r21, 0x47	; 71
    2b88:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    2b8c:	18 16       	cp	r1, r24
    2b8e:	4c f5       	brge	.+82     	; 0x2be2 <LCD_displayCharacter+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b90:	69 8d       	ldd	r22, Y+25	; 0x19
    2b92:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b98:	20 e0       	ldi	r18, 0x00	; 0
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	40 e2       	ldi	r20, 0x20	; 32
    2b9e:	51 e4       	ldi	r21, 0x41	; 65
    2ba0:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2ba4:	dc 01       	movw	r26, r24
    2ba6:	cb 01       	movw	r24, r22
    2ba8:	bc 01       	movw	r22, r24
    2baa:	cd 01       	movw	r24, r26
    2bac:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2bb0:	dc 01       	movw	r26, r24
    2bb2:	cb 01       	movw	r24, r22
    2bb4:	9c 8b       	std	Y+20, r25	; 0x14
    2bb6:	8b 8b       	std	Y+19, r24	; 0x13
    2bb8:	0f c0       	rjmp	.+30     	; 0x2bd8 <LCD_displayCharacter+0x2b6>
    2bba:	89 e1       	ldi	r24, 0x19	; 25
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	9a 8b       	std	Y+18, r25	; 0x12
    2bc0:	89 8b       	std	Y+17, r24	; 0x11
    2bc2:	89 89       	ldd	r24, Y+17	; 0x11
    2bc4:	9a 89       	ldd	r25, Y+18	; 0x12
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	f1 f7       	brne	.-4      	; 0x2bc6 <LCD_displayCharacter+0x2a4>
    2bca:	9a 8b       	std	Y+18, r25	; 0x12
    2bcc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bce:	8b 89       	ldd	r24, Y+19	; 0x13
    2bd0:	9c 89       	ldd	r25, Y+20	; 0x14
    2bd2:	01 97       	sbiw	r24, 0x01	; 1
    2bd4:	9c 8b       	std	Y+20, r25	; 0x14
    2bd6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bd8:	8b 89       	ldd	r24, Y+19	; 0x13
    2bda:	9c 89       	ldd	r25, Y+20	; 0x14
    2bdc:	00 97       	sbiw	r24, 0x00	; 0
    2bde:	69 f7       	brne	.-38     	; 0x2bba <LCD_displayCharacter+0x298>
    2be0:	14 c0       	rjmp	.+40     	; 0x2c0a <LCD_displayCharacter+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2be2:	6d 89       	ldd	r22, Y+21	; 0x15
    2be4:	7e 89       	ldd	r23, Y+22	; 0x16
    2be6:	8f 89       	ldd	r24, Y+23	; 0x17
    2be8:	98 8d       	ldd	r25, Y+24	; 0x18
    2bea:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2bee:	dc 01       	movw	r26, r24
    2bf0:	cb 01       	movw	r24, r22
    2bf2:	9c 8b       	std	Y+20, r25	; 0x14
    2bf4:	8b 8b       	std	Y+19, r24	; 0x13
    2bf6:	8b 89       	ldd	r24, Y+19	; 0x13
    2bf8:	9c 89       	ldd	r25, Y+20	; 0x14
    2bfa:	98 8b       	std	Y+16, r25	; 0x10
    2bfc:	8f 87       	std	Y+15, r24	; 0x0f
    2bfe:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c00:	98 89       	ldd	r25, Y+16	; 0x10
    2c02:	01 97       	sbiw	r24, 0x01	; 1
    2c04:	f1 f7       	brne	.-4      	; 0x2c02 <LCD_displayCharacter+0x2e0>
    2c06:	98 8b       	std	Y+16, r25	; 0x10
    2c08:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    2c0a:	83 e0       	ldi	r24, 0x03	; 3
    2c0c:	62 e0       	ldi	r22, 0x02	; 2
    2c0e:	40 e0       	ldi	r20, 0x00	; 0
    2c10:	0e 94 27 10 	call	0x204e	; 0x204e <GPIO_writePin>
    2c14:	80 e0       	ldi	r24, 0x00	; 0
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	a0 e8       	ldi	r26, 0x80	; 128
    2c1a:	bf e3       	ldi	r27, 0x3F	; 63
    2c1c:	8b 87       	std	Y+11, r24	; 0x0b
    2c1e:	9c 87       	std	Y+12, r25	; 0x0c
    2c20:	ad 87       	std	Y+13, r26	; 0x0d
    2c22:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c24:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c26:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c28:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	4a e7       	ldi	r20, 0x7A	; 122
    2c32:	53 e4       	ldi	r21, 0x43	; 67
    2c34:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2c38:	dc 01       	movw	r26, r24
    2c3a:	cb 01       	movw	r24, r22
    2c3c:	8f 83       	std	Y+7, r24	; 0x07
    2c3e:	98 87       	std	Y+8, r25	; 0x08
    2c40:	a9 87       	std	Y+9, r26	; 0x09
    2c42:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c44:	6f 81       	ldd	r22, Y+7	; 0x07
    2c46:	78 85       	ldd	r23, Y+8	; 0x08
    2c48:	89 85       	ldd	r24, Y+9	; 0x09
    2c4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e8       	ldi	r20, 0x80	; 128
    2c52:	5f e3       	ldi	r21, 0x3F	; 63
    2c54:	0e 94 8d 0b 	call	0x171a	; 0x171a <__ltsf2>
    2c58:	88 23       	and	r24, r24
    2c5a:	2c f4       	brge	.+10     	; 0x2c66 <LCD_displayCharacter+0x344>
		__ticks = 1;
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	9e 83       	std	Y+6, r25	; 0x06
    2c62:	8d 83       	std	Y+5, r24	; 0x05
    2c64:	3f c0       	rjmp	.+126    	; 0x2ce4 <LCD_displayCharacter+0x3c2>
	else if (__tmp > 65535)
    2c66:	6f 81       	ldd	r22, Y+7	; 0x07
    2c68:	78 85       	ldd	r23, Y+8	; 0x08
    2c6a:	89 85       	ldd	r24, Y+9	; 0x09
    2c6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c6e:	20 e0       	ldi	r18, 0x00	; 0
    2c70:	3f ef       	ldi	r19, 0xFF	; 255
    2c72:	4f e7       	ldi	r20, 0x7F	; 127
    2c74:	57 e4       	ldi	r21, 0x47	; 71
    2c76:	0e 94 2d 0b 	call	0x165a	; 0x165a <__gtsf2>
    2c7a:	18 16       	cp	r1, r24
    2c7c:	4c f5       	brge	.+82     	; 0x2cd0 <LCD_displayCharacter+0x3ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c80:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c82:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c84:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c86:	20 e0       	ldi	r18, 0x00	; 0
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	40 e2       	ldi	r20, 0x20	; 32
    2c8c:	51 e4       	ldi	r21, 0x41	; 65
    2c8e:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2c92:	dc 01       	movw	r26, r24
    2c94:	cb 01       	movw	r24, r22
    2c96:	bc 01       	movw	r22, r24
    2c98:	cd 01       	movw	r24, r26
    2c9a:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2c9e:	dc 01       	movw	r26, r24
    2ca0:	cb 01       	movw	r24, r22
    2ca2:	9e 83       	std	Y+6, r25	; 0x06
    2ca4:	8d 83       	std	Y+5, r24	; 0x05
    2ca6:	0f c0       	rjmp	.+30     	; 0x2cc6 <LCD_displayCharacter+0x3a4>
    2ca8:	89 e1       	ldi	r24, 0x19	; 25
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	9c 83       	std	Y+4, r25	; 0x04
    2cae:	8b 83       	std	Y+3, r24	; 0x03
    2cb0:	8b 81       	ldd	r24, Y+3	; 0x03
    2cb2:	9c 81       	ldd	r25, Y+4	; 0x04
    2cb4:	01 97       	sbiw	r24, 0x01	; 1
    2cb6:	f1 f7       	brne	.-4      	; 0x2cb4 <LCD_displayCharacter+0x392>
    2cb8:	9c 83       	std	Y+4, r25	; 0x04
    2cba:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cbc:	8d 81       	ldd	r24, Y+5	; 0x05
    2cbe:	9e 81       	ldd	r25, Y+6	; 0x06
    2cc0:	01 97       	sbiw	r24, 0x01	; 1
    2cc2:	9e 83       	std	Y+6, r25	; 0x06
    2cc4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cc6:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc8:	9e 81       	ldd	r25, Y+6	; 0x06
    2cca:	00 97       	sbiw	r24, 0x00	; 0
    2ccc:	69 f7       	brne	.-38     	; 0x2ca8 <LCD_displayCharacter+0x386>
    2cce:	14 c0       	rjmp	.+40     	; 0x2cf8 <LCD_displayCharacter+0x3d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cd0:	6f 81       	ldd	r22, Y+7	; 0x07
    2cd2:	78 85       	ldd	r23, Y+8	; 0x08
    2cd4:	89 85       	ldd	r24, Y+9	; 0x09
    2cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cd8:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2cdc:	dc 01       	movw	r26, r24
    2cde:	cb 01       	movw	r24, r22
    2ce0:	9e 83       	std	Y+6, r25	; 0x06
    2ce2:	8d 83       	std	Y+5, r24	; 0x05
    2ce4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ce6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ce8:	9a 83       	std	Y+2, r25	; 0x02
    2cea:	89 83       	std	Y+1, r24	; 0x01
    2cec:	89 81       	ldd	r24, Y+1	; 0x01
    2cee:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf0:	01 97       	sbiw	r24, 0x01	; 1
    2cf2:	f1 f7       	brne	.-4      	; 0x2cf0 <LCD_displayCharacter+0x3ce>
    2cf4:	9a 83       	std	Y+2, r25	; 0x02
    2cf6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
    2cf8:	e9 96       	adiw	r28, 0x39	; 57
    2cfa:	0f b6       	in	r0, 0x3f	; 63
    2cfc:	f8 94       	cli
    2cfe:	de bf       	out	0x3e, r29	; 62
    2d00:	0f be       	out	0x3f, r0	; 63
    2d02:	cd bf       	out	0x3d, r28	; 61
    2d04:	cf 91       	pop	r28
    2d06:	df 91       	pop	r29
    2d08:	08 95       	ret

00002d0a <LCD_displayString>:
/*
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
    2d0a:	df 93       	push	r29
    2d0c:	cf 93       	push	r28
    2d0e:	00 d0       	rcall	.+0      	; 0x2d10 <LCD_displayString+0x6>
    2d10:	0f 92       	push	r0
    2d12:	cd b7       	in	r28, 0x3d	; 61
    2d14:	de b7       	in	r29, 0x3e	; 62
    2d16:	9b 83       	std	Y+3, r25	; 0x03
    2d18:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i = 0;
    2d1a:	19 82       	std	Y+1, r1	; 0x01
    2d1c:	0e c0       	rjmp	.+28     	; 0x2d3a <LCD_displayString+0x30>
	while(Str[i] != '\0')
	{
		LCD_displayCharacter(Str[i]);
    2d1e:	89 81       	ldd	r24, Y+1	; 0x01
    2d20:	28 2f       	mov	r18, r24
    2d22:	30 e0       	ldi	r19, 0x00	; 0
    2d24:	8a 81       	ldd	r24, Y+2	; 0x02
    2d26:	9b 81       	ldd	r25, Y+3	; 0x03
    2d28:	fc 01       	movw	r30, r24
    2d2a:	e2 0f       	add	r30, r18
    2d2c:	f3 1f       	adc	r31, r19
    2d2e:	80 81       	ld	r24, Z
    2d30:	0e 94 91 14 	call	0x2922	; 0x2922 <LCD_displayCharacter>
		i++;
    2d34:	89 81       	ldd	r24, Y+1	; 0x01
    2d36:	8f 5f       	subi	r24, 0xFF	; 255
    2d38:	89 83       	std	Y+1, r24	; 0x01
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
    2d3a:	89 81       	ldd	r24, Y+1	; 0x01
    2d3c:	28 2f       	mov	r18, r24
    2d3e:	30 e0       	ldi	r19, 0x00	; 0
    2d40:	8a 81       	ldd	r24, Y+2	; 0x02
    2d42:	9b 81       	ldd	r25, Y+3	; 0x03
    2d44:	fc 01       	movw	r30, r24
    2d46:	e2 0f       	add	r30, r18
    2d48:	f3 1f       	adc	r31, r19
    2d4a:	80 81       	ld	r24, Z
    2d4c:	88 23       	and	r24, r24
    2d4e:	39 f7       	brne	.-50     	; 0x2d1e <LCD_displayString+0x14>
	{
		LCD_displayCharacter(*Str);
		Str++;
	}		
	*********************************************************/
}
    2d50:	0f 90       	pop	r0
    2d52:	0f 90       	pop	r0
    2d54:	0f 90       	pop	r0
    2d56:	cf 91       	pop	r28
    2d58:	df 91       	pop	r29
    2d5a:	08 95       	ret

00002d5c <LCD_moveCursor>:
/*
 * Description :
 * Move the cursor to a specified row and column index on the screen
 */
void LCD_moveCursor(uint8 row,uint8 col)
{
    2d5c:	df 93       	push	r29
    2d5e:	cf 93       	push	r28
    2d60:	00 d0       	rcall	.+0      	; 0x2d62 <LCD_moveCursor+0x6>
    2d62:	00 d0       	rcall	.+0      	; 0x2d64 <LCD_moveCursor+0x8>
    2d64:	0f 92       	push	r0
    2d66:	cd b7       	in	r28, 0x3d	; 61
    2d68:	de b7       	in	r29, 0x3e	; 62
    2d6a:	8a 83       	std	Y+2, r24	; 0x02
    2d6c:	6b 83       	std	Y+3, r22	; 0x03
	uint8 lcd_memory_address;
	
	/* Calculate the required address in the LCD DDRAM */
	switch(row)
    2d6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d70:	28 2f       	mov	r18, r24
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	3d 83       	std	Y+5, r19	; 0x05
    2d76:	2c 83       	std	Y+4, r18	; 0x04
    2d78:	8c 81       	ldd	r24, Y+4	; 0x04
    2d7a:	9d 81       	ldd	r25, Y+5	; 0x05
    2d7c:	81 30       	cpi	r24, 0x01	; 1
    2d7e:	91 05       	cpc	r25, r1
    2d80:	c1 f0       	breq	.+48     	; 0x2db2 <LCD_moveCursor+0x56>
    2d82:	2c 81       	ldd	r18, Y+4	; 0x04
    2d84:	3d 81       	ldd	r19, Y+5	; 0x05
    2d86:	22 30       	cpi	r18, 0x02	; 2
    2d88:	31 05       	cpc	r19, r1
    2d8a:	2c f4       	brge	.+10     	; 0x2d96 <LCD_moveCursor+0x3a>
    2d8c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d8e:	9d 81       	ldd	r25, Y+5	; 0x05
    2d90:	00 97       	sbiw	r24, 0x00	; 0
    2d92:	61 f0       	breq	.+24     	; 0x2dac <LCD_moveCursor+0x50>
    2d94:	19 c0       	rjmp	.+50     	; 0x2dc8 <LCD_moveCursor+0x6c>
    2d96:	2c 81       	ldd	r18, Y+4	; 0x04
    2d98:	3d 81       	ldd	r19, Y+5	; 0x05
    2d9a:	22 30       	cpi	r18, 0x02	; 2
    2d9c:	31 05       	cpc	r19, r1
    2d9e:	69 f0       	breq	.+26     	; 0x2dba <LCD_moveCursor+0x5e>
    2da0:	8c 81       	ldd	r24, Y+4	; 0x04
    2da2:	9d 81       	ldd	r25, Y+5	; 0x05
    2da4:	83 30       	cpi	r24, 0x03	; 3
    2da6:	91 05       	cpc	r25, r1
    2da8:	61 f0       	breq	.+24     	; 0x2dc2 <LCD_moveCursor+0x66>
    2daa:	0e c0       	rjmp	.+28     	; 0x2dc8 <LCD_moveCursor+0x6c>
	{
		case 0:
			lcd_memory_address=col;
    2dac:	8b 81       	ldd	r24, Y+3	; 0x03
    2dae:	89 83       	std	Y+1, r24	; 0x01
    2db0:	0b c0       	rjmp	.+22     	; 0x2dc8 <LCD_moveCursor+0x6c>
				break;
		case 1:
			lcd_memory_address=col+0x40;
    2db2:	8b 81       	ldd	r24, Y+3	; 0x03
    2db4:	80 5c       	subi	r24, 0xC0	; 192
    2db6:	89 83       	std	Y+1, r24	; 0x01
    2db8:	07 c0       	rjmp	.+14     	; 0x2dc8 <LCD_moveCursor+0x6c>
				break;
		case 2:
			lcd_memory_address=col+0x10;
    2dba:	8b 81       	ldd	r24, Y+3	; 0x03
    2dbc:	80 5f       	subi	r24, 0xF0	; 240
    2dbe:	89 83       	std	Y+1, r24	; 0x01
    2dc0:	03 c0       	rjmp	.+6      	; 0x2dc8 <LCD_moveCursor+0x6c>
				break;
		case 3:
			lcd_memory_address=col+0x50;
    2dc2:	8b 81       	ldd	r24, Y+3	; 0x03
    2dc4:	80 5b       	subi	r24, 0xB0	; 176
    2dc6:	89 83       	std	Y+1, r24	; 0x01
				break;
	}					
	/* Move the LCD cursor to this specific address */
	LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
    2dc8:	89 81       	ldd	r24, Y+1	; 0x01
    2dca:	80 68       	ori	r24, 0x80	; 128
    2dcc:	0e 94 9d 12 	call	0x253a	; 0x253a <LCD_sendCommand>
}
    2dd0:	0f 90       	pop	r0
    2dd2:	0f 90       	pop	r0
    2dd4:	0f 90       	pop	r0
    2dd6:	0f 90       	pop	r0
    2dd8:	0f 90       	pop	r0
    2dda:	cf 91       	pop	r28
    2ddc:	df 91       	pop	r29
    2dde:	08 95       	ret

00002de0 <LCD_displayStringRowColumn>:
/*
 * Description :
 * Display the required string in a specified row and column index on the screen
 */
void LCD_displayStringRowColumn(uint8 row,uint8 col,const char *Str)
{
    2de0:	df 93       	push	r29
    2de2:	cf 93       	push	r28
    2de4:	00 d0       	rcall	.+0      	; 0x2de6 <LCD_displayStringRowColumn+0x6>
    2de6:	00 d0       	rcall	.+0      	; 0x2de8 <LCD_displayStringRowColumn+0x8>
    2de8:	cd b7       	in	r28, 0x3d	; 61
    2dea:	de b7       	in	r29, 0x3e	; 62
    2dec:	89 83       	std	Y+1, r24	; 0x01
    2dee:	6a 83       	std	Y+2, r22	; 0x02
    2df0:	5c 83       	std	Y+4, r21	; 0x04
    2df2:	4b 83       	std	Y+3, r20	; 0x03
	LCD_moveCursor(row,col); /* go to to the required LCD position */
    2df4:	89 81       	ldd	r24, Y+1	; 0x01
    2df6:	6a 81       	ldd	r22, Y+2	; 0x02
    2df8:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <LCD_moveCursor>
	LCD_displayString(Str); /* display the string */
    2dfc:	8b 81       	ldd	r24, Y+3	; 0x03
    2dfe:	9c 81       	ldd	r25, Y+4	; 0x04
    2e00:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <LCD_displayString>
}
    2e04:	0f 90       	pop	r0
    2e06:	0f 90       	pop	r0
    2e08:	0f 90       	pop	r0
    2e0a:	0f 90       	pop	r0
    2e0c:	cf 91       	pop	r28
    2e0e:	df 91       	pop	r29
    2e10:	08 95       	ret

00002e12 <LCD_intgerToString>:
/*
 * Description :
 * Display the required decimal value on the screen
 */
void LCD_intgerToString(int data)
{
    2e12:	df 93       	push	r29
    2e14:	cf 93       	push	r28
    2e16:	cd b7       	in	r28, 0x3d	; 61
    2e18:	de b7       	in	r29, 0x3e	; 62
    2e1a:	62 97       	sbiw	r28, 0x12	; 18
    2e1c:	0f b6       	in	r0, 0x3f	; 63
    2e1e:	f8 94       	cli
    2e20:	de bf       	out	0x3e, r29	; 62
    2e22:	0f be       	out	0x3f, r0	; 63
    2e24:	cd bf       	out	0x3d, r28	; 61
    2e26:	9a 8b       	std	Y+18, r25	; 0x12
    2e28:	89 8b       	std	Y+17, r24	; 0x11
   char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
    2e2a:	89 89       	ldd	r24, Y+17	; 0x11
    2e2c:	9a 89       	ldd	r25, Y+18	; 0x12
    2e2e:	9e 01       	movw	r18, r28
    2e30:	2f 5f       	subi	r18, 0xFF	; 255
    2e32:	3f 4f       	sbci	r19, 0xFF	; 255
    2e34:	b9 01       	movw	r22, r18
    2e36:	4a e0       	ldi	r20, 0x0A	; 10
    2e38:	50 e0       	ldi	r21, 0x00	; 0
    2e3a:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <itoa>
   LCD_displayString(buff); /* Display the string */
    2e3e:	ce 01       	movw	r24, r28
    2e40:	01 96       	adiw	r24, 0x01	; 1
    2e42:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <LCD_displayString>
}
    2e46:	62 96       	adiw	r28, 0x12	; 18
    2e48:	0f b6       	in	r0, 0x3f	; 63
    2e4a:	f8 94       	cli
    2e4c:	de bf       	out	0x3e, r29	; 62
    2e4e:	0f be       	out	0x3f, r0	; 63
    2e50:	cd bf       	out	0x3d, r28	; 61
    2e52:	cf 91       	pop	r28
    2e54:	df 91       	pop	r29
    2e56:	08 95       	ret

00002e58 <LCD_clearScreen>:
/*
 * Description :
 * Send the clear screen command
 */
void LCD_clearScreen(void)
{
    2e58:	df 93       	push	r29
    2e5a:	cf 93       	push	r28
    2e5c:	cd b7       	in	r28, 0x3d	; 61
    2e5e:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* Send clear display command */
    2e60:	81 e0       	ldi	r24, 0x01	; 1
    2e62:	0e 94 9d 12 	call	0x253a	; 0x253a <LCD_sendCommand>
}
    2e66:	cf 91       	pop	r28
    2e68:	df 91       	pop	r29
    2e6a:	08 95       	ret

00002e6c <LM35_getTemperature>:
/*
 * Description :
 * Function responsible for calculate the temperature from the ADC digital value.
 */
uint8 LM35_getTemperature(void)
{
    2e6c:	df 93       	push	r29
    2e6e:	cf 93       	push	r28
    2e70:	00 d0       	rcall	.+0      	; 0x2e72 <LM35_getTemperature+0x6>
    2e72:	0f 92       	push	r0
    2e74:	cd b7       	in	r28, 0x3d	; 61
    2e76:	de b7       	in	r29, 0x3e	; 62
	uint8 temp_value = 0;
    2e78:	1b 82       	std	Y+3, r1	; 0x03

	uint16 adc_value = 0;
    2e7a:	1a 82       	std	Y+2, r1	; 0x02
    2e7c:	19 82       	std	Y+1, r1	; 0x01

	/* Read ADC channel where the temperature sensor is connected */
	adc_value = ADC_readChannel(SENSOR_CHANNEL_ID);
    2e7e:	82 e0       	ldi	r24, 0x02	; 2
    2e80:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <ADC_readChannel>
    2e84:	9a 83       	std	Y+2, r25	; 0x02
    2e86:	89 83       	std	Y+1, r24	; 0x01

	/* Calculate the temperature from the ADC value*/
	temp_value = (uint8)(((uint32)adc_value*SENSOR_MAX_TEMPERATURE*ADC_REF_VOLT_VALUE)/(ADC_MAXIMUM_VALUE*SENSOR_MAX_VOLT_VALUE));
    2e88:	89 81       	ldd	r24, Y+1	; 0x01
    2e8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8c:	cc 01       	movw	r24, r24
    2e8e:	a0 e0       	ldi	r26, 0x00	; 0
    2e90:	b0 e0       	ldi	r27, 0x00	; 0
    2e92:	26 e9       	ldi	r18, 0x96	; 150
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	40 e0       	ldi	r20, 0x00	; 0
    2e98:	50 e0       	ldi	r21, 0x00	; 0
    2e9a:	bc 01       	movw	r22, r24
    2e9c:	cd 01       	movw	r24, r26
    2e9e:	0e 94 9b 1c 	call	0x3936	; 0x3936 <__mulsi3>
    2ea2:	dc 01       	movw	r26, r24
    2ea4:	cb 01       	movw	r24, r22
    2ea6:	bc 01       	movw	r22, r24
    2ea8:	cd 01       	movw	r24, r26
    2eaa:	0e 94 11 0c 	call	0x1822	; 0x1822 <__floatunsisf>
    2eae:	dc 01       	movw	r26, r24
    2eb0:	cb 01       	movw	r24, r22
    2eb2:	bc 01       	movw	r22, r24
    2eb4:	cd 01       	movw	r24, r26
    2eb6:	2a e0       	ldi	r18, 0x0A	; 10
    2eb8:	37 ed       	ldi	r19, 0xD7	; 215
    2eba:	43 e2       	ldi	r20, 0x23	; 35
    2ebc:	50 e4       	ldi	r21, 0x40	; 64
    2ebe:	0e 94 87 09 	call	0x130e	; 0x130e <__mulsf3>
    2ec2:	dc 01       	movw	r26, r24
    2ec4:	cb 01       	movw	r24, r22
    2ec6:	bc 01       	movw	r22, r24
    2ec8:	cd 01       	movw	r24, r26
    2eca:	20 e0       	ldi	r18, 0x00	; 0
    2ecc:	30 ed       	ldi	r19, 0xD0	; 208
    2ece:	4f eb       	ldi	r20, 0xBF	; 191
    2ed0:	54 e4       	ldi	r21, 0x44	; 68
    2ed2:	0e 94 81 0a 	call	0x1502	; 0x1502 <__divsf3>
    2ed6:	dc 01       	movw	r26, r24
    2ed8:	cb 01       	movw	r24, r22
    2eda:	bc 01       	movw	r22, r24
    2edc:	cd 01       	movw	r24, r26
    2ede:	0e 94 3c 01 	call	0x278	; 0x278 <__fixunssfsi>
    2ee2:	dc 01       	movw	r26, r24
    2ee4:	cb 01       	movw	r24, r22
    2ee6:	8b 83       	std	Y+3, r24	; 0x03

	return temp_value;
    2ee8:	8b 81       	ldd	r24, Y+3	; 0x03
}
    2eea:	0f 90       	pop	r0
    2eec:	0f 90       	pop	r0
    2eee:	0f 90       	pop	r0
    2ef0:	cf 91       	pop	r28
    2ef2:	df 91       	pop	r29
    2ef4:	08 95       	ret

00002ef6 <map>:
#include "adc.h"
#include "lcd.h"
#include "lm35_sensor.h"
#include "DC_Motor.h"

uint8 map(uint64 x , uint64 inMin , uint64 inMax , uint64 outMin , uint64 outMax){
    2ef6:	2f 92       	push	r2
    2ef8:	3f 92       	push	r3
    2efa:	4f 92       	push	r4
    2efc:	5f 92       	push	r5
    2efe:	6f 92       	push	r6
    2f00:	7f 92       	push	r7
    2f02:	8f 92       	push	r8
    2f04:	9f 92       	push	r9
    2f06:	af 92       	push	r10
    2f08:	bf 92       	push	r11
    2f0a:	cf 92       	push	r12
    2f0c:	df 92       	push	r13
    2f0e:	ef 92       	push	r14
    2f10:	ff 92       	push	r15
    2f12:	0f 93       	push	r16
    2f14:	1f 93       	push	r17
    2f16:	df 93       	push	r29
    2f18:	cf 93       	push	r28
    2f1a:	cd b7       	in	r28, 0x3d	; 61
    2f1c:	de b7       	in	r29, 0x3e	; 62
    2f1e:	ce 56       	subi	r28, 0x6E	; 110
    2f20:	d0 40       	sbci	r29, 0x00	; 0
    2f22:	0f b6       	in	r0, 0x3f	; 63
    2f24:	f8 94       	cli
    2f26:	de bf       	out	0x3e, r29	; 62
    2f28:	0f be       	out	0x3f, r0	; 63
    2f2a:	cd bf       	out	0x3d, r28	; 61
    2f2c:	29 83       	std	Y+1, r18	; 0x01
    2f2e:	3a 83       	std	Y+2, r19	; 0x02
    2f30:	4b 83       	std	Y+3, r20	; 0x03
    2f32:	5c 83       	std	Y+4, r21	; 0x04
    2f34:	6d 83       	std	Y+5, r22	; 0x05
    2f36:	7e 83       	std	Y+6, r23	; 0x06
    2f38:	8f 83       	std	Y+7, r24	; 0x07
    2f3a:	98 87       	std	Y+8, r25	; 0x08
    2f3c:	a9 86       	std	Y+9, r10	; 0x09
    2f3e:	ba 86       	std	Y+10, r11	; 0x0a
    2f40:	cb 86       	std	Y+11, r12	; 0x0b
    2f42:	dc 86       	std	Y+12, r13	; 0x0c
    2f44:	ed 86       	std	Y+13, r14	; 0x0d
    2f46:	fe 86       	std	Y+14, r15	; 0x0e
    2f48:	0f 87       	std	Y+15, r16	; 0x0f
    2f4a:	18 8b       	std	Y+16, r17	; 0x10

	return ((x - inMin) * (outMax - outMin) / inMax - inMin) + outMin;
    2f4c:	89 81       	ldd	r24, Y+1	; 0x01
    2f4e:	89 8f       	std	Y+25, r24	; 0x19
    2f50:	9a 81       	ldd	r25, Y+2	; 0x02
    2f52:	9a 8f       	std	Y+26, r25	; 0x1a
    2f54:	8b 81       	ldd	r24, Y+3	; 0x03
    2f56:	8b 8f       	std	Y+27, r24	; 0x1b
    2f58:	9c 81       	ldd	r25, Y+4	; 0x04
    2f5a:	9c 8f       	std	Y+28, r25	; 0x1c
    2f5c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f5e:	8d 8f       	std	Y+29, r24	; 0x1d
    2f60:	9e 81       	ldd	r25, Y+6	; 0x06
    2f62:	9e 8f       	std	Y+30, r25	; 0x1e
    2f64:	8f 81       	ldd	r24, Y+7	; 0x07
    2f66:	8f 8f       	std	Y+31, r24	; 0x1f
    2f68:	98 85       	ldd	r25, Y+8	; 0x08
    2f6a:	98 a3       	std	Y+32, r25	; 0x20
    2f6c:	89 85       	ldd	r24, Y+9	; 0x09
    2f6e:	89 a3       	std	Y+33, r24	; 0x21
    2f70:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f72:	9a a3       	std	Y+34, r25	; 0x22
    2f74:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f76:	8b a3       	std	Y+35, r24	; 0x23
    2f78:	9c 85       	ldd	r25, Y+12	; 0x0c
    2f7a:	9c a3       	std	Y+36, r25	; 0x24
    2f7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f7e:	8d a3       	std	Y+37, r24	; 0x25
    2f80:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f82:	9e a3       	std	Y+38, r25	; 0x26
    2f84:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f86:	8f a3       	std	Y+39, r24	; 0x27
    2f88:	98 89       	ldd	r25, Y+16	; 0x10
    2f8a:	98 a7       	std	Y+40, r25	; 0x28
    2f8c:	89 8d       	ldd	r24, Y+25	; 0x19
    2f8e:	99 a1       	ldd	r25, Y+33	; 0x21
    2f90:	89 1b       	sub	r24, r25
    2f92:	89 a7       	std	Y+41, r24	; 0x29
    2f94:	81 e0       	ldi	r24, 0x01	; 1
    2f96:	89 ab       	std	Y+49, r24	; 0x31
    2f98:	99 a5       	ldd	r25, Y+41	; 0x29
    2f9a:	89 8d       	ldd	r24, Y+25	; 0x19
    2f9c:	89 17       	cp	r24, r25
    2f9e:	08 f0       	brcs	.+2      	; 0x2fa2 <map+0xac>
    2fa0:	19 aa       	std	Y+49, r1	; 0x31
    2fa2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2fa4:	8a a1       	ldd	r24, Y+34	; 0x22
    2fa6:	98 1b       	sub	r25, r24
    2fa8:	9a a7       	std	Y+42, r25	; 0x2a
    2faa:	91 e0       	ldi	r25, 0x01	; 1
    2fac:	9a ab       	std	Y+50, r25	; 0x32
    2fae:	8a a5       	ldd	r24, Y+42	; 0x2a
    2fb0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2fb2:	98 17       	cp	r25, r24
    2fb4:	08 f0       	brcs	.+2      	; 0x2fb8 <map+0xc2>
    2fb6:	1a aa       	std	Y+50, r1	; 0x32
    2fb8:	8a a5       	ldd	r24, Y+42	; 0x2a
    2fba:	99 a9       	ldd	r25, Y+49	; 0x31
    2fbc:	89 1b       	sub	r24, r25
    2fbe:	8b ab       	std	Y+51, r24	; 0x33
    2fc0:	81 e0       	ldi	r24, 0x01	; 1
    2fc2:	8c ab       	std	Y+52, r24	; 0x34
    2fc4:	9b a9       	ldd	r25, Y+51	; 0x33
    2fc6:	8a a5       	ldd	r24, Y+42	; 0x2a
    2fc8:	89 17       	cp	r24, r25
    2fca:	08 f0       	brcs	.+2      	; 0x2fce <map+0xd8>
    2fcc:	1c aa       	std	Y+52, r1	; 0x34
    2fce:	9a a9       	ldd	r25, Y+50	; 0x32
    2fd0:	8c a9       	ldd	r24, Y+52	; 0x34
    2fd2:	98 2b       	or	r25, r24
    2fd4:	9a ab       	std	Y+50, r25	; 0x32
    2fd6:	9b a9       	ldd	r25, Y+51	; 0x33
    2fd8:	9a a7       	std	Y+42, r25	; 0x2a
    2fda:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fdc:	9b a1       	ldd	r25, Y+35	; 0x23
    2fde:	89 1b       	sub	r24, r25
    2fe0:	8b a7       	std	Y+43, r24	; 0x2b
    2fe2:	81 e0       	ldi	r24, 0x01	; 1
    2fe4:	8d ab       	std	Y+53, r24	; 0x35
    2fe6:	9b a5       	ldd	r25, Y+43	; 0x2b
    2fe8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fea:	89 17       	cp	r24, r25
    2fec:	08 f0       	brcs	.+2      	; 0x2ff0 <map+0xfa>
    2fee:	1d aa       	std	Y+53, r1	; 0x35
    2ff0:	9b a5       	ldd	r25, Y+43	; 0x2b
    2ff2:	8a a9       	ldd	r24, Y+50	; 0x32
    2ff4:	98 1b       	sub	r25, r24
    2ff6:	9e ab       	std	Y+54, r25	; 0x36
    2ff8:	91 e0       	ldi	r25, 0x01	; 1
    2ffa:	9f ab       	std	Y+55, r25	; 0x37
    2ffc:	8e a9       	ldd	r24, Y+54	; 0x36
    2ffe:	9b a5       	ldd	r25, Y+43	; 0x2b
    3000:	98 17       	cp	r25, r24
    3002:	08 f0       	brcs	.+2      	; 0x3006 <map+0x110>
    3004:	1f aa       	std	Y+55, r1	; 0x37
    3006:	8d a9       	ldd	r24, Y+53	; 0x35
    3008:	9f a9       	ldd	r25, Y+55	; 0x37
    300a:	89 2b       	or	r24, r25
    300c:	8d ab       	std	Y+53, r24	; 0x35
    300e:	8e a9       	ldd	r24, Y+54	; 0x36
    3010:	8b a7       	std	Y+43, r24	; 0x2b
    3012:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3014:	8c a1       	ldd	r24, Y+36	; 0x24
    3016:	98 1b       	sub	r25, r24
    3018:	9c a7       	std	Y+44, r25	; 0x2c
    301a:	91 e0       	ldi	r25, 0x01	; 1
    301c:	98 af       	std	Y+56, r25	; 0x38
    301e:	8c a5       	ldd	r24, Y+44	; 0x2c
    3020:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3022:	98 17       	cp	r25, r24
    3024:	08 f0       	brcs	.+2      	; 0x3028 <map+0x132>
    3026:	18 ae       	std	Y+56, r1	; 0x38
    3028:	8c a5       	ldd	r24, Y+44	; 0x2c
    302a:	9d a9       	ldd	r25, Y+53	; 0x35
    302c:	89 1b       	sub	r24, r25
    302e:	89 af       	std	Y+57, r24	; 0x39
    3030:	81 e0       	ldi	r24, 0x01	; 1
    3032:	8a af       	std	Y+58, r24	; 0x3a
    3034:	99 ad       	ldd	r25, Y+57	; 0x39
    3036:	8c a5       	ldd	r24, Y+44	; 0x2c
    3038:	89 17       	cp	r24, r25
    303a:	08 f0       	brcs	.+2      	; 0x303e <map+0x148>
    303c:	1a ae       	std	Y+58, r1	; 0x3a
    303e:	98 ad       	ldd	r25, Y+56	; 0x38
    3040:	8a ad       	ldd	r24, Y+58	; 0x3a
    3042:	98 2b       	or	r25, r24
    3044:	98 af       	std	Y+56, r25	; 0x38
    3046:	99 ad       	ldd	r25, Y+57	; 0x39
    3048:	9c a7       	std	Y+44, r25	; 0x2c
    304a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    304c:	9d a1       	ldd	r25, Y+37	; 0x25
    304e:	89 1b       	sub	r24, r25
    3050:	8d a7       	std	Y+45, r24	; 0x2d
    3052:	81 e0       	ldi	r24, 0x01	; 1
    3054:	8b af       	std	Y+59, r24	; 0x3b
    3056:	9d a5       	ldd	r25, Y+45	; 0x2d
    3058:	8d 8d       	ldd	r24, Y+29	; 0x1d
    305a:	89 17       	cp	r24, r25
    305c:	08 f0       	brcs	.+2      	; 0x3060 <map+0x16a>
    305e:	1b ae       	std	Y+59, r1	; 0x3b
    3060:	9d a5       	ldd	r25, Y+45	; 0x2d
    3062:	88 ad       	ldd	r24, Y+56	; 0x38
    3064:	98 1b       	sub	r25, r24
    3066:	9c af       	std	Y+60, r25	; 0x3c
    3068:	91 e0       	ldi	r25, 0x01	; 1
    306a:	9d af       	std	Y+61, r25	; 0x3d
    306c:	8c ad       	ldd	r24, Y+60	; 0x3c
    306e:	9d a5       	ldd	r25, Y+45	; 0x2d
    3070:	98 17       	cp	r25, r24
    3072:	08 f0       	brcs	.+2      	; 0x3076 <map+0x180>
    3074:	1d ae       	std	Y+61, r1	; 0x3d
    3076:	8b ad       	ldd	r24, Y+59	; 0x3b
    3078:	9d ad       	ldd	r25, Y+61	; 0x3d
    307a:	89 2b       	or	r24, r25
    307c:	8b af       	std	Y+59, r24	; 0x3b
    307e:	8c ad       	ldd	r24, Y+60	; 0x3c
    3080:	8d a7       	std	Y+45, r24	; 0x2d
    3082:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3084:	8e a1       	ldd	r24, Y+38	; 0x26
    3086:	98 1b       	sub	r25, r24
    3088:	9e a7       	std	Y+46, r25	; 0x2e
    308a:	91 e0       	ldi	r25, 0x01	; 1
    308c:	9e af       	std	Y+62, r25	; 0x3e
    308e:	8e a5       	ldd	r24, Y+46	; 0x2e
    3090:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3092:	98 17       	cp	r25, r24
    3094:	08 f0       	brcs	.+2      	; 0x3098 <map+0x1a2>
    3096:	1e ae       	std	Y+62, r1	; 0x3e
    3098:	8e a5       	ldd	r24, Y+46	; 0x2e
    309a:	9b ad       	ldd	r25, Y+59	; 0x3b
    309c:	89 1b       	sub	r24, r25
    309e:	8f af       	std	Y+63, r24	; 0x3f
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	21 96       	adiw	r28, 0x01	; 1
    30a4:	8f af       	std	Y+63, r24	; 0x3f
    30a6:	21 97       	sbiw	r28, 0x01	; 1
    30a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    30aa:	8e a5       	ldd	r24, Y+46	; 0x2e
    30ac:	89 17       	cp	r24, r25
    30ae:	18 f0       	brcs	.+6      	; 0x30b6 <map+0x1c0>
    30b0:	21 96       	adiw	r28, 0x01	; 1
    30b2:	1f ae       	std	Y+63, r1	; 0x3f
    30b4:	21 97       	sbiw	r28, 0x01	; 1
    30b6:	9e ad       	ldd	r25, Y+62	; 0x3e
    30b8:	21 96       	adiw	r28, 0x01	; 1
    30ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    30bc:	21 97       	sbiw	r28, 0x01	; 1
    30be:	98 2b       	or	r25, r24
    30c0:	9e af       	std	Y+62, r25	; 0x3e
    30c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    30c4:	9e a7       	std	Y+46, r25	; 0x2e
    30c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30c8:	9f a1       	ldd	r25, Y+39	; 0x27
    30ca:	89 1b       	sub	r24, r25
    30cc:	8f a7       	std	Y+47, r24	; 0x2f
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	22 96       	adiw	r28, 0x02	; 2
    30d2:	8f af       	std	Y+63, r24	; 0x3f
    30d4:	22 97       	sbiw	r28, 0x02	; 2
    30d6:	9f a5       	ldd	r25, Y+47	; 0x2f
    30d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30da:	89 17       	cp	r24, r25
    30dc:	18 f0       	brcs	.+6      	; 0x30e4 <map+0x1ee>
    30de:	22 96       	adiw	r28, 0x02	; 2
    30e0:	1f ae       	std	Y+63, r1	; 0x3f
    30e2:	22 97       	sbiw	r28, 0x02	; 2
    30e4:	9f a5       	ldd	r25, Y+47	; 0x2f
    30e6:	8e ad       	ldd	r24, Y+62	; 0x3e
    30e8:	98 1b       	sub	r25, r24
    30ea:	23 96       	adiw	r28, 0x03	; 3
    30ec:	9f af       	std	Y+63, r25	; 0x3f
    30ee:	23 97       	sbiw	r28, 0x03	; 3
    30f0:	91 e0       	ldi	r25, 0x01	; 1
    30f2:	24 96       	adiw	r28, 0x04	; 4
    30f4:	9f af       	std	Y+63, r25	; 0x3f
    30f6:	24 97       	sbiw	r28, 0x04	; 4
    30f8:	23 96       	adiw	r28, 0x03	; 3
    30fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    30fc:	23 97       	sbiw	r28, 0x03	; 3
    30fe:	9f a5       	ldd	r25, Y+47	; 0x2f
    3100:	98 17       	cp	r25, r24
    3102:	18 f0       	brcs	.+6      	; 0x310a <map+0x214>
    3104:	24 96       	adiw	r28, 0x04	; 4
    3106:	1f ae       	std	Y+63, r1	; 0x3f
    3108:	24 97       	sbiw	r28, 0x04	; 4
    310a:	22 96       	adiw	r28, 0x02	; 2
    310c:	8f ad       	ldd	r24, Y+63	; 0x3f
    310e:	22 97       	sbiw	r28, 0x02	; 2
    3110:	24 96       	adiw	r28, 0x04	; 4
    3112:	9f ad       	ldd	r25, Y+63	; 0x3f
    3114:	24 97       	sbiw	r28, 0x04	; 4
    3116:	89 2b       	or	r24, r25
    3118:	22 96       	adiw	r28, 0x02	; 2
    311a:	8f af       	std	Y+63, r24	; 0x3f
    311c:	22 97       	sbiw	r28, 0x02	; 2
    311e:	23 96       	adiw	r28, 0x03	; 3
    3120:	8f ad       	ldd	r24, Y+63	; 0x3f
    3122:	23 97       	sbiw	r28, 0x03	; 3
    3124:	8f a7       	std	Y+47, r24	; 0x2f
    3126:	98 a1       	ldd	r25, Y+32	; 0x20
    3128:	88 a5       	ldd	r24, Y+40	; 0x28
    312a:	98 1b       	sub	r25, r24
    312c:	98 ab       	std	Y+48, r25	; 0x30
    312e:	88 a9       	ldd	r24, Y+48	; 0x30
    3130:	22 96       	adiw	r28, 0x02	; 2
    3132:	9f ad       	ldd	r25, Y+63	; 0x3f
    3134:	22 97       	sbiw	r28, 0x02	; 2
    3136:	89 1b       	sub	r24, r25
    3138:	88 ab       	std	Y+48, r24	; 0x30
    313a:	89 a5       	ldd	r24, Y+41	; 0x29
    313c:	89 8b       	std	Y+17, r24	; 0x11
    313e:	9a a5       	ldd	r25, Y+42	; 0x2a
    3140:	9a 8b       	std	Y+18, r25	; 0x12
    3142:	8b a5       	ldd	r24, Y+43	; 0x2b
    3144:	8b 8b       	std	Y+19, r24	; 0x13
    3146:	9c a5       	ldd	r25, Y+44	; 0x2c
    3148:	9c 8b       	std	Y+20, r25	; 0x14
    314a:	8d a5       	ldd	r24, Y+45	; 0x2d
    314c:	8d 8b       	std	Y+21, r24	; 0x15
    314e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3150:	9e 8b       	std	Y+22, r25	; 0x16
    3152:	8f a5       	ldd	r24, Y+47	; 0x2f
    3154:	8f 8b       	std	Y+23, r24	; 0x17
    3156:	98 a9       	ldd	r25, Y+48	; 0x30
    3158:	98 8f       	std	Y+24, r25	; 0x18
    315a:	cd 56       	subi	r28, 0x6D	; 109
    315c:	df 4f       	sbci	r29, 0xFF	; 255
    315e:	88 81       	ld	r24, Y
    3160:	c3 59       	subi	r28, 0x93	; 147
    3162:	d0 40       	sbci	r29, 0x00	; 0
    3164:	25 96       	adiw	r28, 0x05	; 5
    3166:	8f af       	std	Y+63, r24	; 0x3f
    3168:	25 97       	sbiw	r28, 0x05	; 5
    316a:	cc 56       	subi	r28, 0x6C	; 108
    316c:	df 4f       	sbci	r29, 0xFF	; 255
    316e:	98 81       	ld	r25, Y
    3170:	c4 59       	subi	r28, 0x94	; 148
    3172:	d0 40       	sbci	r29, 0x00	; 0
    3174:	26 96       	adiw	r28, 0x06	; 6
    3176:	9f af       	std	Y+63, r25	; 0x3f
    3178:	26 97       	sbiw	r28, 0x06	; 6
    317a:	cb 56       	subi	r28, 0x6B	; 107
    317c:	df 4f       	sbci	r29, 0xFF	; 255
    317e:	88 81       	ld	r24, Y
    3180:	c5 59       	subi	r28, 0x95	; 149
    3182:	d0 40       	sbci	r29, 0x00	; 0
    3184:	27 96       	adiw	r28, 0x07	; 7
    3186:	8f af       	std	Y+63, r24	; 0x3f
    3188:	27 97       	sbiw	r28, 0x07	; 7
    318a:	ca 56       	subi	r28, 0x6A	; 106
    318c:	df 4f       	sbci	r29, 0xFF	; 255
    318e:	98 81       	ld	r25, Y
    3190:	c6 59       	subi	r28, 0x96	; 150
    3192:	d0 40       	sbci	r29, 0x00	; 0
    3194:	28 96       	adiw	r28, 0x08	; 8
    3196:	9f af       	std	Y+63, r25	; 0x3f
    3198:	28 97       	sbiw	r28, 0x08	; 8
    319a:	c9 56       	subi	r28, 0x69	; 105
    319c:	df 4f       	sbci	r29, 0xFF	; 255
    319e:	88 81       	ld	r24, Y
    31a0:	c7 59       	subi	r28, 0x97	; 151
    31a2:	d0 40       	sbci	r29, 0x00	; 0
    31a4:	29 96       	adiw	r28, 0x09	; 9
    31a6:	8f af       	std	Y+63, r24	; 0x3f
    31a8:	29 97       	sbiw	r28, 0x09	; 9
    31aa:	c8 56       	subi	r28, 0x68	; 104
    31ac:	df 4f       	sbci	r29, 0xFF	; 255
    31ae:	98 81       	ld	r25, Y
    31b0:	c8 59       	subi	r28, 0x98	; 152
    31b2:	d0 40       	sbci	r29, 0x00	; 0
    31b4:	2a 96       	adiw	r28, 0x0a	; 10
    31b6:	9f af       	std	Y+63, r25	; 0x3f
    31b8:	2a 97       	sbiw	r28, 0x0a	; 10
    31ba:	c7 56       	subi	r28, 0x67	; 103
    31bc:	df 4f       	sbci	r29, 0xFF	; 255
    31be:	88 81       	ld	r24, Y
    31c0:	c9 59       	subi	r28, 0x99	; 153
    31c2:	d0 40       	sbci	r29, 0x00	; 0
    31c4:	2b 96       	adiw	r28, 0x0b	; 11
    31c6:	8f af       	std	Y+63, r24	; 0x3f
    31c8:	2b 97       	sbiw	r28, 0x0b	; 11
    31ca:	c6 56       	subi	r28, 0x66	; 102
    31cc:	df 4f       	sbci	r29, 0xFF	; 255
    31ce:	98 81       	ld	r25, Y
    31d0:	ca 59       	subi	r28, 0x9A	; 154
    31d2:	d0 40       	sbci	r29, 0x00	; 0
    31d4:	2c 96       	adiw	r28, 0x0c	; 12
    31d6:	9f af       	std	Y+63, r25	; 0x3f
    31d8:	2c 97       	sbiw	r28, 0x0c	; 12
    31da:	c5 57       	subi	r28, 0x75	; 117
    31dc:	df 4f       	sbci	r29, 0xFF	; 255
    31de:	88 81       	ld	r24, Y
    31e0:	cb 58       	subi	r28, 0x8B	; 139
    31e2:	d0 40       	sbci	r29, 0x00	; 0
    31e4:	2d 96       	adiw	r28, 0x0d	; 13
    31e6:	8f af       	std	Y+63, r24	; 0x3f
    31e8:	2d 97       	sbiw	r28, 0x0d	; 13
    31ea:	c4 57       	subi	r28, 0x74	; 116
    31ec:	df 4f       	sbci	r29, 0xFF	; 255
    31ee:	98 81       	ld	r25, Y
    31f0:	cc 58       	subi	r28, 0x8C	; 140
    31f2:	d0 40       	sbci	r29, 0x00	; 0
    31f4:	2e 96       	adiw	r28, 0x0e	; 14
    31f6:	9f af       	std	Y+63, r25	; 0x3f
    31f8:	2e 97       	sbiw	r28, 0x0e	; 14
    31fa:	c3 57       	subi	r28, 0x73	; 115
    31fc:	df 4f       	sbci	r29, 0xFF	; 255
    31fe:	88 81       	ld	r24, Y
    3200:	cd 58       	subi	r28, 0x8D	; 141
    3202:	d0 40       	sbci	r29, 0x00	; 0
    3204:	2f 96       	adiw	r28, 0x0f	; 15
    3206:	8f af       	std	Y+63, r24	; 0x3f
    3208:	2f 97       	sbiw	r28, 0x0f	; 15
    320a:	c2 57       	subi	r28, 0x72	; 114
    320c:	df 4f       	sbci	r29, 0xFF	; 255
    320e:	98 81       	ld	r25, Y
    3210:	ce 58       	subi	r28, 0x8E	; 142
    3212:	d0 40       	sbci	r29, 0x00	; 0
    3214:	60 96       	adiw	r28, 0x10	; 16
    3216:	9f af       	std	Y+63, r25	; 0x3f
    3218:	60 97       	sbiw	r28, 0x10	; 16
    321a:	c1 57       	subi	r28, 0x71	; 113
    321c:	df 4f       	sbci	r29, 0xFF	; 255
    321e:	88 81       	ld	r24, Y
    3220:	cf 58       	subi	r28, 0x8F	; 143
    3222:	d0 40       	sbci	r29, 0x00	; 0
    3224:	61 96       	adiw	r28, 0x11	; 17
    3226:	8f af       	std	Y+63, r24	; 0x3f
    3228:	61 97       	sbiw	r28, 0x11	; 17
    322a:	c0 57       	subi	r28, 0x70	; 112
    322c:	df 4f       	sbci	r29, 0xFF	; 255
    322e:	98 81       	ld	r25, Y
    3230:	c0 59       	subi	r28, 0x90	; 144
    3232:	d0 40       	sbci	r29, 0x00	; 0
    3234:	62 96       	adiw	r28, 0x12	; 18
    3236:	9f af       	std	Y+63, r25	; 0x3f
    3238:	62 97       	sbiw	r28, 0x12	; 18
    323a:	cf 56       	subi	r28, 0x6F	; 111
    323c:	df 4f       	sbci	r29, 0xFF	; 255
    323e:	88 81       	ld	r24, Y
    3240:	c1 59       	subi	r28, 0x91	; 145
    3242:	d0 40       	sbci	r29, 0x00	; 0
    3244:	63 96       	adiw	r28, 0x13	; 19
    3246:	8f af       	std	Y+63, r24	; 0x3f
    3248:	63 97       	sbiw	r28, 0x13	; 19
    324a:	ce 56       	subi	r28, 0x6E	; 110
    324c:	df 4f       	sbci	r29, 0xFF	; 255
    324e:	98 81       	ld	r25, Y
    3250:	c2 59       	subi	r28, 0x92	; 146
    3252:	d0 40       	sbci	r29, 0x00	; 0
    3254:	64 96       	adiw	r28, 0x14	; 20
    3256:	9f af       	std	Y+63, r25	; 0x3f
    3258:	64 97       	sbiw	r28, 0x14	; 20
    325a:	25 96       	adiw	r28, 0x05	; 5
    325c:	8f ad       	ldd	r24, Y+63	; 0x3f
    325e:	25 97       	sbiw	r28, 0x05	; 5
    3260:	2d 96       	adiw	r28, 0x0d	; 13
    3262:	9f ad       	ldd	r25, Y+63	; 0x3f
    3264:	2d 97       	sbiw	r28, 0x0d	; 13
    3266:	89 1b       	sub	r24, r25
    3268:	65 96       	adiw	r28, 0x15	; 21
    326a:	8f af       	std	Y+63, r24	; 0x3f
    326c:	65 97       	sbiw	r28, 0x15	; 21
    326e:	81 e0       	ldi	r24, 0x01	; 1
    3270:	6d 96       	adiw	r28, 0x1d	; 29
    3272:	8f af       	std	Y+63, r24	; 0x3f
    3274:	6d 97       	sbiw	r28, 0x1d	; 29
    3276:	65 96       	adiw	r28, 0x15	; 21
    3278:	9f ad       	ldd	r25, Y+63	; 0x3f
    327a:	65 97       	sbiw	r28, 0x15	; 21
    327c:	25 96       	adiw	r28, 0x05	; 5
    327e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3280:	25 97       	sbiw	r28, 0x05	; 5
    3282:	89 17       	cp	r24, r25
    3284:	18 f0       	brcs	.+6      	; 0x328c <map+0x396>
    3286:	6d 96       	adiw	r28, 0x1d	; 29
    3288:	1f ae       	std	Y+63, r1	; 0x3f
    328a:	6d 97       	sbiw	r28, 0x1d	; 29
    328c:	26 96       	adiw	r28, 0x06	; 6
    328e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3290:	26 97       	sbiw	r28, 0x06	; 6
    3292:	2e 96       	adiw	r28, 0x0e	; 14
    3294:	8f ad       	ldd	r24, Y+63	; 0x3f
    3296:	2e 97       	sbiw	r28, 0x0e	; 14
    3298:	98 1b       	sub	r25, r24
    329a:	66 96       	adiw	r28, 0x16	; 22
    329c:	9f af       	std	Y+63, r25	; 0x3f
    329e:	66 97       	sbiw	r28, 0x16	; 22
    32a0:	91 e0       	ldi	r25, 0x01	; 1
    32a2:	6e 96       	adiw	r28, 0x1e	; 30
    32a4:	9f af       	std	Y+63, r25	; 0x3f
    32a6:	6e 97       	sbiw	r28, 0x1e	; 30
    32a8:	66 96       	adiw	r28, 0x16	; 22
    32aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    32ac:	66 97       	sbiw	r28, 0x16	; 22
    32ae:	26 96       	adiw	r28, 0x06	; 6
    32b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    32b2:	26 97       	sbiw	r28, 0x06	; 6
    32b4:	98 17       	cp	r25, r24
    32b6:	18 f0       	brcs	.+6      	; 0x32be <map+0x3c8>
    32b8:	6e 96       	adiw	r28, 0x1e	; 30
    32ba:	1f ae       	std	Y+63, r1	; 0x3f
    32bc:	6e 97       	sbiw	r28, 0x1e	; 30
    32be:	66 96       	adiw	r28, 0x16	; 22
    32c0:	8f ad       	ldd	r24, Y+63	; 0x3f
    32c2:	66 97       	sbiw	r28, 0x16	; 22
    32c4:	6d 96       	adiw	r28, 0x1d	; 29
    32c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    32c8:	6d 97       	sbiw	r28, 0x1d	; 29
    32ca:	89 1b       	sub	r24, r25
    32cc:	6f 96       	adiw	r28, 0x1f	; 31
    32ce:	8f af       	std	Y+63, r24	; 0x3f
    32d0:	6f 97       	sbiw	r28, 0x1f	; 31
    32d2:	81 e0       	ldi	r24, 0x01	; 1
    32d4:	a0 96       	adiw	r28, 0x20	; 32
    32d6:	8f af       	std	Y+63, r24	; 0x3f
    32d8:	a0 97       	sbiw	r28, 0x20	; 32
    32da:	6f 96       	adiw	r28, 0x1f	; 31
    32dc:	9f ad       	ldd	r25, Y+63	; 0x3f
    32de:	6f 97       	sbiw	r28, 0x1f	; 31
    32e0:	66 96       	adiw	r28, 0x16	; 22
    32e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    32e4:	66 97       	sbiw	r28, 0x16	; 22
    32e6:	89 17       	cp	r24, r25
    32e8:	18 f0       	brcs	.+6      	; 0x32f0 <map+0x3fa>
    32ea:	a0 96       	adiw	r28, 0x20	; 32
    32ec:	1f ae       	std	Y+63, r1	; 0x3f
    32ee:	a0 97       	sbiw	r28, 0x20	; 32
    32f0:	6e 96       	adiw	r28, 0x1e	; 30
    32f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    32f4:	6e 97       	sbiw	r28, 0x1e	; 30
    32f6:	a0 96       	adiw	r28, 0x20	; 32
    32f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    32fa:	a0 97       	sbiw	r28, 0x20	; 32
    32fc:	98 2b       	or	r25, r24
    32fe:	6e 96       	adiw	r28, 0x1e	; 30
    3300:	9f af       	std	Y+63, r25	; 0x3f
    3302:	6e 97       	sbiw	r28, 0x1e	; 30
    3304:	6f 96       	adiw	r28, 0x1f	; 31
    3306:	9f ad       	ldd	r25, Y+63	; 0x3f
    3308:	6f 97       	sbiw	r28, 0x1f	; 31
    330a:	66 96       	adiw	r28, 0x16	; 22
    330c:	9f af       	std	Y+63, r25	; 0x3f
    330e:	66 97       	sbiw	r28, 0x16	; 22
    3310:	27 96       	adiw	r28, 0x07	; 7
    3312:	8f ad       	ldd	r24, Y+63	; 0x3f
    3314:	27 97       	sbiw	r28, 0x07	; 7
    3316:	2f 96       	adiw	r28, 0x0f	; 15
    3318:	9f ad       	ldd	r25, Y+63	; 0x3f
    331a:	2f 97       	sbiw	r28, 0x0f	; 15
    331c:	89 1b       	sub	r24, r25
    331e:	67 96       	adiw	r28, 0x17	; 23
    3320:	8f af       	std	Y+63, r24	; 0x3f
    3322:	67 97       	sbiw	r28, 0x17	; 23
    3324:	81 e0       	ldi	r24, 0x01	; 1
    3326:	a1 96       	adiw	r28, 0x21	; 33
    3328:	8f af       	std	Y+63, r24	; 0x3f
    332a:	a1 97       	sbiw	r28, 0x21	; 33
    332c:	67 96       	adiw	r28, 0x17	; 23
    332e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3330:	67 97       	sbiw	r28, 0x17	; 23
    3332:	27 96       	adiw	r28, 0x07	; 7
    3334:	8f ad       	ldd	r24, Y+63	; 0x3f
    3336:	27 97       	sbiw	r28, 0x07	; 7
    3338:	89 17       	cp	r24, r25
    333a:	18 f0       	brcs	.+6      	; 0x3342 <map+0x44c>
    333c:	a1 96       	adiw	r28, 0x21	; 33
    333e:	1f ae       	std	Y+63, r1	; 0x3f
    3340:	a1 97       	sbiw	r28, 0x21	; 33
    3342:	67 96       	adiw	r28, 0x17	; 23
    3344:	9f ad       	ldd	r25, Y+63	; 0x3f
    3346:	67 97       	sbiw	r28, 0x17	; 23
    3348:	6e 96       	adiw	r28, 0x1e	; 30
    334a:	8f ad       	ldd	r24, Y+63	; 0x3f
    334c:	6e 97       	sbiw	r28, 0x1e	; 30
    334e:	98 1b       	sub	r25, r24
    3350:	a2 96       	adiw	r28, 0x22	; 34
    3352:	9f af       	std	Y+63, r25	; 0x3f
    3354:	a2 97       	sbiw	r28, 0x22	; 34
    3356:	91 e0       	ldi	r25, 0x01	; 1
    3358:	a3 96       	adiw	r28, 0x23	; 35
    335a:	9f af       	std	Y+63, r25	; 0x3f
    335c:	a3 97       	sbiw	r28, 0x23	; 35
    335e:	a2 96       	adiw	r28, 0x22	; 34
    3360:	8f ad       	ldd	r24, Y+63	; 0x3f
    3362:	a2 97       	sbiw	r28, 0x22	; 34
    3364:	67 96       	adiw	r28, 0x17	; 23
    3366:	9f ad       	ldd	r25, Y+63	; 0x3f
    3368:	67 97       	sbiw	r28, 0x17	; 23
    336a:	98 17       	cp	r25, r24
    336c:	18 f0       	brcs	.+6      	; 0x3374 <map+0x47e>
    336e:	a3 96       	adiw	r28, 0x23	; 35
    3370:	1f ae       	std	Y+63, r1	; 0x3f
    3372:	a3 97       	sbiw	r28, 0x23	; 35
    3374:	a1 96       	adiw	r28, 0x21	; 33
    3376:	8f ad       	ldd	r24, Y+63	; 0x3f
    3378:	a1 97       	sbiw	r28, 0x21	; 33
    337a:	a3 96       	adiw	r28, 0x23	; 35
    337c:	9f ad       	ldd	r25, Y+63	; 0x3f
    337e:	a3 97       	sbiw	r28, 0x23	; 35
    3380:	89 2b       	or	r24, r25
    3382:	a1 96       	adiw	r28, 0x21	; 33
    3384:	8f af       	std	Y+63, r24	; 0x3f
    3386:	a1 97       	sbiw	r28, 0x21	; 33
    3388:	a2 96       	adiw	r28, 0x22	; 34
    338a:	8f ad       	ldd	r24, Y+63	; 0x3f
    338c:	a2 97       	sbiw	r28, 0x22	; 34
    338e:	67 96       	adiw	r28, 0x17	; 23
    3390:	8f af       	std	Y+63, r24	; 0x3f
    3392:	67 97       	sbiw	r28, 0x17	; 23
    3394:	28 96       	adiw	r28, 0x08	; 8
    3396:	9f ad       	ldd	r25, Y+63	; 0x3f
    3398:	28 97       	sbiw	r28, 0x08	; 8
    339a:	60 96       	adiw	r28, 0x10	; 16
    339c:	8f ad       	ldd	r24, Y+63	; 0x3f
    339e:	60 97       	sbiw	r28, 0x10	; 16
    33a0:	98 1b       	sub	r25, r24
    33a2:	68 96       	adiw	r28, 0x18	; 24
    33a4:	9f af       	std	Y+63, r25	; 0x3f
    33a6:	68 97       	sbiw	r28, 0x18	; 24
    33a8:	91 e0       	ldi	r25, 0x01	; 1
    33aa:	a4 96       	adiw	r28, 0x24	; 36
    33ac:	9f af       	std	Y+63, r25	; 0x3f
    33ae:	a4 97       	sbiw	r28, 0x24	; 36
    33b0:	68 96       	adiw	r28, 0x18	; 24
    33b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    33b4:	68 97       	sbiw	r28, 0x18	; 24
    33b6:	28 96       	adiw	r28, 0x08	; 8
    33b8:	9f ad       	ldd	r25, Y+63	; 0x3f
    33ba:	28 97       	sbiw	r28, 0x08	; 8
    33bc:	98 17       	cp	r25, r24
    33be:	18 f0       	brcs	.+6      	; 0x33c6 <map+0x4d0>
    33c0:	a4 96       	adiw	r28, 0x24	; 36
    33c2:	1f ae       	std	Y+63, r1	; 0x3f
    33c4:	a4 97       	sbiw	r28, 0x24	; 36
    33c6:	68 96       	adiw	r28, 0x18	; 24
    33c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    33ca:	68 97       	sbiw	r28, 0x18	; 24
    33cc:	a1 96       	adiw	r28, 0x21	; 33
    33ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    33d0:	a1 97       	sbiw	r28, 0x21	; 33
    33d2:	89 1b       	sub	r24, r25
    33d4:	a5 96       	adiw	r28, 0x25	; 37
    33d6:	8f af       	std	Y+63, r24	; 0x3f
    33d8:	a5 97       	sbiw	r28, 0x25	; 37
    33da:	81 e0       	ldi	r24, 0x01	; 1
    33dc:	a6 96       	adiw	r28, 0x26	; 38
    33de:	8f af       	std	Y+63, r24	; 0x3f
    33e0:	a6 97       	sbiw	r28, 0x26	; 38
    33e2:	a5 96       	adiw	r28, 0x25	; 37
    33e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    33e6:	a5 97       	sbiw	r28, 0x25	; 37
    33e8:	68 96       	adiw	r28, 0x18	; 24
    33ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    33ec:	68 97       	sbiw	r28, 0x18	; 24
    33ee:	89 17       	cp	r24, r25
    33f0:	18 f0       	brcs	.+6      	; 0x33f8 <map+0x502>
    33f2:	a6 96       	adiw	r28, 0x26	; 38
    33f4:	1f ae       	std	Y+63, r1	; 0x3f
    33f6:	a6 97       	sbiw	r28, 0x26	; 38
    33f8:	a4 96       	adiw	r28, 0x24	; 36
    33fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    33fc:	a4 97       	sbiw	r28, 0x24	; 36
    33fe:	a6 96       	adiw	r28, 0x26	; 38
    3400:	8f ad       	ldd	r24, Y+63	; 0x3f
    3402:	a6 97       	sbiw	r28, 0x26	; 38
    3404:	98 2b       	or	r25, r24
    3406:	a4 96       	adiw	r28, 0x24	; 36
    3408:	9f af       	std	Y+63, r25	; 0x3f
    340a:	a4 97       	sbiw	r28, 0x24	; 36
    340c:	a5 96       	adiw	r28, 0x25	; 37
    340e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3410:	a5 97       	sbiw	r28, 0x25	; 37
    3412:	68 96       	adiw	r28, 0x18	; 24
    3414:	9f af       	std	Y+63, r25	; 0x3f
    3416:	68 97       	sbiw	r28, 0x18	; 24
    3418:	29 96       	adiw	r28, 0x09	; 9
    341a:	8f ad       	ldd	r24, Y+63	; 0x3f
    341c:	29 97       	sbiw	r28, 0x09	; 9
    341e:	61 96       	adiw	r28, 0x11	; 17
    3420:	9f ad       	ldd	r25, Y+63	; 0x3f
    3422:	61 97       	sbiw	r28, 0x11	; 17
    3424:	89 1b       	sub	r24, r25
    3426:	69 96       	adiw	r28, 0x19	; 25
    3428:	8f af       	std	Y+63, r24	; 0x3f
    342a:	69 97       	sbiw	r28, 0x19	; 25
    342c:	81 e0       	ldi	r24, 0x01	; 1
    342e:	a7 96       	adiw	r28, 0x27	; 39
    3430:	8f af       	std	Y+63, r24	; 0x3f
    3432:	a7 97       	sbiw	r28, 0x27	; 39
    3434:	69 96       	adiw	r28, 0x19	; 25
    3436:	9f ad       	ldd	r25, Y+63	; 0x3f
    3438:	69 97       	sbiw	r28, 0x19	; 25
    343a:	29 96       	adiw	r28, 0x09	; 9
    343c:	8f ad       	ldd	r24, Y+63	; 0x3f
    343e:	29 97       	sbiw	r28, 0x09	; 9
    3440:	89 17       	cp	r24, r25
    3442:	18 f0       	brcs	.+6      	; 0x344a <map+0x554>
    3444:	a7 96       	adiw	r28, 0x27	; 39
    3446:	1f ae       	std	Y+63, r1	; 0x3f
    3448:	a7 97       	sbiw	r28, 0x27	; 39
    344a:	69 96       	adiw	r28, 0x19	; 25
    344c:	9f ad       	ldd	r25, Y+63	; 0x3f
    344e:	69 97       	sbiw	r28, 0x19	; 25
    3450:	a4 96       	adiw	r28, 0x24	; 36
    3452:	8f ad       	ldd	r24, Y+63	; 0x3f
    3454:	a4 97       	sbiw	r28, 0x24	; 36
    3456:	98 1b       	sub	r25, r24
    3458:	a8 96       	adiw	r28, 0x28	; 40
    345a:	9f af       	std	Y+63, r25	; 0x3f
    345c:	a8 97       	sbiw	r28, 0x28	; 40
    345e:	91 e0       	ldi	r25, 0x01	; 1
    3460:	a9 96       	adiw	r28, 0x29	; 41
    3462:	9f af       	std	Y+63, r25	; 0x3f
    3464:	a9 97       	sbiw	r28, 0x29	; 41
    3466:	a8 96       	adiw	r28, 0x28	; 40
    3468:	8f ad       	ldd	r24, Y+63	; 0x3f
    346a:	a8 97       	sbiw	r28, 0x28	; 40
    346c:	69 96       	adiw	r28, 0x19	; 25
    346e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3470:	69 97       	sbiw	r28, 0x19	; 25
    3472:	98 17       	cp	r25, r24
    3474:	18 f0       	brcs	.+6      	; 0x347c <map+0x586>
    3476:	a9 96       	adiw	r28, 0x29	; 41
    3478:	1f ae       	std	Y+63, r1	; 0x3f
    347a:	a9 97       	sbiw	r28, 0x29	; 41
    347c:	a7 96       	adiw	r28, 0x27	; 39
    347e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3480:	a7 97       	sbiw	r28, 0x27	; 39
    3482:	a9 96       	adiw	r28, 0x29	; 41
    3484:	9f ad       	ldd	r25, Y+63	; 0x3f
    3486:	a9 97       	sbiw	r28, 0x29	; 41
    3488:	89 2b       	or	r24, r25
    348a:	a7 96       	adiw	r28, 0x27	; 39
    348c:	8f af       	std	Y+63, r24	; 0x3f
    348e:	a7 97       	sbiw	r28, 0x27	; 39
    3490:	a8 96       	adiw	r28, 0x28	; 40
    3492:	8f ad       	ldd	r24, Y+63	; 0x3f
    3494:	a8 97       	sbiw	r28, 0x28	; 40
    3496:	69 96       	adiw	r28, 0x19	; 25
    3498:	8f af       	std	Y+63, r24	; 0x3f
    349a:	69 97       	sbiw	r28, 0x19	; 25
    349c:	2a 96       	adiw	r28, 0x0a	; 10
    349e:	9f ad       	ldd	r25, Y+63	; 0x3f
    34a0:	2a 97       	sbiw	r28, 0x0a	; 10
    34a2:	62 96       	adiw	r28, 0x12	; 18
    34a4:	8f ad       	ldd	r24, Y+63	; 0x3f
    34a6:	62 97       	sbiw	r28, 0x12	; 18
    34a8:	98 1b       	sub	r25, r24
    34aa:	6a 96       	adiw	r28, 0x1a	; 26
    34ac:	9f af       	std	Y+63, r25	; 0x3f
    34ae:	6a 97       	sbiw	r28, 0x1a	; 26
    34b0:	91 e0       	ldi	r25, 0x01	; 1
    34b2:	aa 96       	adiw	r28, 0x2a	; 42
    34b4:	9f af       	std	Y+63, r25	; 0x3f
    34b6:	aa 97       	sbiw	r28, 0x2a	; 42
    34b8:	6a 96       	adiw	r28, 0x1a	; 26
    34ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    34bc:	6a 97       	sbiw	r28, 0x1a	; 26
    34be:	2a 96       	adiw	r28, 0x0a	; 10
    34c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    34c2:	2a 97       	sbiw	r28, 0x0a	; 10
    34c4:	98 17       	cp	r25, r24
    34c6:	18 f0       	brcs	.+6      	; 0x34ce <map+0x5d8>
    34c8:	aa 96       	adiw	r28, 0x2a	; 42
    34ca:	1f ae       	std	Y+63, r1	; 0x3f
    34cc:	aa 97       	sbiw	r28, 0x2a	; 42
    34ce:	6a 96       	adiw	r28, 0x1a	; 26
    34d0:	8f ad       	ldd	r24, Y+63	; 0x3f
    34d2:	6a 97       	sbiw	r28, 0x1a	; 26
    34d4:	a7 96       	adiw	r28, 0x27	; 39
    34d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    34d8:	a7 97       	sbiw	r28, 0x27	; 39
    34da:	89 1b       	sub	r24, r25
    34dc:	ab 96       	adiw	r28, 0x2b	; 43
    34de:	8f af       	std	Y+63, r24	; 0x3f
    34e0:	ab 97       	sbiw	r28, 0x2b	; 43
    34e2:	81 e0       	ldi	r24, 0x01	; 1
    34e4:	ac 96       	adiw	r28, 0x2c	; 44
    34e6:	8f af       	std	Y+63, r24	; 0x3f
    34e8:	ac 97       	sbiw	r28, 0x2c	; 44
    34ea:	ab 96       	adiw	r28, 0x2b	; 43
    34ec:	9f ad       	ldd	r25, Y+63	; 0x3f
    34ee:	ab 97       	sbiw	r28, 0x2b	; 43
    34f0:	6a 96       	adiw	r28, 0x1a	; 26
    34f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    34f4:	6a 97       	sbiw	r28, 0x1a	; 26
    34f6:	89 17       	cp	r24, r25
    34f8:	18 f0       	brcs	.+6      	; 0x3500 <map+0x60a>
    34fa:	ac 96       	adiw	r28, 0x2c	; 44
    34fc:	1f ae       	std	Y+63, r1	; 0x3f
    34fe:	ac 97       	sbiw	r28, 0x2c	; 44
    3500:	aa 96       	adiw	r28, 0x2a	; 42
    3502:	9f ad       	ldd	r25, Y+63	; 0x3f
    3504:	aa 97       	sbiw	r28, 0x2a	; 42
    3506:	ac 96       	adiw	r28, 0x2c	; 44
    3508:	8f ad       	ldd	r24, Y+63	; 0x3f
    350a:	ac 97       	sbiw	r28, 0x2c	; 44
    350c:	98 2b       	or	r25, r24
    350e:	aa 96       	adiw	r28, 0x2a	; 42
    3510:	9f af       	std	Y+63, r25	; 0x3f
    3512:	aa 97       	sbiw	r28, 0x2a	; 42
    3514:	ab 96       	adiw	r28, 0x2b	; 43
    3516:	9f ad       	ldd	r25, Y+63	; 0x3f
    3518:	ab 97       	sbiw	r28, 0x2b	; 43
    351a:	6a 96       	adiw	r28, 0x1a	; 26
    351c:	9f af       	std	Y+63, r25	; 0x3f
    351e:	6a 97       	sbiw	r28, 0x1a	; 26
    3520:	2b 96       	adiw	r28, 0x0b	; 11
    3522:	8f ad       	ldd	r24, Y+63	; 0x3f
    3524:	2b 97       	sbiw	r28, 0x0b	; 11
    3526:	63 96       	adiw	r28, 0x13	; 19
    3528:	9f ad       	ldd	r25, Y+63	; 0x3f
    352a:	63 97       	sbiw	r28, 0x13	; 19
    352c:	89 1b       	sub	r24, r25
    352e:	6b 96       	adiw	r28, 0x1b	; 27
    3530:	8f af       	std	Y+63, r24	; 0x3f
    3532:	6b 97       	sbiw	r28, 0x1b	; 27
    3534:	81 e0       	ldi	r24, 0x01	; 1
    3536:	ad 96       	adiw	r28, 0x2d	; 45
    3538:	8f af       	std	Y+63, r24	; 0x3f
    353a:	ad 97       	sbiw	r28, 0x2d	; 45
    353c:	6b 96       	adiw	r28, 0x1b	; 27
    353e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3540:	6b 97       	sbiw	r28, 0x1b	; 27
    3542:	2b 96       	adiw	r28, 0x0b	; 11
    3544:	8f ad       	ldd	r24, Y+63	; 0x3f
    3546:	2b 97       	sbiw	r28, 0x0b	; 11
    3548:	89 17       	cp	r24, r25
    354a:	18 f0       	brcs	.+6      	; 0x3552 <map+0x65c>
    354c:	ad 96       	adiw	r28, 0x2d	; 45
    354e:	1f ae       	std	Y+63, r1	; 0x3f
    3550:	ad 97       	sbiw	r28, 0x2d	; 45
    3552:	6b 96       	adiw	r28, 0x1b	; 27
    3554:	9f ad       	ldd	r25, Y+63	; 0x3f
    3556:	6b 97       	sbiw	r28, 0x1b	; 27
    3558:	aa 96       	adiw	r28, 0x2a	; 42
    355a:	8f ad       	ldd	r24, Y+63	; 0x3f
    355c:	aa 97       	sbiw	r28, 0x2a	; 42
    355e:	98 1b       	sub	r25, r24
    3560:	ae 96       	adiw	r28, 0x2e	; 46
    3562:	9f af       	std	Y+63, r25	; 0x3f
    3564:	ae 97       	sbiw	r28, 0x2e	; 46
    3566:	91 e0       	ldi	r25, 0x01	; 1
    3568:	af 96       	adiw	r28, 0x2f	; 47
    356a:	9f af       	std	Y+63, r25	; 0x3f
    356c:	af 97       	sbiw	r28, 0x2f	; 47
    356e:	ae 96       	adiw	r28, 0x2e	; 46
    3570:	8f ad       	ldd	r24, Y+63	; 0x3f
    3572:	ae 97       	sbiw	r28, 0x2e	; 46
    3574:	6b 96       	adiw	r28, 0x1b	; 27
    3576:	9f ad       	ldd	r25, Y+63	; 0x3f
    3578:	6b 97       	sbiw	r28, 0x1b	; 27
    357a:	98 17       	cp	r25, r24
    357c:	18 f0       	brcs	.+6      	; 0x3584 <map+0x68e>
    357e:	af 96       	adiw	r28, 0x2f	; 47
    3580:	1f ae       	std	Y+63, r1	; 0x3f
    3582:	af 97       	sbiw	r28, 0x2f	; 47
    3584:	ad 96       	adiw	r28, 0x2d	; 45
    3586:	8f ad       	ldd	r24, Y+63	; 0x3f
    3588:	ad 97       	sbiw	r28, 0x2d	; 45
    358a:	af 96       	adiw	r28, 0x2f	; 47
    358c:	9f ad       	ldd	r25, Y+63	; 0x3f
    358e:	af 97       	sbiw	r28, 0x2f	; 47
    3590:	89 2b       	or	r24, r25
    3592:	ad 96       	adiw	r28, 0x2d	; 45
    3594:	8f af       	std	Y+63, r24	; 0x3f
    3596:	ad 97       	sbiw	r28, 0x2d	; 45
    3598:	ae 96       	adiw	r28, 0x2e	; 46
    359a:	8f ad       	ldd	r24, Y+63	; 0x3f
    359c:	ae 97       	sbiw	r28, 0x2e	; 46
    359e:	6b 96       	adiw	r28, 0x1b	; 27
    35a0:	8f af       	std	Y+63, r24	; 0x3f
    35a2:	6b 97       	sbiw	r28, 0x1b	; 27
    35a4:	2c 96       	adiw	r28, 0x0c	; 12
    35a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    35a8:	2c 97       	sbiw	r28, 0x0c	; 12
    35aa:	64 96       	adiw	r28, 0x14	; 20
    35ac:	8f ad       	ldd	r24, Y+63	; 0x3f
    35ae:	64 97       	sbiw	r28, 0x14	; 20
    35b0:	98 1b       	sub	r25, r24
    35b2:	6c 96       	adiw	r28, 0x1c	; 28
    35b4:	9f af       	std	Y+63, r25	; 0x3f
    35b6:	6c 97       	sbiw	r28, 0x1c	; 28
    35b8:	6c 96       	adiw	r28, 0x1c	; 28
    35ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    35bc:	6c 97       	sbiw	r28, 0x1c	; 28
    35be:	ad 96       	adiw	r28, 0x2d	; 45
    35c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    35c2:	ad 97       	sbiw	r28, 0x2d	; 45
    35c4:	89 1b       	sub	r24, r25
    35c6:	6c 96       	adiw	r28, 0x1c	; 28
    35c8:	8f af       	std	Y+63, r24	; 0x3f
    35ca:	6c 97       	sbiw	r28, 0x1c	; 28
    35cc:	65 96       	adiw	r28, 0x15	; 21
    35ce:	2f ac       	ldd	r2, Y+63	; 0x3f
    35d0:	65 97       	sbiw	r28, 0x15	; 21
    35d2:	66 96       	adiw	r28, 0x16	; 22
    35d4:	3f ac       	ldd	r3, Y+63	; 0x3f
    35d6:	66 97       	sbiw	r28, 0x16	; 22
    35d8:	67 96       	adiw	r28, 0x17	; 23
    35da:	4f ac       	ldd	r4, Y+63	; 0x3f
    35dc:	67 97       	sbiw	r28, 0x17	; 23
    35de:	68 96       	adiw	r28, 0x18	; 24
    35e0:	5f ac       	ldd	r5, Y+63	; 0x3f
    35e2:	68 97       	sbiw	r28, 0x18	; 24
    35e4:	69 96       	adiw	r28, 0x19	; 25
    35e6:	6f ac       	ldd	r6, Y+63	; 0x3f
    35e8:	69 97       	sbiw	r28, 0x19	; 25
    35ea:	6a 96       	adiw	r28, 0x1a	; 26
    35ec:	7f ac       	ldd	r7, Y+63	; 0x3f
    35ee:	6a 97       	sbiw	r28, 0x1a	; 26
    35f0:	6b 96       	adiw	r28, 0x1b	; 27
    35f2:	8f ac       	ldd	r8, Y+63	; 0x3f
    35f4:	6b 97       	sbiw	r28, 0x1b	; 27
    35f6:	6c 96       	adiw	r28, 0x1c	; 28
    35f8:	9f ac       	ldd	r9, Y+63	; 0x3f
    35fa:	6c 97       	sbiw	r28, 0x1c	; 28
    35fc:	29 89       	ldd	r18, Y+17	; 0x11
    35fe:	3a 89       	ldd	r19, Y+18	; 0x12
    3600:	4b 89       	ldd	r20, Y+19	; 0x13
    3602:	5c 89       	ldd	r21, Y+20	; 0x14
    3604:	6d 89       	ldd	r22, Y+21	; 0x15
    3606:	7e 89       	ldd	r23, Y+22	; 0x16
    3608:	8f 89       	ldd	r24, Y+23	; 0x17
    360a:	98 8d       	ldd	r25, Y+24	; 0x18
    360c:	a2 2c       	mov	r10, r2
    360e:	b3 2c       	mov	r11, r3
    3610:	c4 2c       	mov	r12, r4
    3612:	d5 2c       	mov	r13, r5
    3614:	e6 2c       	mov	r14, r6
    3616:	f7 2c       	mov	r15, r7
    3618:	08 2d       	mov	r16, r8
    361a:	19 2d       	mov	r17, r9
    361c:	0e 94 41 00 	call	0x82	; 0x82 <__muldi3>
    3620:	22 2e       	mov	r2, r18
    3622:	33 2e       	mov	r3, r19
    3624:	44 2e       	mov	r4, r20
    3626:	55 2e       	mov	r5, r21
    3628:	66 2e       	mov	r6, r22
    362a:	77 2e       	mov	r7, r23
    362c:	88 2e       	mov	r8, r24
    362e:	99 2e       	mov	r9, r25
    3630:	a2 2c       	mov	r10, r2
    3632:	b3 2c       	mov	r11, r3
    3634:	c4 2c       	mov	r12, r4
    3636:	d5 2c       	mov	r13, r5
    3638:	e6 2c       	mov	r14, r6
    363a:	f7 2c       	mov	r15, r7
    363c:	08 2d       	mov	r16, r8
    363e:	19 2d       	mov	r17, r9
    3640:	2a 2d       	mov	r18, r10
    3642:	3b 2d       	mov	r19, r11
    3644:	4c 2d       	mov	r20, r12
    3646:	5d 2d       	mov	r21, r13
    3648:	6e 2d       	mov	r22, r14
    364a:	7f 2d       	mov	r23, r15
    364c:	80 2f       	mov	r24, r16
    364e:	91 2f       	mov	r25, r17
    3650:	cd 57       	subi	r28, 0x7D	; 125
    3652:	df 4f       	sbci	r29, 0xFF	; 255
    3654:	a8 80       	ld	r10, Y
    3656:	c3 58       	subi	r28, 0x83	; 131
    3658:	d0 40       	sbci	r29, 0x00	; 0
    365a:	cc 57       	subi	r28, 0x7C	; 124
    365c:	df 4f       	sbci	r29, 0xFF	; 255
    365e:	b8 80       	ld	r11, Y
    3660:	c4 58       	subi	r28, 0x84	; 132
    3662:	d0 40       	sbci	r29, 0x00	; 0
    3664:	cb 57       	subi	r28, 0x7B	; 123
    3666:	df 4f       	sbci	r29, 0xFF	; 255
    3668:	c8 80       	ld	r12, Y
    366a:	c5 58       	subi	r28, 0x85	; 133
    366c:	d0 40       	sbci	r29, 0x00	; 0
    366e:	ca 57       	subi	r28, 0x7A	; 122
    3670:	df 4f       	sbci	r29, 0xFF	; 255
    3672:	d8 80       	ld	r13, Y
    3674:	c6 58       	subi	r28, 0x86	; 134
    3676:	d0 40       	sbci	r29, 0x00	; 0
    3678:	c9 57       	subi	r28, 0x79	; 121
    367a:	df 4f       	sbci	r29, 0xFF	; 255
    367c:	e8 80       	ld	r14, Y
    367e:	c7 58       	subi	r28, 0x87	; 135
    3680:	d0 40       	sbci	r29, 0x00	; 0
    3682:	c8 57       	subi	r28, 0x78	; 120
    3684:	df 4f       	sbci	r29, 0xFF	; 255
    3686:	f8 80       	ld	r15, Y
    3688:	c8 58       	subi	r28, 0x88	; 136
    368a:	d0 40       	sbci	r29, 0x00	; 0
    368c:	c7 57       	subi	r28, 0x77	; 119
    368e:	df 4f       	sbci	r29, 0xFF	; 255
    3690:	08 81       	ld	r16, Y
    3692:	c9 58       	subi	r28, 0x89	; 137
    3694:	d0 40       	sbci	r29, 0x00	; 0
    3696:	c6 57       	subi	r28, 0x76	; 118
    3698:	df 4f       	sbci	r29, 0xFF	; 255
    369a:	18 81       	ld	r17, Y
    369c:	ca 58       	subi	r28, 0x8A	; 138
    369e:	d0 40       	sbci	r29, 0x00	; 0
    36a0:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__udivdi3>
    36a4:	a2 2e       	mov	r10, r18
    36a6:	b3 2e       	mov	r11, r19
    36a8:	c4 2e       	mov	r12, r20
    36aa:	d5 2e       	mov	r13, r21
    36ac:	e6 2e       	mov	r14, r22
    36ae:	f7 2e       	mov	r15, r23
    36b0:	08 2f       	mov	r16, r24
    36b2:	19 2f       	mov	r17, r25
    36b4:	2a 2d       	mov	r18, r10
    36b6:	3b 2d       	mov	r19, r11
    36b8:	4c 2d       	mov	r20, r12
    36ba:	5d 2d       	mov	r21, r13
    36bc:	6e 2d       	mov	r22, r14
    36be:	7f 2d       	mov	r23, r15
    36c0:	80 2f       	mov	r24, r16
    36c2:	91 2f       	mov	r25, r17
    36c4:	92 2f       	mov	r25, r18
    36c6:	89 85       	ldd	r24, Y+9	; 0x09
    36c8:	98 1b       	sub	r25, r24
    36ca:	c5 57       	subi	r28, 0x75	; 117
    36cc:	df 4f       	sbci	r29, 0xFF	; 255
    36ce:	88 81       	ld	r24, Y
    36d0:	cb 58       	subi	r28, 0x8B	; 139
    36d2:	d0 40       	sbci	r29, 0x00	; 0
    36d4:	89 0f       	add	r24, r25
}
    36d6:	c2 59       	subi	r28, 0x92	; 146
    36d8:	df 4f       	sbci	r29, 0xFF	; 255
    36da:	0f b6       	in	r0, 0x3f	; 63
    36dc:	f8 94       	cli
    36de:	de bf       	out	0x3e, r29	; 62
    36e0:	0f be       	out	0x3f, r0	; 63
    36e2:	cd bf       	out	0x3d, r28	; 61
    36e4:	cf 91       	pop	r28
    36e6:	df 91       	pop	r29
    36e8:	1f 91       	pop	r17
    36ea:	0f 91       	pop	r16
    36ec:	ff 90       	pop	r15
    36ee:	ef 90       	pop	r14
    36f0:	df 90       	pop	r13
    36f2:	cf 90       	pop	r12
    36f4:	bf 90       	pop	r11
    36f6:	af 90       	pop	r10
    36f8:	9f 90       	pop	r9
    36fa:	8f 90       	pop	r8
    36fc:	7f 90       	pop	r7
    36fe:	6f 90       	pop	r6
    3700:	5f 90       	pop	r5
    3702:	4f 90       	pop	r4
    3704:	3f 90       	pop	r3
    3706:	2f 90       	pop	r2
    3708:	08 95       	ret

0000370a <main>:

int main (void)
{
    370a:	af 92       	push	r10
    370c:	bf 92       	push	r11
    370e:	cf 92       	push	r12
    3710:	df 92       	push	r13
    3712:	ef 92       	push	r14
    3714:	ff 92       	push	r15
    3716:	0f 93       	push	r16
    3718:	1f 93       	push	r17
    371a:	df 93       	push	r29
    371c:	cf 93       	push	r28
    371e:	00 d0       	rcall	.+0      	; 0x3720 <main+0x16>
    3720:	00 d0       	rcall	.+0      	; 0x3722 <main+0x18>
    3722:	cd b7       	in	r28, 0x3d	; 61
    3724:	de b7       	in	r29, 0x3e	; 62
	uint8 temp,duty;
	ADC_ConfigType Config={INTERNAL,F_CPU8};
    3726:	83 e0       	ldi	r24, 0x03	; 3
    3728:	8b 83       	std	Y+3, r24	; 0x03
    372a:	83 e0       	ldi	r24, 0x03	; 3
    372c:	8c 83       	std	Y+4, r24	; 0x04
	LCD_init(); /* initialize LCD driver */
    372e:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <LCD_init>
	ADC_init(&Config); /* initialize ADC driver */
    3732:	ce 01       	movw	r24, r28
    3734:	03 96       	adiw	r24, 0x03	; 3
    3736:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <ADC_init>
	DcMotor_init();
    373a:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <DcMotor_init>
	/* Display this string "Temp =   C" only once on LCD at the first row */
	LCD_displayString(" Temp =    C");
    373e:	80 e6       	ldi	r24, 0x60	; 96
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	0e 94 85 16 	call	0x2d0a	; 0x2d0a <LCD_displayString>
	LCD_moveCursor(0,7);
    3746:	80 e0       	ldi	r24, 0x00	; 0
    3748:	67 e0       	ldi	r22, 0x07	; 7
    374a:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <LCD_moveCursor>
	LCD_displayStringRowColumn(1,1,"Fan");
    374e:	2d e6       	ldi	r18, 0x6D	; 109
    3750:	30 e0       	ldi	r19, 0x00	; 0
    3752:	81 e0       	ldi	r24, 0x01	; 1
    3754:	61 e0       	ldi	r22, 0x01	; 1
    3756:	a9 01       	movw	r20, r18
    3758:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    while(1)
    {
    	temp = LM35_getTemperature();
    375c:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <LM35_getTemperature>
    3760:	8a 83       	std	Y+2, r24	; 0x02
    	duty = map(temp,0,150,0,100);
    3762:	8a 81       	ldd	r24, Y+2	; 0x02
    3764:	a8 2e       	mov	r10, r24
    3766:	bb 24       	eor	r11, r11
    3768:	cc 24       	eor	r12, r12
    376a:	dd 24       	eor	r13, r13
    376c:	ee 24       	eor	r14, r14
    376e:	ff 24       	eor	r15, r15
    3770:	87 01       	movw	r16, r14
    3772:	2d b7       	in	r18, 0x3d	; 61
    3774:	3e b7       	in	r19, 0x3e	; 62
    3776:	28 51       	subi	r18, 0x18	; 24
    3778:	30 40       	sbci	r19, 0x00	; 0
    377a:	0f b6       	in	r0, 0x3f	; 63
    377c:	f8 94       	cli
    377e:	3e bf       	out	0x3e, r19	; 62
    3780:	0f be       	out	0x3f, r0	; 63
    3782:	2d bf       	out	0x3d, r18	; 61
    3784:	ed b7       	in	r30, 0x3d	; 61
    3786:	fe b7       	in	r31, 0x3e	; 62
    3788:	31 96       	adiw	r30, 0x01	; 1
    378a:	86 e9       	ldi	r24, 0x96	; 150
    378c:	80 83       	st	Z, r24
    378e:	11 82       	std	Z+1, r1	; 0x01
    3790:	12 82       	std	Z+2, r1	; 0x02
    3792:	13 82       	std	Z+3, r1	; 0x03
    3794:	14 82       	std	Z+4, r1	; 0x04
    3796:	15 82       	std	Z+5, r1	; 0x05
    3798:	16 82       	std	Z+6, r1	; 0x06
    379a:	17 82       	std	Z+7, r1	; 0x07
    379c:	10 86       	std	Z+8, r1	; 0x08
    379e:	11 86       	std	Z+9, r1	; 0x09
    37a0:	12 86       	std	Z+10, r1	; 0x0a
    37a2:	13 86       	std	Z+11, r1	; 0x0b
    37a4:	14 86       	std	Z+12, r1	; 0x0c
    37a6:	15 86       	std	Z+13, r1	; 0x0d
    37a8:	16 86       	std	Z+14, r1	; 0x0e
    37aa:	17 86       	std	Z+15, r1	; 0x0f
    37ac:	84 e6       	ldi	r24, 0x64	; 100
    37ae:	80 8b       	std	Z+16, r24	; 0x10
    37b0:	11 8a       	std	Z+17, r1	; 0x11
    37b2:	12 8a       	std	Z+18, r1	; 0x12
    37b4:	13 8a       	std	Z+19, r1	; 0x13
    37b6:	14 8a       	std	Z+20, r1	; 0x14
    37b8:	15 8a       	std	Z+21, r1	; 0x15
    37ba:	16 8a       	std	Z+22, r1	; 0x16
    37bc:	17 8a       	std	Z+23, r1	; 0x17
    37be:	2a 2d       	mov	r18, r10
    37c0:	3b 2d       	mov	r19, r11
    37c2:	4c 2d       	mov	r20, r12
    37c4:	5d 2d       	mov	r21, r13
    37c6:	6e 2d       	mov	r22, r14
    37c8:	7f 2d       	mov	r23, r15
    37ca:	80 2f       	mov	r24, r16
    37cc:	91 2f       	mov	r25, r17
    37ce:	aa 24       	eor	r10, r10
    37d0:	bb 24       	eor	r11, r11
    37d2:	cc 24       	eor	r12, r12
    37d4:	dd 24       	eor	r13, r13
    37d6:	ee 24       	eor	r14, r14
    37d8:	ff 24       	eor	r15, r15
    37da:	00 e0       	ldi	r16, 0x00	; 0
    37dc:	10 e0       	ldi	r17, 0x00	; 0
    37de:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <map>
    37e2:	2d b7       	in	r18, 0x3d	; 61
    37e4:	3e b7       	in	r19, 0x3e	; 62
    37e6:	28 5e       	subi	r18, 0xE8	; 232
    37e8:	3f 4f       	sbci	r19, 0xFF	; 255
    37ea:	0f b6       	in	r0, 0x3f	; 63
    37ec:	f8 94       	cli
    37ee:	3e bf       	out	0x3e, r19	; 62
    37f0:	0f be       	out	0x3f, r0	; 63
    37f2:	2d bf       	out	0x3d, r18	; 61
    37f4:	89 83       	std	Y+1, r24	; 0x01
    	LCD_moveCursor(0,7);
    37f6:	80 e0       	ldi	r24, 0x00	; 0
    37f8:	67 e0       	ldi	r22, 0x07	; 7
    37fa:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <LCD_moveCursor>
    	if(temp >= 100)
    37fe:	8a 81       	ldd	r24, Y+2	; 0x02
    3800:	84 36       	cpi	r24, 0x64	; 100
    3802:	30 f0       	brcs	.+12     	; 0x3810 <main+0x106>
    			{
    				LCD_intgerToString(temp);
    3804:	8a 81       	ldd	r24, Y+2	; 0x02
    3806:	88 2f       	mov	r24, r24
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	0e 94 09 17 	call	0x2e12	; 0x2e12 <LCD_intgerToString>
    380e:	08 c0       	rjmp	.+16     	; 0x3820 <main+0x116>
    			}
    			else
    			{
    				LCD_intgerToString(temp);
    3810:	8a 81       	ldd	r24, Y+2	; 0x02
    3812:	88 2f       	mov	r24, r24
    3814:	90 e0       	ldi	r25, 0x00	; 0
    3816:	0e 94 09 17 	call	0x2e12	; 0x2e12 <LCD_intgerToString>
    				/* In case the digital value is two or one digits print space in the next digit place */
    				LCD_displayCharacter(' ');
    381a:	80 e2       	ldi	r24, 0x20	; 32
    381c:	0e 94 91 14 	call	0x2922	; 0x2922 <LCD_displayCharacter>
    			}
    	if (temp >= 0 && temp <30){
    3820:	8a 81       	ldd	r24, Y+2	; 0x02
    3822:	8e 31       	cpi	r24, 0x1E	; 30
    3824:	60 f4       	brcc	.+24     	; 0x383e <main+0x134>
    		DcMotor_Rotate(CW,0);
    3826:	81 e0       	ldi	r24, 0x01	; 1
    3828:	60 e0       	ldi	r22, 0x00	; 0
    382a:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <DcMotor_Rotate>
    		LCD_displayStringRowColumn(1,5,"OFF");
    382e:	21 e7       	ldi	r18, 0x71	; 113
    3830:	30 e0       	ldi	r19, 0x00	; 0
    3832:	81 e0       	ldi	r24, 0x01	; 1
    3834:	65 e0       	ldi	r22, 0x05	; 5
    3836:	a9 01       	movw	r20, r18
    3838:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    383c:	8f cf       	rjmp	.-226    	; 0x375c <main+0x52>
    	}
    	else if(temp >= 30 && temp < 60){
    383e:	8a 81       	ldd	r24, Y+2	; 0x02
    3840:	8e 31       	cpi	r24, 0x1E	; 30
    3842:	78 f0       	brcs	.+30     	; 0x3862 <main+0x158>
    3844:	8a 81       	ldd	r24, Y+2	; 0x02
    3846:	8c 33       	cpi	r24, 0x3C	; 60
    3848:	60 f4       	brcc	.+24     	; 0x3862 <main+0x158>
    		DcMotor_Rotate(CW,duty);
    384a:	81 e0       	ldi	r24, 0x01	; 1
    384c:	69 81       	ldd	r22, Y+1	; 0x01
    384e:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <DcMotor_Rotate>
    		LCD_displayStringRowColumn(1,5," ON");
    3852:	25 e7       	ldi	r18, 0x75	; 117
    3854:	30 e0       	ldi	r19, 0x00	; 0
    3856:	81 e0       	ldi	r24, 0x01	; 1
    3858:	65 e0       	ldi	r22, 0x05	; 5
    385a:	a9 01       	movw	r20, r18
    385c:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    3860:	7d cf       	rjmp	.-262    	; 0x375c <main+0x52>
    	}
    	else if (temp >= 60 && temp < 90){
    3862:	8a 81       	ldd	r24, Y+2	; 0x02
    3864:	8c 33       	cpi	r24, 0x3C	; 60
    3866:	78 f0       	brcs	.+30     	; 0x3886 <main+0x17c>
    3868:	8a 81       	ldd	r24, Y+2	; 0x02
    386a:	8a 35       	cpi	r24, 0x5A	; 90
    386c:	60 f4       	brcc	.+24     	; 0x3886 <main+0x17c>
    		DcMotor_Rotate(CW,duty);
    386e:	81 e0       	ldi	r24, 0x01	; 1
    3870:	69 81       	ldd	r22, Y+1	; 0x01
    3872:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <DcMotor_Rotate>
    		LCD_displayStringRowColumn(1,5," ON");
    3876:	25 e7       	ldi	r18, 0x75	; 117
    3878:	30 e0       	ldi	r19, 0x00	; 0
    387a:	81 e0       	ldi	r24, 0x01	; 1
    387c:	65 e0       	ldi	r22, 0x05	; 5
    387e:	a9 01       	movw	r20, r18
    3880:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    3884:	6b cf       	rjmp	.-298    	; 0x375c <main+0x52>
    	}
    	else if (temp >= 90 && temp < 120 ){
    3886:	8a 81       	ldd	r24, Y+2	; 0x02
    3888:	8a 35       	cpi	r24, 0x5A	; 90
    388a:	78 f0       	brcs	.+30     	; 0x38aa <main+0x1a0>
    388c:	8a 81       	ldd	r24, Y+2	; 0x02
    388e:	88 37       	cpi	r24, 0x78	; 120
    3890:	60 f4       	brcc	.+24     	; 0x38aa <main+0x1a0>
    		DcMotor_Rotate(CW,duty);
    3892:	81 e0       	ldi	r24, 0x01	; 1
    3894:	69 81       	ldd	r22, Y+1	; 0x01
    3896:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <DcMotor_Rotate>
    		LCD_displayStringRowColumn(1,5," ON");
    389a:	25 e7       	ldi	r18, 0x75	; 117
    389c:	30 e0       	ldi	r19, 0x00	; 0
    389e:	81 e0       	ldi	r24, 0x01	; 1
    38a0:	65 e0       	ldi	r22, 0x05	; 5
    38a2:	a9 01       	movw	r20, r18
    38a4:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    38a8:	59 cf       	rjmp	.-334    	; 0x375c <main+0x52>
    	}
    	else if (temp >= 120 && temp <= 150 ){
    38aa:	8a 81       	ldd	r24, Y+2	; 0x02
    38ac:	88 37       	cpi	r24, 0x78	; 120
    38ae:	08 f4       	brcc	.+2      	; 0x38b2 <main+0x1a8>
    38b0:	55 cf       	rjmp	.-342    	; 0x375c <main+0x52>
    38b2:	8a 81       	ldd	r24, Y+2	; 0x02
    38b4:	87 39       	cpi	r24, 0x97	; 151
    38b6:	08 f0       	brcs	.+2      	; 0x38ba <main+0x1b0>
    38b8:	51 cf       	rjmp	.-350    	; 0x375c <main+0x52>
    		DcMotor_Rotate(CW,duty);
    38ba:	81 e0       	ldi	r24, 0x01	; 1
    38bc:	69 81       	ldd	r22, Y+1	; 0x01
    38be:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <DcMotor_Rotate>
    		LCD_displayStringRowColumn(1,5," ON");
    38c2:	25 e7       	ldi	r18, 0x75	; 117
    38c4:	30 e0       	ldi	r19, 0x00	; 0
    38c6:	81 e0       	ldi	r24, 0x01	; 1
    38c8:	65 e0       	ldi	r22, 0x05	; 5
    38ca:	a9 01       	movw	r20, r18
    38cc:	0e 94 f0 16 	call	0x2de0	; 0x2de0 <LCD_displayStringRowColumn>
    38d0:	45 cf       	rjmp	.-374    	; 0x375c <main+0x52>

000038d2 <PWM_Timer0_Init>:
#include <avr/io.h>
#include "timer.h"


void PWM_Timer0_Init(uint8 set_duty_cycle)
{
    38d2:	df 93       	push	r29
    38d4:	cf 93       	push	r28
    38d6:	0f 92       	push	r0
    38d8:	cd b7       	in	r28, 0x3d	; 61
    38da:	de b7       	in	r29, 0x3e	; 62
    38dc:	89 83       	std	Y+1, r24	; 0x01


	TCNT0 = 0; //Set Timer Initial value
    38de:	e2 e5       	ldi	r30, 0x52	; 82
    38e0:	f0 e0       	ldi	r31, 0x00	; 0
    38e2:	10 82       	st	Z, r1

	OCR0  = (set_duty_cycle*255)/100; /* Set Compare Value */
    38e4:	ec e5       	ldi	r30, 0x5C	; 92
    38e6:	f0 e0       	ldi	r31, 0x00	; 0
    38e8:	89 81       	ldd	r24, Y+1	; 0x01
    38ea:	48 2f       	mov	r20, r24
    38ec:	50 e0       	ldi	r21, 0x00	; 0
    38ee:	ca 01       	movw	r24, r20
    38f0:	9c 01       	movw	r18, r24
    38f2:	22 0f       	add	r18, r18
    38f4:	33 1f       	adc	r19, r19
    38f6:	c9 01       	movw	r24, r18
    38f8:	96 95       	lsr	r25
    38fa:	98 2f       	mov	r25, r24
    38fc:	88 27       	eor	r24, r24
    38fe:	97 95       	ror	r25
    3900:	87 95       	ror	r24
    3902:	82 1b       	sub	r24, r18
    3904:	93 0b       	sbc	r25, r19
    3906:	84 0f       	add	r24, r20
    3908:	95 1f       	adc	r25, r21
    390a:	24 e6       	ldi	r18, 0x64	; 100
    390c:	30 e0       	ldi	r19, 0x00	; 0
    390e:	b9 01       	movw	r22, r18
    3910:	0e 94 ba 1c 	call	0x3974	; 0x3974 <__divmodhi4>
    3914:	cb 01       	movw	r24, r22
    3916:	80 83       	st	Z, r24

	DDRB  = DDRB | (1<<PB3); /*set PB3/OC0 as output pin --> pin where the PWM signal is generated from MC.*/
    3918:	a7 e3       	ldi	r26, 0x37	; 55
    391a:	b0 e0       	ldi	r27, 0x00	; 0
    391c:	e7 e3       	ldi	r30, 0x37	; 55
    391e:	f0 e0       	ldi	r31, 0x00	; 0
    3920:	80 81       	ld	r24, Z
    3922:	88 60       	ori	r24, 0x08	; 8
    3924:	8c 93       	st	X, r24
	 * 1. Fast PWM mode FOC0=0
	 * 2. Fast PWM Mode WGM01=1 & WGM00=1
	 * 3. Clear OC0 when match occurs (non inverted mode) COM00=0 & COM01=1
	 * 4. clock = F_CPU/256 CS00=0 CS01=1 CS02=0
	 */
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS01);
    3926:	e3 e5       	ldi	r30, 0x53	; 83
    3928:	f0 e0       	ldi	r31, 0x00	; 0
    392a:	8a e6       	ldi	r24, 0x6A	; 106
    392c:	80 83       	st	Z, r24
}
    392e:	0f 90       	pop	r0
    3930:	cf 91       	pop	r28
    3932:	df 91       	pop	r29
    3934:	08 95       	ret

00003936 <__mulsi3>:
    3936:	62 9f       	mul	r22, r18
    3938:	d0 01       	movw	r26, r0
    393a:	73 9f       	mul	r23, r19
    393c:	f0 01       	movw	r30, r0
    393e:	82 9f       	mul	r24, r18
    3940:	e0 0d       	add	r30, r0
    3942:	f1 1d       	adc	r31, r1
    3944:	64 9f       	mul	r22, r20
    3946:	e0 0d       	add	r30, r0
    3948:	f1 1d       	adc	r31, r1
    394a:	92 9f       	mul	r25, r18
    394c:	f0 0d       	add	r31, r0
    394e:	83 9f       	mul	r24, r19
    3950:	f0 0d       	add	r31, r0
    3952:	74 9f       	mul	r23, r20
    3954:	f0 0d       	add	r31, r0
    3956:	65 9f       	mul	r22, r21
    3958:	f0 0d       	add	r31, r0
    395a:	99 27       	eor	r25, r25
    395c:	72 9f       	mul	r23, r18
    395e:	b0 0d       	add	r27, r0
    3960:	e1 1d       	adc	r30, r1
    3962:	f9 1f       	adc	r31, r25
    3964:	63 9f       	mul	r22, r19
    3966:	b0 0d       	add	r27, r0
    3968:	e1 1d       	adc	r30, r1
    396a:	f9 1f       	adc	r31, r25
    396c:	bd 01       	movw	r22, r26
    396e:	cf 01       	movw	r24, r30
    3970:	11 24       	eor	r1, r1
    3972:	08 95       	ret

00003974 <__divmodhi4>:
    3974:	97 fb       	bst	r25, 7
    3976:	09 2e       	mov	r0, r25
    3978:	07 26       	eor	r0, r23
    397a:	0a d0       	rcall	.+20     	; 0x3990 <__divmodhi4_neg1>
    397c:	77 fd       	sbrc	r23, 7
    397e:	04 d0       	rcall	.+8      	; 0x3988 <__divmodhi4_neg2>
    3980:	0c d0       	rcall	.+24     	; 0x399a <__udivmodhi4>
    3982:	06 d0       	rcall	.+12     	; 0x3990 <__divmodhi4_neg1>
    3984:	00 20       	and	r0, r0
    3986:	1a f4       	brpl	.+6      	; 0x398e <__divmodhi4_exit>

00003988 <__divmodhi4_neg2>:
    3988:	70 95       	com	r23
    398a:	61 95       	neg	r22
    398c:	7f 4f       	sbci	r23, 0xFF	; 255

0000398e <__divmodhi4_exit>:
    398e:	08 95       	ret

00003990 <__divmodhi4_neg1>:
    3990:	f6 f7       	brtc	.-4      	; 0x398e <__divmodhi4_exit>
    3992:	90 95       	com	r25
    3994:	81 95       	neg	r24
    3996:	9f 4f       	sbci	r25, 0xFF	; 255
    3998:	08 95       	ret

0000399a <__udivmodhi4>:
    399a:	aa 1b       	sub	r26, r26
    399c:	bb 1b       	sub	r27, r27
    399e:	51 e1       	ldi	r21, 0x11	; 17
    39a0:	07 c0       	rjmp	.+14     	; 0x39b0 <__udivmodhi4_ep>

000039a2 <__udivmodhi4_loop>:
    39a2:	aa 1f       	adc	r26, r26
    39a4:	bb 1f       	adc	r27, r27
    39a6:	a6 17       	cp	r26, r22
    39a8:	b7 07       	cpc	r27, r23
    39aa:	10 f0       	brcs	.+4      	; 0x39b0 <__udivmodhi4_ep>
    39ac:	a6 1b       	sub	r26, r22
    39ae:	b7 0b       	sbc	r27, r23

000039b0 <__udivmodhi4_ep>:
    39b0:	88 1f       	adc	r24, r24
    39b2:	99 1f       	adc	r25, r25
    39b4:	5a 95       	dec	r21
    39b6:	a9 f7       	brne	.-22     	; 0x39a2 <__udivmodhi4_loop>
    39b8:	80 95       	com	r24
    39ba:	90 95       	com	r25
    39bc:	bc 01       	movw	r22, r24
    39be:	cd 01       	movw	r24, r26
    39c0:	08 95       	ret

000039c2 <__udivmodsi4>:
    39c2:	a1 e2       	ldi	r26, 0x21	; 33
    39c4:	1a 2e       	mov	r1, r26
    39c6:	aa 1b       	sub	r26, r26
    39c8:	bb 1b       	sub	r27, r27
    39ca:	fd 01       	movw	r30, r26
    39cc:	0d c0       	rjmp	.+26     	; 0x39e8 <__udivmodsi4_ep>

000039ce <__udivmodsi4_loop>:
    39ce:	aa 1f       	adc	r26, r26
    39d0:	bb 1f       	adc	r27, r27
    39d2:	ee 1f       	adc	r30, r30
    39d4:	ff 1f       	adc	r31, r31
    39d6:	a2 17       	cp	r26, r18
    39d8:	b3 07       	cpc	r27, r19
    39da:	e4 07       	cpc	r30, r20
    39dc:	f5 07       	cpc	r31, r21
    39de:	20 f0       	brcs	.+8      	; 0x39e8 <__udivmodsi4_ep>
    39e0:	a2 1b       	sub	r26, r18
    39e2:	b3 0b       	sbc	r27, r19
    39e4:	e4 0b       	sbc	r30, r20
    39e6:	f5 0b       	sbc	r31, r21

000039e8 <__udivmodsi4_ep>:
    39e8:	66 1f       	adc	r22, r22
    39ea:	77 1f       	adc	r23, r23
    39ec:	88 1f       	adc	r24, r24
    39ee:	99 1f       	adc	r25, r25
    39f0:	1a 94       	dec	r1
    39f2:	69 f7       	brne	.-38     	; 0x39ce <__udivmodsi4_loop>
    39f4:	60 95       	com	r22
    39f6:	70 95       	com	r23
    39f8:	80 95       	com	r24
    39fa:	90 95       	com	r25
    39fc:	9b 01       	movw	r18, r22
    39fe:	ac 01       	movw	r20, r24
    3a00:	bd 01       	movw	r22, r26
    3a02:	cf 01       	movw	r24, r30
    3a04:	08 95       	ret

00003a06 <__prologue_saves__>:
    3a06:	2f 92       	push	r2
    3a08:	3f 92       	push	r3
    3a0a:	4f 92       	push	r4
    3a0c:	5f 92       	push	r5
    3a0e:	6f 92       	push	r6
    3a10:	7f 92       	push	r7
    3a12:	8f 92       	push	r8
    3a14:	9f 92       	push	r9
    3a16:	af 92       	push	r10
    3a18:	bf 92       	push	r11
    3a1a:	cf 92       	push	r12
    3a1c:	df 92       	push	r13
    3a1e:	ef 92       	push	r14
    3a20:	ff 92       	push	r15
    3a22:	0f 93       	push	r16
    3a24:	1f 93       	push	r17
    3a26:	cf 93       	push	r28
    3a28:	df 93       	push	r29
    3a2a:	cd b7       	in	r28, 0x3d	; 61
    3a2c:	de b7       	in	r29, 0x3e	; 62
    3a2e:	ca 1b       	sub	r28, r26
    3a30:	db 0b       	sbc	r29, r27
    3a32:	0f b6       	in	r0, 0x3f	; 63
    3a34:	f8 94       	cli
    3a36:	de bf       	out	0x3e, r29	; 62
    3a38:	0f be       	out	0x3f, r0	; 63
    3a3a:	cd bf       	out	0x3d, r28	; 61
    3a3c:	09 94       	ijmp

00003a3e <__epilogue_restores__>:
    3a3e:	2a 88       	ldd	r2, Y+18	; 0x12
    3a40:	39 88       	ldd	r3, Y+17	; 0x11
    3a42:	48 88       	ldd	r4, Y+16	; 0x10
    3a44:	5f 84       	ldd	r5, Y+15	; 0x0f
    3a46:	6e 84       	ldd	r6, Y+14	; 0x0e
    3a48:	7d 84       	ldd	r7, Y+13	; 0x0d
    3a4a:	8c 84       	ldd	r8, Y+12	; 0x0c
    3a4c:	9b 84       	ldd	r9, Y+11	; 0x0b
    3a4e:	aa 84       	ldd	r10, Y+10	; 0x0a
    3a50:	b9 84       	ldd	r11, Y+9	; 0x09
    3a52:	c8 84       	ldd	r12, Y+8	; 0x08
    3a54:	df 80       	ldd	r13, Y+7	; 0x07
    3a56:	ee 80       	ldd	r14, Y+6	; 0x06
    3a58:	fd 80       	ldd	r15, Y+5	; 0x05
    3a5a:	0c 81       	ldd	r16, Y+4	; 0x04
    3a5c:	1b 81       	ldd	r17, Y+3	; 0x03
    3a5e:	aa 81       	ldd	r26, Y+2	; 0x02
    3a60:	b9 81       	ldd	r27, Y+1	; 0x01
    3a62:	ce 0f       	add	r28, r30
    3a64:	d1 1d       	adc	r29, r1
    3a66:	0f b6       	in	r0, 0x3f	; 63
    3a68:	f8 94       	cli
    3a6a:	de bf       	out	0x3e, r29	; 62
    3a6c:	0f be       	out	0x3f, r0	; 63
    3a6e:	cd bf       	out	0x3d, r28	; 61
    3a70:	ed 01       	movw	r28, r26
    3a72:	08 95       	ret

00003a74 <itoa>:
    3a74:	fb 01       	movw	r30, r22
    3a76:	9f 01       	movw	r18, r30
    3a78:	e8 94       	clt
    3a7a:	42 30       	cpi	r20, 0x02	; 2
    3a7c:	c4 f0       	brlt	.+48     	; 0x3aae <itoa+0x3a>
    3a7e:	45 32       	cpi	r20, 0x25	; 37
    3a80:	b4 f4       	brge	.+44     	; 0x3aae <itoa+0x3a>
    3a82:	4a 30       	cpi	r20, 0x0A	; 10
    3a84:	29 f4       	brne	.+10     	; 0x3a90 <itoa+0x1c>
    3a86:	97 fb       	bst	r25, 7
    3a88:	1e f4       	brtc	.+6      	; 0x3a90 <itoa+0x1c>
    3a8a:	90 95       	com	r25
    3a8c:	81 95       	neg	r24
    3a8e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a90:	64 2f       	mov	r22, r20
    3a92:	77 27       	eor	r23, r23
    3a94:	0e 94 cd 1c 	call	0x399a	; 0x399a <__udivmodhi4>
    3a98:	80 5d       	subi	r24, 0xD0	; 208
    3a9a:	8a 33       	cpi	r24, 0x3A	; 58
    3a9c:	0c f0       	brlt	.+2      	; 0x3aa0 <itoa+0x2c>
    3a9e:	89 5d       	subi	r24, 0xD9	; 217
    3aa0:	81 93       	st	Z+, r24
    3aa2:	cb 01       	movw	r24, r22
    3aa4:	00 97       	sbiw	r24, 0x00	; 0
    3aa6:	a1 f7       	brne	.-24     	; 0x3a90 <itoa+0x1c>
    3aa8:	16 f4       	brtc	.+4      	; 0x3aae <itoa+0x3a>
    3aaa:	5d e2       	ldi	r21, 0x2D	; 45
    3aac:	51 93       	st	Z+, r21
    3aae:	10 82       	st	Z, r1
    3ab0:	c9 01       	movw	r24, r18
    3ab2:	0c 94 5b 1d 	jmp	0x3ab6	; 0x3ab6 <strrev>

00003ab6 <strrev>:
    3ab6:	dc 01       	movw	r26, r24
    3ab8:	fc 01       	movw	r30, r24
    3aba:	67 2f       	mov	r22, r23
    3abc:	71 91       	ld	r23, Z+
    3abe:	77 23       	and	r23, r23
    3ac0:	e1 f7       	brne	.-8      	; 0x3aba <strrev+0x4>
    3ac2:	32 97       	sbiw	r30, 0x02	; 2
    3ac4:	04 c0       	rjmp	.+8      	; 0x3ace <strrev+0x18>
    3ac6:	7c 91       	ld	r23, X
    3ac8:	6d 93       	st	X+, r22
    3aca:	70 83       	st	Z, r23
    3acc:	62 91       	ld	r22, -Z
    3ace:	ae 17       	cp	r26, r30
    3ad0:	bf 07       	cpc	r27, r31
    3ad2:	c8 f3       	brcs	.-14     	; 0x3ac6 <strrev+0x10>
    3ad4:	08 95       	ret

00003ad6 <_exit>:
    3ad6:	f8 94       	cli

00003ad8 <__stop_program>:
    3ad8:	ff cf       	rjmp	.-2      	; 0x3ad8 <__stop_program>
